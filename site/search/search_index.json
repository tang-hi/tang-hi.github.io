{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\u200b\\-]"},"docs":[{"location":"","text":"Hi, I'm tang-hi, A software engineer. I'm learning Lucene , here is my PR for Lucene I'm interested in database and full text search engine Skill: C++, Java, Golang","title":"Home"},{"location":"C%2B%2B/rvo/","text":"Return Value Optimization ---- \u6c47\u7f16\u89c6\u89d2 \u4e4b\u6240\u4ee5\u5199\u8fd9\u7bc7\u6587\u7ae0\u662f\u56e0\u4e3a\u5728\u6cb9\u7ba1\u4e0a\u770b\u4e86Jon Kalb\u57282018\u5e74\u7684CppCon\u4e0a\u505a\u7684 \u6f14\u8bb2 \uff0c\u6df1\u53d7\u542f\u53d1\uff0c\u51b3\u5b9a\u6362\u4e00\u4e2a\u89c6\u89d2\u6765\u5ba1\u89c6C++\u7684RVO\u673a\u5236\u3002 1. calling conventions 1.1 \u8fd4\u56de\u503c\u4e3aint, float.... int simple () { return 1 ; } int main () { return 1 + simple (); } \u4e0a\u8ff0\u7684\u4ee3\u7801\u7ecf\u8fc7\u7f16\u8bd1\u540e\u5f97\u5230\u7684\u6c47\u7f16\u4ee3\u7801\u5982\u4e0b\u6240\u793a simple(): push rbp mov rbp, rsp mov eax, 1 pop rbp ret main: push rbp mov rbp, rsp call simple() add eax, 1 pop rbp ret \u56e0\u4e3a\u662fRVO\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u5173\u5fc3 return value \uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0simple\u4e2d\u7684\u4e00\u6761\u6c47\u7f16\u8bed\u53e5 move eax 1 ,\u8fd9\u6761\u8bed\u53e5\u5bf9\u5e94\u4e8esimple\u4e2d\u7684 return 1; \u4e5f\u5c31\u662f\u8bf4\u5728C++\u4e2d\uff0c\u6211\u4eec\u4f1a\u5c06\u9700\u8981\u8fd4\u56de\u7684\u503c\u5b58\u5728 rax \u5bc4\u5b58\u5668\u4e2d\u3002\u5f53\u7136\u524d\u63d0\u662frax\u53ef\u4ee5\u653e\u4e0b\u9700\u8981\u8fd4\u56de\u7684\u503c\u3002 1.2 \u8fd4\u56de\u503c\u4e3astruct\u7c7b\u578b \u5982\u679c\u8fd4\u56de\u503c\u4e3astruct\u7c7b\u578b\uff0c\u4e5f\u5c31\u662frax\u4e0d\u4e00\u5b9a\u53ef\u4ee5\u653e\u7684\u4e0b\u8be5\u7c7b\u578b\u5e94\u8be5\u600e\u4e48\u529e\uff1f \u89c2\u5bdf\u4e0b\u9762\u7684\u4ee3\u7801 struct BigObject { int data [ 6 ]; }; BigObject big () { return BigObject { 1 , 2 , 3 , 5 , 6 , 7 }; } int main () { BigObject bo = big (); return 0 ; } \u8be5\u4ee3\u7801\u7ecf\u8fc7\u7f16\u8bd1\u540e\u5f97\u5230\u7684\u6c47\u7f16\u4ee3\u7801\u5982\u4e0b\u6240\u793a big(): push rbp mov rbp, rsp mov QWORD PTR [rbp-8], rdi mov rax, QWORD PTR [rbp-8] mov DWORD PTR [rax], 1 mov rax, QWORD PTR [rbp-8] mov DWORD PTR [rax+4], 2 mov rax, QWORD PTR [rbp-8] mov DWORD PTR [rax+8], 3 mov rax, QWORD PTR [rbp-8] mov DWORD PTR [rax+12], 5 mov rax, QWORD PTR [rbp-8] mov DWORD PTR [rax+16], 6 mov rax, QWORD PTR [rbp-8] mov DWORD PTR [rax+20], 7 mov rax, QWORD PTR [rbp-8] pop rbp ret main: push rbp mov rbp, rsp sub rsp, 32 lea rax, [rbp-32] mov rdi, rax call big() mov eax, 0 leave ret \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4ecd\u65e7\u662f\u5c06\u8fd4\u56de\u503c\u5b58\u5165 rax \u4e2d\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u91cc\u7684 rax \u66f4\u50cf\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u901a\u8fc7offset\u5c06\u5bf9\u5e94\u7684\u503c\u5b58\u5165 mov DWORD PTR [rax+4], 2 \u6574\u4e2a\u8c03\u7528\u8fc7\u7a0b\u6211\u4eec\u7528\u4e24\u5f20\u56fe\u6765\u8fdb\u884c\u603b\u7ed3 \u6574\u4e2a\u8c03\u7528\u8fc7\u7a0b\u5c31\u7b97\u4e0d\u592a\u4e86\u89e3\u4e5f\u6ca1\u6709\u5173\u7cfb\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8bb0\u4f4f\u51fd\u6570\u7684\u8fd4\u56de\u503c\u4e00\u5b9a\u662f\u5b58\u5728 rax \u4e2d\uff0c\u533a\u522b\u5728\u4e8e\u662f\u628a rax \u5f53\u4f5cint\u8fd9\u79cd\u6807\u91cf\uff0c\u8fd8\u662f\u5f53\u4f5c\u6307\u9488\u5bf9\u5f85\u3002 2 \u4f7f\u7528RAX\u5b9e\u73b0RVO RVO\u5b9e\u9645\u4e0a\u5c31\u662f\u5728\u51fd\u6570\u8fd4\u56de\u65f6\uff0c\u5c06\u539f\u672c\u9700\u8981\u8fdb\u884c\u7684\u62f7\u8d1d\u64cd\u4f5c\u7701\u7565\u6389\uff0c\u90a3\u4e48\u600e\u4e48\u5b9e\u73b0\u5462\uff1f\u901a\u8fc7\u4e0a\u9762\u7684\u63cf\u8ff0\uff0c\u6211\u4eec\u77e5\u9053\u8fd4\u56de\u503c\u5b9e\u9645\u90fd\u5728 rax \u4e2d\uff0c\u90a3\u4e48\u53ea\u8981\u6211\u4eec\u5728\u8c03\u7528\u51fd\u6570\u524d\uff0c\u81ea\u5df1\u5f00\u8f9f\u4e00\u5757\u7a7a\u95f4\uff08\u5728\u6808\u5e27\u4e2d\uff09\uff0c\u7136\u540e\u5c06\u8fd9\u5757\u7a7a\u95f4\u7684\u5730\u5740\u7ed9\u5230 rax \uff0c\u7b49\u5230\u51fd\u6570\u8fd4\u56de\u65f6\uff0c\u6211\u4eec\u5c31\u65e0\u987b\u5bf9\u8fd4\u56de\u7684\u4e34\u65f6\u53d8\u91cf\u8fdb\u884c\u62f7\u8d1d\uff0c\u56e0\u4e3a\u8fd4\u56de\u503c\u5df2\u7ecf\u5728 rax \uff08\u6211\u4eec\u5f00\u8f9f\u7684\u7a7a\u95f4\uff09\u4e2d\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u3002 \u8fd8\u662f\u7528\u4e00\u5f20\u56fe\u6765\u603b\u7ed3\u8fd9\u4e2a\u8fc7\u7a0b\u3002 3.RVO \u7684\u9002\u7528\u573a\u666f \u5f53\u7c97\u7565\u7684\u4e86\u89e3\u4e86RVO\u7684\u5b9e\u73b0\u539f\u7406\u540e\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\uff0c\u4ece\u53e6\u4e00\u79cd\u89c6\u89d2\u5bf9RVO\u7684\u9002\u7528\u573a\u666f\u8fdb\u884c\u5ba1\u89c6\u3002 3.1 unamed rvo Foo URVO () { return Foo (); } Foo foo = URVO (); \u8fd9\u79cd\u573a\u666f\u4e0b\uff0c\u56e0\u4e3a\u6574\u4e2a\u8fd4\u56de\u503c\u90fd\u662f\u4e34\u65f6\u53d8\u91cf\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5728\u5f00\u8f9f\u7684\u7a7a\u95f4\u4e2d\u8fdb\u884c\u6784\u9020\uff0c\u65e0\u9700\u62f7\u8d1d\u3002\u56e0\u6b64\u8fd9\u79cd\u573a\u666f\u4e0b\uff0cRVO\u662f\u53ef\u4ee5\u88ab\u4f7f\u7528\u7684\u3002 3.1 named rvo Foo NRVO () { Foo foo ; return foo ; } Foo foo = NRVO (); \u8fd9\u79cd\u573a\u666f\u4e0b\uff0c\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u5728\u5f00\u8f9f\u7684\u7a7a\u95f4\u4e2d\u76f4\u63a5\u5bf9\u5c40\u90e8\u53d8\u91cf\u8fdb\u884c\u6784\u9020\u3002\u56e0\u6b64\u8fd9\u79cd\u573a\u666f\u4e0b\uff0cRVO\u662f\u53ef\u4ee5\u88ab\u4f7f\u7528\u7684\u3002 3.3 named rvo with compile-time condition Foo NRVO_Compile_BRANCH ( int x ) { Foo foo ; if ( x % 2 == 0 ) { return foo ; } else { return foo ; } } Foo foo = NRVO_Compile_BRANCH (); \u8fd9\u79cd\u573a\u666f\u4e0b\uff0c\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\uff0c\u5e76\u4e14\u4e0d\u8bba\u6761\u4ef6\u53d8\u91cf\u5982\u4f55\uff0c\u6211\u4eec\u90fd\u660e\u786e\u53ea\u8fd4\u56de\u90a3\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf(\u7f16\u8bd1\u671f\u5373\u53ef\u786e\u5b9a)\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5728\u5f00\u8f9f\u7684\u7a7a\u95f4\u4e2d\u6784\u9020\u5c40\u90e8\u53d8\u91cf\uff0crvo\u9002\u7528\u3002 3.4 named rvo with run-time condition Foo NRVO_RUNTIME_BRANCH ( int x ) { Foo foo , foo1 ; if ( x % 2 == 0 ) { return foo ; } return foo1 ; } Foo foo = NRVO_RUNTIME_BRANCH (); \u8fd9\u79cd\u573a\u666f\u4e0b\uff0c\u6211\u4eec\u6709\u4e24\u4e2a\u5c40\u90e8\u53d8\u91cf\uff0c\u4e14\u8fd9\u4e24\u4e2a\u5c40\u90e8\u53d8\u91cf\u90fd\u6709\u53ef\u80fd\u6210\u4e3a\u8fd4\u56de\u503c\uff0c\u53ea\u6709\u5728runtime\u6211\u4eec\u624d\u80fd\u786e\u5b9a\uff0c\u56e0\u6b64\u6211\u4eec\u65e0\u6cd5\u76f4\u63a5\u5728\u5f00\u8f9f\u7684\u7a7a\u95f4\u4e2d\u8fdb\u884c\u6784\u9020\uff08\u56e0\u4e3a\u53ea\u6709\u8fd0\u884c\u5230return\u65f6\uff0c\u6211\u4eec\u624d\u77e5\u9053\u90a3\u4e00\u4e2a\u662f\u8fd4\u56de\u503c\uff0c\u800c\u8fd9\u65f6\u5019\u8be5\u503c\u65e9\u5c31\u5df2\u7ecf\u6784\u9020\u597d\u4e86\uff09,\u53ea\u80fd\u901a\u8fc7\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u8fdb\u884c\u751f\u6210\uff0crvo\u4e0d\u9002\u7528\u3002 3.5 return global variable Foo Global_FOO () { return global_foo ; } Foo foo = Global_FOO (); \u5c3d\u7ba1\u5f88\u591a\u535a\u5ba2\u6587\u7ae0\u90fd\u8bf4\u8fd9\u79cd\u573a\u666f\u4e0b\uff0c\u4e0d\u4f1a\u4f7f\u7528RVO\uff0c\u4f46\u662f\u7ecf\u8fc7\u6d4b\u8bd5\u7ed3\u679c\u663e\u793a\uff0c\u867d\u7136\u6211\u4eec\u8fd4\u56de\u7684\u662f\u5168\u5c40\u53d8\u91cf\uff0c\u8be5\u53d8\u91cf\u65e9\u5c31\u5df2\u7ecf\u6784\u9020\u5b8c\u6210\uff0c\u6709\u5b83\u4e13\u5c5e\u7684\u7269\u7406\u5730\u5740\uff0c\u4f46\u662f\u6211\u4eec\u4f9d\u7136\u53ef\u4ee5\u5728\u8fd4\u56de\u5730\u5740\u5904\u76f4\u63a5\u4f7f\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u8fdb\u884c\u751f\u6210\u3002rvo\u9002\u7528\u3002 \u4ee5\u4e0b\u662f\u6211\u505a\u7684\u5b9e\u9a8c struct Foo { Foo () : data ( 0 ), id ( ++ version ) { ++ object_create ; cout << \"Foo ctor, version :\" << id << endl ; } Foo ( const Foo & rhs ) : data ( rhs . data ), id ( ++ version ), aaaa ( rhs . aaaa ) { ++ object_create ; cout << \"Foo copy ctor, version: \" << rhs . id << \" -> \" << id << endl ; } Foo & operator = ( const Foo & rhs ) { data = rhs . data ; cout << \"Foo copy assign version: \" << rhs . id << \" -> \" << id << endl ; return * this ; } ~ Foo () { cout << \"Foo destory version: \" << id << endl ; } /* data */ int data ; int id ; }; Foo global_foo ; Foo foo1 = Global_FOO (); --------------------------------------------------------------- g ++ - o enable - O0 - std = c ++ 98 & . / enable Foo copy ctor , version : 1 -> 1 Foo destory version : 1 create 1 objects g ++ - o disable - O0 - std = c ++ 98 - fno - elide - constructors & . / disable Foo copy ctor , version : 1 -> 1 Foo copy ctor , version : 1 -> 2 Foo destory version : 1 Foo destory version : 2 create 2 objects \u53ef\u4ee5\u770b\u5230\u5f00\u542frvo\u65f6\u7684\u786e\u5c11\u8c03\u7528\u4e00\u6b21\u62f7\u8d1d\u6784\u9020\u51fd\u6570,\u5f53\u7136\u5176\u5b9e\u8fd9\u4e5f\u53ef\u4ee5\u8ba4\u4e3a\u662f\u5bf9unamed\u7684rvo\u4f18\u5316\uff0c\u800c\u4e0d\u662fglobal\u7684\u3002 3.6 return parameter Foo Return_Para ( Foo foo ) { return foo ; } Foo foo = Return_Para (); \u8fd9\u79cd\u573a\u666f\u4e0b\uff0c\u548c\u4e0a\u4e00\u4e2a\u573a\u666f\u5f88\u76f8\u4f3c\uff0c\u5c3d\u7ba1\u90fd\u9700\u8981\u5bf9\u53c2\u6570\u8fdb\u884c\u4e00\u6b21\u62f7\u8d1d\uff0c\u4f46\u662fRVO\u53ef\u4ee5\u5728\u8fd4\u56de\u65f6\u8fdb\u884c\u4f18\u5316\u76f4\u63a5\u62f7\u8d1d\u5230\u65b0\u5f00\u8f9f\u7684\u7a7a\u95f4\u4e2d\uff0c\u4ece\u800c\u76f8\u6bd4\u4e0e\u7981\u6b62RVO\u5c11\u8c03\u7528\u4e00\u6b21\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002 \u8fd9\u6b21\u6211\u4eec\u901a\u8fc7\u6c47\u7f16\u4ee3\u7801\u8fdb\u884c\u8bba\u8bc1 \u5f00\u542fRVO\u7684\u6c47\u7f16\u4ee3\u7801 \u53ef\u4ee5\u770b\u5230\u6574\u4e2a\u8fc7\u7a0b\u4e2d\u4ec5\u4ec5\u53ea\u8c03\u7528\u4e86\u4e00\u6b21\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002 \u5173\u95edRVO\u7684\u6c47\u7f16\u4ee3\u7801 \u53ef\u4ee5\u770b\u5230\u4e00\u5171\u8c03\u7528\u4e86\u4e24\u6b21\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u8fd9\u8bc1\u660e\u4e86RVO\u786e\u5b9e\u5728\u53d1\u751f\u4f5c\u7528\u3002 3.7 return by move Foo Return_BY_MOVE () { Foo foo ; return std :: move ( foo ); } Foo foo = Return_BY_MOVE (); \u8fd9\u4e2a\u6ca1\u6709\u4ec0\u4e48\u597d\u8bf4\u7684\uff0cC++\u6807\u51c6\u4e0d\u5141\u8bb8\uff0c\u5f53\u4f60\u4f7f\u7528 std::move \u65f6\uff0c\u4f1a\u7981\u7528RVO\u3002 3.8 \u4e00\u4e2a\u6ca1\u5565\u7528\u7684\u53d1\u73b0 \u5f53\u4f60\u7684class\u6ca1\u6709\u81ea\u5df1\u5199\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u5e76\u4e14\u91cc\u9762\u7684\u6210\u5458\u53d8\u91cf\u90fd\u662f\u6ca1\u6709\u81ea\u5df1\u5b9a\u4e49\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u8fd9\u65f6\u5019\u5f00\u542fRVO\uff0c\u7f16\u8bd1\u5668\u751a\u81f3\u4e0d\u4f1a\u7ed9\u4f60\u751f\u6210\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002 \u6d4b\u8bd5\u4ee3\u7801 struct Foo { Foo () : data ( 0 ), id ( ++ version ) { ++ object_create ; cout << \"Foo ctor, version :\" << id << endl ; } // Foo(const Foo &rhs) : data(rhs.data), id(++version) { // ++object_create; // cout << \"Foo copy ctor, version: \" << rhs.id << \" -> \" << id << endl; // } // Foo &operator=(const Foo &rhs) { // data = rhs.data; // cout << \"Foo copy assign version: \" << rhs.id << \" -> \" << id << endl; // return *this; // } ~ Foo () { cout << \"Foo destory version: \" << id << endl ; } /* data */ int data ; int id ; // std::vector<int> vec; }; \u5f00\u542fRVO\u751f\u6210\u7684\u6c47\u7f16\u4ee3\u7801 \u53ef\u4ee5\u770b\u5230\u5b8c\u5168\u5c31\u662f\u5bc4\u5b58\u5668\u548c\u5806\u6808\u7684\u8fd0\u7b97\u3002 \u5f53\u4f60\u5173\u95edRVO\uff0c\u751f\u6210\u7684\u6c47\u7f16\u4ee3\u7801 \u7f16\u8bd1\u5668\u4f1a\u4e3a\u4f60\u751f\u6210\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u5e76\u4e14\u88ab\u8c03\u7528\u3002 \u4f46\u5982\u679c \u4f60\u7684class\u6ca1\u6709\u81ea\u5df1\u5199\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u5e76\u4e14\u91cc\u9762\u7684\u6210\u5458\u53d8\u91cf\u90fd\u662f\u6ca1\u6709\u81ea\u5df1\u5b9a\u4e49\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570 \u8fd9\u4e24\u4e2a\u6761\u4ef6\u6709\u4e00\u4e2a\u6ca1\u6ee1\u8db3\uff0c\u7f16\u8bd1\u5668\u90fd\u4f1a\u4e3a\u4f60\u751f\u6210\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002 \u603b\u7ed3\uff0cRVO\u53ea\u8981\u88ab\u5f00\u542f\uff0c\u5f53\u4f60\u8fd4\u56de\u65f6\u57fa\u672c\u603b\u662f\u4f1a\u88ab\u4f7f\u7528\uff0c\u5373\u76f4\u63a5\u5728\u5f00\u8f9f\u7684\u65b0\u7a7a\u95f4\u4e2d\u76f4\u63a5\u8fdb\u884c\u751f\u6210\uff0c\u4ece\u800c\u8282\u7701\u4e86\u4e00\u6b21\u62f7\u8d1d\u3002\u4f46\u5bf9\u4e8e\u67d0\u4e9b\u7279\u6b8a\u7684\u60c5\u51b5\uff0c\u4f8b\u5982\u8fd4\u56de\u53c2\u6570\uff0c\u8fd4\u56de\u5168\u5c40\u53d8\u91cf\u65f6\uff0c\u5bf9\u8fd9\u79cd\u5bf9\u8c61\u7684\u62f7\u8d1d\u662f\u65e0\u6cd5\u88ab\u7701\u7565\u7684\u3002 RVO\u4e0estd::move \u5f53std::move\u53c2\u4e0e\u5230rvo\u65f6\uff0c\u60c5\u51b5\u53c8\u4f1a\u6709\u70b9\u5fae\u5999\u3002 \u5148\u8bf4\u4e00\u4e2a\u975e\u5e38\u4e00\u822c\uff0c\u5e76\u4e14\u7edd\u5927\u591a\u6570\u90fd\u5bf9\u7684\u7ed3\u8bba\uff0c \u5f53class\u53ef\u4ee5\u88abmove\uff0c\u90a3\u4e48\u5f53\u4f60\u8fd4\u56de\u65f6\uff0c\u5982\u679c\u53ef\u4ee5\u76f4\u63a5\u6784\u9020\u90a3\u4e48\u76f4\u63a5\u6784\u9020\uff0c\u5982\u679c\u4e0d\u80fd\uff0c\u8c03\u7528\u79fb\u52a8\u6784\u9020\u51fd\u6570 \u5176\u5b9e\u7528\u4e00\u53e5\u8bdd\u8bf4\uff0c\u4f60return\u7684\u503c\u4f1a\u88ab\u5f53\u4f5c\u53f3\u503c\u5904\u7406\uff0c\u8981\u4e48\u4f7f\u7528RVO\uff0c\u8981\u4e48\u4f7f\u7528\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff0c\u4f46\u4e5f\u6709\u4f8b\u5916\u3002 \u6211\u4eec\u5148\u770b\u5b98\u7f51\u6587\u6863 \u6ce8\u610f\u8fd9\u91cc\u52a0\u7c97\u7684\u610f\u601d\u662f\u8bf4\u5982\u679c\u6211\u4eecreturn\u7684\u7c7b\u578b\u548c\u51fd\u6570\u7533\u660e\u7684\u8fd4\u56de\u7c7b\u578b\u5bf9\u4e0d\u4e0a\uff0c\u90a3\u4e48\u5c31\u4f1a\u628a\u8fd4\u56de\u503c\u770b\u4f5c\u5de6\u503c\u4e5f\u5c31\u662f\u4f1a\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002\u4f8b\u5982 struct Foo { Foo () : data ( 0 ), id ( ++ version ) { ++ object_create ; cout << \"Foo ctor, version :\" << id << endl ; } Foo ( const Foo & rhs ) : data ( rhs . data ), id ( ++ version ), aaaa ( rhs . aaaa ) { ++ object_create ; cout << \"Foo copy ctor, version: \" << rhs . id << \" -> \" << id << endl ; } Foo ( Foo && rhs ) : data { rhs . data }, id { ++ version } { cout << \"Foo move ctor, version: \" << rhs . id << \" -> \" << id << endl ; } Foo & operator = ( const Foo & rhs ) { data = rhs . data ; cout << \"Foo copy assign version: \" << rhs . id << \" -> \" << id << endl ; return * this ; } Foo & operator = ( Foo && rhs ) { data = rhs . data ; cout << \"Foo move assign version: \" << rhs . id << \" -> \" << id << endl ; return * this ; } ~ Foo () { cout << \"Foo destory version: \" << id << endl ; } /* data */ int data ; int id ; Complex complex ; std :: vector < int > aaaa ; }; struct FOOS : public FOO { } FOO return_derived () { FOOS foos ; return foos ; // treat is as lvalue } \u56e0\u4e3aFOOS\u5e76\u4e0d\u5b8c\u5168\u662fFOO\uff0c\u6240\u4ee5\u4e0eFOO(FOO &&rhs)\u5bf9\u4e0d\u4e0a\uff0c\u56e0\u6b64\u4f1a\u5c06\u8fd4\u56de\u503c\u89c6\u4f5c\u5de6\u503c\uff0c\u5bfc\u81f4RVO\uff0cmove\u90fd\u65e0\u6cd5\u4f7f\u7528\u3002 \u81f3\u6b64\uff0c\u6211\u5bf9\u4e8eRVO\u7684\u603b\u7ed3\u5c31\u5168\u90e8\u5b8c\u6210\u4e86\u3002","title":"Return Value optimization"},{"location":"C%2B%2B/rvo/#return-value-optimization-","text":"\u4e4b\u6240\u4ee5\u5199\u8fd9\u7bc7\u6587\u7ae0\u662f\u56e0\u4e3a\u5728\u6cb9\u7ba1\u4e0a\u770b\u4e86Jon Kalb\u57282018\u5e74\u7684CppCon\u4e0a\u505a\u7684 \u6f14\u8bb2 \uff0c\u6df1\u53d7\u542f\u53d1\uff0c\u51b3\u5b9a\u6362\u4e00\u4e2a\u89c6\u89d2\u6765\u5ba1\u89c6C++\u7684RVO\u673a\u5236\u3002","title":"Return Value Optimization ---- \u6c47\u7f16\u89c6\u89d2"},{"location":"C%2B%2B/rvo/#1-calling-conventions","text":"","title":"1. calling conventions"},{"location":"C%2B%2B/rvo/#11-int-float","text":"int simple () { return 1 ; } int main () { return 1 + simple (); } \u4e0a\u8ff0\u7684\u4ee3\u7801\u7ecf\u8fc7\u7f16\u8bd1\u540e\u5f97\u5230\u7684\u6c47\u7f16\u4ee3\u7801\u5982\u4e0b\u6240\u793a simple(): push rbp mov rbp, rsp mov eax, 1 pop rbp ret main: push rbp mov rbp, rsp call simple() add eax, 1 pop rbp ret \u56e0\u4e3a\u662fRVO\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u5173\u5fc3 return value \uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0simple\u4e2d\u7684\u4e00\u6761\u6c47\u7f16\u8bed\u53e5 move eax 1 ,\u8fd9\u6761\u8bed\u53e5\u5bf9\u5e94\u4e8esimple\u4e2d\u7684 return 1; \u4e5f\u5c31\u662f\u8bf4\u5728C++\u4e2d\uff0c\u6211\u4eec\u4f1a\u5c06\u9700\u8981\u8fd4\u56de\u7684\u503c\u5b58\u5728 rax \u5bc4\u5b58\u5668\u4e2d\u3002\u5f53\u7136\u524d\u63d0\u662frax\u53ef\u4ee5\u653e\u4e0b\u9700\u8981\u8fd4\u56de\u7684\u503c\u3002","title":"1.1 \u8fd4\u56de\u503c\u4e3aint, float...."},{"location":"C%2B%2B/rvo/#12-struct","text":"\u5982\u679c\u8fd4\u56de\u503c\u4e3astruct\u7c7b\u578b\uff0c\u4e5f\u5c31\u662frax\u4e0d\u4e00\u5b9a\u53ef\u4ee5\u653e\u7684\u4e0b\u8be5\u7c7b\u578b\u5e94\u8be5\u600e\u4e48\u529e\uff1f \u89c2\u5bdf\u4e0b\u9762\u7684\u4ee3\u7801 struct BigObject { int data [ 6 ]; }; BigObject big () { return BigObject { 1 , 2 , 3 , 5 , 6 , 7 }; } int main () { BigObject bo = big (); return 0 ; } \u8be5\u4ee3\u7801\u7ecf\u8fc7\u7f16\u8bd1\u540e\u5f97\u5230\u7684\u6c47\u7f16\u4ee3\u7801\u5982\u4e0b\u6240\u793a big(): push rbp mov rbp, rsp mov QWORD PTR [rbp-8], rdi mov rax, QWORD PTR [rbp-8] mov DWORD PTR [rax], 1 mov rax, QWORD PTR [rbp-8] mov DWORD PTR [rax+4], 2 mov rax, QWORD PTR [rbp-8] mov DWORD PTR [rax+8], 3 mov rax, QWORD PTR [rbp-8] mov DWORD PTR [rax+12], 5 mov rax, QWORD PTR [rbp-8] mov DWORD PTR [rax+16], 6 mov rax, QWORD PTR [rbp-8] mov DWORD PTR [rax+20], 7 mov rax, QWORD PTR [rbp-8] pop rbp ret main: push rbp mov rbp, rsp sub rsp, 32 lea rax, [rbp-32] mov rdi, rax call big() mov eax, 0 leave ret \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4ecd\u65e7\u662f\u5c06\u8fd4\u56de\u503c\u5b58\u5165 rax \u4e2d\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u91cc\u7684 rax \u66f4\u50cf\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u901a\u8fc7offset\u5c06\u5bf9\u5e94\u7684\u503c\u5b58\u5165 mov DWORD PTR [rax+4], 2 \u6574\u4e2a\u8c03\u7528\u8fc7\u7a0b\u6211\u4eec\u7528\u4e24\u5f20\u56fe\u6765\u8fdb\u884c\u603b\u7ed3 \u6574\u4e2a\u8c03\u7528\u8fc7\u7a0b\u5c31\u7b97\u4e0d\u592a\u4e86\u89e3\u4e5f\u6ca1\u6709\u5173\u7cfb\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8bb0\u4f4f\u51fd\u6570\u7684\u8fd4\u56de\u503c\u4e00\u5b9a\u662f\u5b58\u5728 rax \u4e2d\uff0c\u533a\u522b\u5728\u4e8e\u662f\u628a rax \u5f53\u4f5cint\u8fd9\u79cd\u6807\u91cf\uff0c\u8fd8\u662f\u5f53\u4f5c\u6307\u9488\u5bf9\u5f85\u3002","title":"1.2 \u8fd4\u56de\u503c\u4e3astruct\u7c7b\u578b"},{"location":"C%2B%2B/rvo/#2-raxrvo","text":"RVO\u5b9e\u9645\u4e0a\u5c31\u662f\u5728\u51fd\u6570\u8fd4\u56de\u65f6\uff0c\u5c06\u539f\u672c\u9700\u8981\u8fdb\u884c\u7684\u62f7\u8d1d\u64cd\u4f5c\u7701\u7565\u6389\uff0c\u90a3\u4e48\u600e\u4e48\u5b9e\u73b0\u5462\uff1f\u901a\u8fc7\u4e0a\u9762\u7684\u63cf\u8ff0\uff0c\u6211\u4eec\u77e5\u9053\u8fd4\u56de\u503c\u5b9e\u9645\u90fd\u5728 rax \u4e2d\uff0c\u90a3\u4e48\u53ea\u8981\u6211\u4eec\u5728\u8c03\u7528\u51fd\u6570\u524d\uff0c\u81ea\u5df1\u5f00\u8f9f\u4e00\u5757\u7a7a\u95f4\uff08\u5728\u6808\u5e27\u4e2d\uff09\uff0c\u7136\u540e\u5c06\u8fd9\u5757\u7a7a\u95f4\u7684\u5730\u5740\u7ed9\u5230 rax \uff0c\u7b49\u5230\u51fd\u6570\u8fd4\u56de\u65f6\uff0c\u6211\u4eec\u5c31\u65e0\u987b\u5bf9\u8fd4\u56de\u7684\u4e34\u65f6\u53d8\u91cf\u8fdb\u884c\u62f7\u8d1d\uff0c\u56e0\u4e3a\u8fd4\u56de\u503c\u5df2\u7ecf\u5728 rax \uff08\u6211\u4eec\u5f00\u8f9f\u7684\u7a7a\u95f4\uff09\u4e2d\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u3002 \u8fd8\u662f\u7528\u4e00\u5f20\u56fe\u6765\u603b\u7ed3\u8fd9\u4e2a\u8fc7\u7a0b\u3002","title":"2 \u4f7f\u7528RAX\u5b9e\u73b0RVO"},{"location":"C%2B%2B/rvo/#3rvo","text":"\u5f53\u7c97\u7565\u7684\u4e86\u89e3\u4e86RVO\u7684\u5b9e\u73b0\u539f\u7406\u540e\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\uff0c\u4ece\u53e6\u4e00\u79cd\u89c6\u89d2\u5bf9RVO\u7684\u9002\u7528\u573a\u666f\u8fdb\u884c\u5ba1\u89c6\u3002","title":"3.RVO \u7684\u9002\u7528\u573a\u666f"},{"location":"C%2B%2B/rvo/#31-unamed-rvo","text":"Foo URVO () { return Foo (); } Foo foo = URVO (); \u8fd9\u79cd\u573a\u666f\u4e0b\uff0c\u56e0\u4e3a\u6574\u4e2a\u8fd4\u56de\u503c\u90fd\u662f\u4e34\u65f6\u53d8\u91cf\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5728\u5f00\u8f9f\u7684\u7a7a\u95f4\u4e2d\u8fdb\u884c\u6784\u9020\uff0c\u65e0\u9700\u62f7\u8d1d\u3002\u56e0\u6b64\u8fd9\u79cd\u573a\u666f\u4e0b\uff0cRVO\u662f\u53ef\u4ee5\u88ab\u4f7f\u7528\u7684\u3002","title":"3.1 unamed rvo"},{"location":"C%2B%2B/rvo/#31-named-rvo","text":"Foo NRVO () { Foo foo ; return foo ; } Foo foo = NRVO (); \u8fd9\u79cd\u573a\u666f\u4e0b\uff0c\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u5728\u5f00\u8f9f\u7684\u7a7a\u95f4\u4e2d\u76f4\u63a5\u5bf9\u5c40\u90e8\u53d8\u91cf\u8fdb\u884c\u6784\u9020\u3002\u56e0\u6b64\u8fd9\u79cd\u573a\u666f\u4e0b\uff0cRVO\u662f\u53ef\u4ee5\u88ab\u4f7f\u7528\u7684\u3002","title":"3.1 named rvo"},{"location":"C%2B%2B/rvo/#33-named-rvo-with-compile-time-condition","text":"Foo NRVO_Compile_BRANCH ( int x ) { Foo foo ; if ( x % 2 == 0 ) { return foo ; } else { return foo ; } } Foo foo = NRVO_Compile_BRANCH (); \u8fd9\u79cd\u573a\u666f\u4e0b\uff0c\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\uff0c\u5e76\u4e14\u4e0d\u8bba\u6761\u4ef6\u53d8\u91cf\u5982\u4f55\uff0c\u6211\u4eec\u90fd\u660e\u786e\u53ea\u8fd4\u56de\u90a3\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf(\u7f16\u8bd1\u671f\u5373\u53ef\u786e\u5b9a)\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5728\u5f00\u8f9f\u7684\u7a7a\u95f4\u4e2d\u6784\u9020\u5c40\u90e8\u53d8\u91cf\uff0crvo\u9002\u7528\u3002","title":"3.3 named rvo with compile-time condition"},{"location":"C%2B%2B/rvo/#34-named-rvo-with-run-time-condition","text":"Foo NRVO_RUNTIME_BRANCH ( int x ) { Foo foo , foo1 ; if ( x % 2 == 0 ) { return foo ; } return foo1 ; } Foo foo = NRVO_RUNTIME_BRANCH (); \u8fd9\u79cd\u573a\u666f\u4e0b\uff0c\u6211\u4eec\u6709\u4e24\u4e2a\u5c40\u90e8\u53d8\u91cf\uff0c\u4e14\u8fd9\u4e24\u4e2a\u5c40\u90e8\u53d8\u91cf\u90fd\u6709\u53ef\u80fd\u6210\u4e3a\u8fd4\u56de\u503c\uff0c\u53ea\u6709\u5728runtime\u6211\u4eec\u624d\u80fd\u786e\u5b9a\uff0c\u56e0\u6b64\u6211\u4eec\u65e0\u6cd5\u76f4\u63a5\u5728\u5f00\u8f9f\u7684\u7a7a\u95f4\u4e2d\u8fdb\u884c\u6784\u9020\uff08\u56e0\u4e3a\u53ea\u6709\u8fd0\u884c\u5230return\u65f6\uff0c\u6211\u4eec\u624d\u77e5\u9053\u90a3\u4e00\u4e2a\u662f\u8fd4\u56de\u503c\uff0c\u800c\u8fd9\u65f6\u5019\u8be5\u503c\u65e9\u5c31\u5df2\u7ecf\u6784\u9020\u597d\u4e86\uff09,\u53ea\u80fd\u901a\u8fc7\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u8fdb\u884c\u751f\u6210\uff0crvo\u4e0d\u9002\u7528\u3002","title":"3.4 named rvo with run-time condition"},{"location":"C%2B%2B/rvo/#35-return-global-variable","text":"Foo Global_FOO () { return global_foo ; } Foo foo = Global_FOO (); \u5c3d\u7ba1\u5f88\u591a\u535a\u5ba2\u6587\u7ae0\u90fd\u8bf4\u8fd9\u79cd\u573a\u666f\u4e0b\uff0c\u4e0d\u4f1a\u4f7f\u7528RVO\uff0c\u4f46\u662f\u7ecf\u8fc7\u6d4b\u8bd5\u7ed3\u679c\u663e\u793a\uff0c\u867d\u7136\u6211\u4eec\u8fd4\u56de\u7684\u662f\u5168\u5c40\u53d8\u91cf\uff0c\u8be5\u53d8\u91cf\u65e9\u5c31\u5df2\u7ecf\u6784\u9020\u5b8c\u6210\uff0c\u6709\u5b83\u4e13\u5c5e\u7684\u7269\u7406\u5730\u5740\uff0c\u4f46\u662f\u6211\u4eec\u4f9d\u7136\u53ef\u4ee5\u5728\u8fd4\u56de\u5730\u5740\u5904\u76f4\u63a5\u4f7f\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u8fdb\u884c\u751f\u6210\u3002rvo\u9002\u7528\u3002 \u4ee5\u4e0b\u662f\u6211\u505a\u7684\u5b9e\u9a8c struct Foo { Foo () : data ( 0 ), id ( ++ version ) { ++ object_create ; cout << \"Foo ctor, version :\" << id << endl ; } Foo ( const Foo & rhs ) : data ( rhs . data ), id ( ++ version ), aaaa ( rhs . aaaa ) { ++ object_create ; cout << \"Foo copy ctor, version: \" << rhs . id << \" -> \" << id << endl ; } Foo & operator = ( const Foo & rhs ) { data = rhs . data ; cout << \"Foo copy assign version: \" << rhs . id << \" -> \" << id << endl ; return * this ; } ~ Foo () { cout << \"Foo destory version: \" << id << endl ; } /* data */ int data ; int id ; }; Foo global_foo ; Foo foo1 = Global_FOO (); --------------------------------------------------------------- g ++ - o enable - O0 - std = c ++ 98 & . / enable Foo copy ctor , version : 1 -> 1 Foo destory version : 1 create 1 objects g ++ - o disable - O0 - std = c ++ 98 - fno - elide - constructors & . / disable Foo copy ctor , version : 1 -> 1 Foo copy ctor , version : 1 -> 2 Foo destory version : 1 Foo destory version : 2 create 2 objects \u53ef\u4ee5\u770b\u5230\u5f00\u542frvo\u65f6\u7684\u786e\u5c11\u8c03\u7528\u4e00\u6b21\u62f7\u8d1d\u6784\u9020\u51fd\u6570,\u5f53\u7136\u5176\u5b9e\u8fd9\u4e5f\u53ef\u4ee5\u8ba4\u4e3a\u662f\u5bf9unamed\u7684rvo\u4f18\u5316\uff0c\u800c\u4e0d\u662fglobal\u7684\u3002","title":"3.5 return global variable"},{"location":"C%2B%2B/rvo/#36-return-parameter","text":"Foo Return_Para ( Foo foo ) { return foo ; } Foo foo = Return_Para (); \u8fd9\u79cd\u573a\u666f\u4e0b\uff0c\u548c\u4e0a\u4e00\u4e2a\u573a\u666f\u5f88\u76f8\u4f3c\uff0c\u5c3d\u7ba1\u90fd\u9700\u8981\u5bf9\u53c2\u6570\u8fdb\u884c\u4e00\u6b21\u62f7\u8d1d\uff0c\u4f46\u662fRVO\u53ef\u4ee5\u5728\u8fd4\u56de\u65f6\u8fdb\u884c\u4f18\u5316\u76f4\u63a5\u62f7\u8d1d\u5230\u65b0\u5f00\u8f9f\u7684\u7a7a\u95f4\u4e2d\uff0c\u4ece\u800c\u76f8\u6bd4\u4e0e\u7981\u6b62RVO\u5c11\u8c03\u7528\u4e00\u6b21\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002 \u8fd9\u6b21\u6211\u4eec\u901a\u8fc7\u6c47\u7f16\u4ee3\u7801\u8fdb\u884c\u8bba\u8bc1 \u5f00\u542fRVO\u7684\u6c47\u7f16\u4ee3\u7801 \u53ef\u4ee5\u770b\u5230\u6574\u4e2a\u8fc7\u7a0b\u4e2d\u4ec5\u4ec5\u53ea\u8c03\u7528\u4e86\u4e00\u6b21\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002 \u5173\u95edRVO\u7684\u6c47\u7f16\u4ee3\u7801 \u53ef\u4ee5\u770b\u5230\u4e00\u5171\u8c03\u7528\u4e86\u4e24\u6b21\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u8fd9\u8bc1\u660e\u4e86RVO\u786e\u5b9e\u5728\u53d1\u751f\u4f5c\u7528\u3002","title":"3.6 return parameter"},{"location":"C%2B%2B/rvo/#37-return-by-move","text":"Foo Return_BY_MOVE () { Foo foo ; return std :: move ( foo ); } Foo foo = Return_BY_MOVE (); \u8fd9\u4e2a\u6ca1\u6709\u4ec0\u4e48\u597d\u8bf4\u7684\uff0cC++\u6807\u51c6\u4e0d\u5141\u8bb8\uff0c\u5f53\u4f60\u4f7f\u7528 std::move \u65f6\uff0c\u4f1a\u7981\u7528RVO\u3002","title":"3.7 return by move"},{"location":"C%2B%2B/rvo/#38","text":"\u5f53\u4f60\u7684class\u6ca1\u6709\u81ea\u5df1\u5199\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u5e76\u4e14\u91cc\u9762\u7684\u6210\u5458\u53d8\u91cf\u90fd\u662f\u6ca1\u6709\u81ea\u5df1\u5b9a\u4e49\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u8fd9\u65f6\u5019\u5f00\u542fRVO\uff0c\u7f16\u8bd1\u5668\u751a\u81f3\u4e0d\u4f1a\u7ed9\u4f60\u751f\u6210\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002 \u6d4b\u8bd5\u4ee3\u7801 struct Foo { Foo () : data ( 0 ), id ( ++ version ) { ++ object_create ; cout << \"Foo ctor, version :\" << id << endl ; } // Foo(const Foo &rhs) : data(rhs.data), id(++version) { // ++object_create; // cout << \"Foo copy ctor, version: \" << rhs.id << \" -> \" << id << endl; // } // Foo &operator=(const Foo &rhs) { // data = rhs.data; // cout << \"Foo copy assign version: \" << rhs.id << \" -> \" << id << endl; // return *this; // } ~ Foo () { cout << \"Foo destory version: \" << id << endl ; } /* data */ int data ; int id ; // std::vector<int> vec; }; \u5f00\u542fRVO\u751f\u6210\u7684\u6c47\u7f16\u4ee3\u7801 \u53ef\u4ee5\u770b\u5230\u5b8c\u5168\u5c31\u662f\u5bc4\u5b58\u5668\u548c\u5806\u6808\u7684\u8fd0\u7b97\u3002 \u5f53\u4f60\u5173\u95edRVO\uff0c\u751f\u6210\u7684\u6c47\u7f16\u4ee3\u7801 \u7f16\u8bd1\u5668\u4f1a\u4e3a\u4f60\u751f\u6210\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u5e76\u4e14\u88ab\u8c03\u7528\u3002 \u4f46\u5982\u679c \u4f60\u7684class\u6ca1\u6709\u81ea\u5df1\u5199\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u5e76\u4e14\u91cc\u9762\u7684\u6210\u5458\u53d8\u91cf\u90fd\u662f\u6ca1\u6709\u81ea\u5df1\u5b9a\u4e49\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570 \u8fd9\u4e24\u4e2a\u6761\u4ef6\u6709\u4e00\u4e2a\u6ca1\u6ee1\u8db3\uff0c\u7f16\u8bd1\u5668\u90fd\u4f1a\u4e3a\u4f60\u751f\u6210\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002 \u603b\u7ed3\uff0cRVO\u53ea\u8981\u88ab\u5f00\u542f\uff0c\u5f53\u4f60\u8fd4\u56de\u65f6\u57fa\u672c\u603b\u662f\u4f1a\u88ab\u4f7f\u7528\uff0c\u5373\u76f4\u63a5\u5728\u5f00\u8f9f\u7684\u65b0\u7a7a\u95f4\u4e2d\u76f4\u63a5\u8fdb\u884c\u751f\u6210\uff0c\u4ece\u800c\u8282\u7701\u4e86\u4e00\u6b21\u62f7\u8d1d\u3002\u4f46\u5bf9\u4e8e\u67d0\u4e9b\u7279\u6b8a\u7684\u60c5\u51b5\uff0c\u4f8b\u5982\u8fd4\u56de\u53c2\u6570\uff0c\u8fd4\u56de\u5168\u5c40\u53d8\u91cf\u65f6\uff0c\u5bf9\u8fd9\u79cd\u5bf9\u8c61\u7684\u62f7\u8d1d\u662f\u65e0\u6cd5\u88ab\u7701\u7565\u7684\u3002","title":"3.8 \u4e00\u4e2a\u6ca1\u5565\u7528\u7684\u53d1\u73b0"},{"location":"C%2B%2B/rvo/#rvostdmove","text":"\u5f53std::move\u53c2\u4e0e\u5230rvo\u65f6\uff0c\u60c5\u51b5\u53c8\u4f1a\u6709\u70b9\u5fae\u5999\u3002 \u5148\u8bf4\u4e00\u4e2a\u975e\u5e38\u4e00\u822c\uff0c\u5e76\u4e14\u7edd\u5927\u591a\u6570\u90fd\u5bf9\u7684\u7ed3\u8bba\uff0c \u5f53class\u53ef\u4ee5\u88abmove\uff0c\u90a3\u4e48\u5f53\u4f60\u8fd4\u56de\u65f6\uff0c\u5982\u679c\u53ef\u4ee5\u76f4\u63a5\u6784\u9020\u90a3\u4e48\u76f4\u63a5\u6784\u9020\uff0c\u5982\u679c\u4e0d\u80fd\uff0c\u8c03\u7528\u79fb\u52a8\u6784\u9020\u51fd\u6570 \u5176\u5b9e\u7528\u4e00\u53e5\u8bdd\u8bf4\uff0c\u4f60return\u7684\u503c\u4f1a\u88ab\u5f53\u4f5c\u53f3\u503c\u5904\u7406\uff0c\u8981\u4e48\u4f7f\u7528RVO\uff0c\u8981\u4e48\u4f7f\u7528\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff0c\u4f46\u4e5f\u6709\u4f8b\u5916\u3002 \u6211\u4eec\u5148\u770b\u5b98\u7f51\u6587\u6863 \u6ce8\u610f\u8fd9\u91cc\u52a0\u7c97\u7684\u610f\u601d\u662f\u8bf4\u5982\u679c\u6211\u4eecreturn\u7684\u7c7b\u578b\u548c\u51fd\u6570\u7533\u660e\u7684\u8fd4\u56de\u7c7b\u578b\u5bf9\u4e0d\u4e0a\uff0c\u90a3\u4e48\u5c31\u4f1a\u628a\u8fd4\u56de\u503c\u770b\u4f5c\u5de6\u503c\u4e5f\u5c31\u662f\u4f1a\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002\u4f8b\u5982 struct Foo { Foo () : data ( 0 ), id ( ++ version ) { ++ object_create ; cout << \"Foo ctor, version :\" << id << endl ; } Foo ( const Foo & rhs ) : data ( rhs . data ), id ( ++ version ), aaaa ( rhs . aaaa ) { ++ object_create ; cout << \"Foo copy ctor, version: \" << rhs . id << \" -> \" << id << endl ; } Foo ( Foo && rhs ) : data { rhs . data }, id { ++ version } { cout << \"Foo move ctor, version: \" << rhs . id << \" -> \" << id << endl ; } Foo & operator = ( const Foo & rhs ) { data = rhs . data ; cout << \"Foo copy assign version: \" << rhs . id << \" -> \" << id << endl ; return * this ; } Foo & operator = ( Foo && rhs ) { data = rhs . data ; cout << \"Foo move assign version: \" << rhs . id << \" -> \" << id << endl ; return * this ; } ~ Foo () { cout << \"Foo destory version: \" << id << endl ; } /* data */ int data ; int id ; Complex complex ; std :: vector < int > aaaa ; }; struct FOOS : public FOO { } FOO return_derived () { FOOS foos ; return foos ; // treat is as lvalue } \u56e0\u4e3aFOOS\u5e76\u4e0d\u5b8c\u5168\u662fFOO\uff0c\u6240\u4ee5\u4e0eFOO(FOO &&rhs)\u5bf9\u4e0d\u4e0a\uff0c\u56e0\u6b64\u4f1a\u5c06\u8fd4\u56de\u503c\u89c6\u4f5c\u5de6\u503c\uff0c\u5bfc\u81f4RVO\uff0cmove\u90fd\u65e0\u6cd5\u4f7f\u7528\u3002 \u81f3\u6b64\uff0c\u6211\u5bf9\u4e8eRVO\u7684\u603b\u7ed3\u5c31\u5168\u90e8\u5b8c\u6210\u4e86\u3002","title":"RVO\u4e0estd::move"},{"location":"books/more-effective-cpp/","text":"\u8bfb\u4e66\u7b14\u8bb0: More Effective C++ \u8fd9\u7bc7\u535a\u5ba2\u4e3b\u8981\u662f\u7528\u6765\u52a0\u6df1\u81ea\u5df1\u5bf9\u8bfb\u8fc7\u7684\u4e66\u7684\u8bb0\u5fc6\u3002\u5199\u7684\u5185\u5bb9\u53ef\u80fd\u53ea\u5bf9\u6211\u81ea\u5df1\u4ea7\u751f\u4ef7\u503c Item 1: Distinguish between pointers and references \u5f15\u7528\u76f8\u8f83\u4e8e\u6307\u9488 \u4f18\u52bf \u4ed6\u603b\u662f\u6709\u6548\u7684\uff0c\u5373\u6ca1\u6709null reference\uff0c\u6307\u9488\u5219\u9700\u8981\u68c0\u67e5\u662f\u5426\u4e3a\u7a7a \u52a3\u52bf \u6307\u9488\u53ef\u4ee5\u6307\u5411\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\uff0c\u5f15\u7528\u4e0d\u884c\u3002\u6307\u9488\u53ef\u4ee5\u4f7f\u7528nullptr\u8868\u793a\u4e0d\u5b58\u5728\uff0c\u5982\u679c\u4f60\u9700\u8981\u8be5\u53d8\u91cf\u62e5\u6709\u4e0d\u5b58\u5728\u7684\u8bed\u4e49\uff0c\u4f7f\u7528pointer\u3002 \u603b\u7ed3 \u5f53\u4f60\u786e\u8ba4\u4f60\u9700\u8981\u6307\u5411\u67d0\u4e2a\u4e1c\u897f\uff0c\u5e76\u4e14\u7edd\u5bf9\u4e0d\u4f1a\u6539\u53d8\u6307\u5411\u5176\u5b83\u4e1c\u897f\uff0c\u4f7f\u7528reference\uff0c\u4e0d\u7136\u7684\u8bdd\u4f7f\u7528pointer Item 2: Prefer C++-style casts C\u7684\u8f6c\u578b\uff0c\u65e0\u6cd5\u533a\u5206\u60f3\u505a\u7684\u662f\u4ec0\u4e48\u7c7b\u578b\u7684\u8f6c\u578b\uff0c\u800c\u4e14\u8f83\u96be\u5206\u8fa8\uff0c\u5c3d\u91cf\u4f7f\u7528C++\u7684\u65b0\u5f0f\u8f6c\u578b static_cast \u57fa\u672c\u62e5\u6709C\u65e7\u5f0f\u8f6c\u578b\u7684\u76f8\u540c\u5a01\u529b\u4e0e\u610f\u4e49 cons_cast \u7528\u4e8e\u5f3a\u8f6cconst\u5c5e\u6027 dynamic_cast \u7528\u4e8e\u5728\u7ee7\u627f\u4f53\u7cfb\u4e2d\u5411\u4e0b\u8f6c\u578b\uff0c\u8f6c\u578b\u5931\u8d25\u65f6\u4f1a\u4ee5nullptr\u6216\u8005exception\u8868\u73b0\u51fa\u6765 reinterpret_cast \u7528\u4e8e\u8f6c\u6362\u4e8c\u8fdb\u5236\u548c\u5e8f\u5217\u5316\uff0c\u6216\u8005\u51fd\u6570\u6307\u9488\u7684\u8f6c\u578b Item 3: Never treat arrays polymorphically \u6570\u7ec4\u7c7b\u578b\u4e0d\u80fd\u88ab\u5f53\u4f5c\u591a\u6001\u6765\u8fdb\u884c\u4f20\u9012\uff0c\u5373 void printBSTArray ( const BST array []); class BalancedBST : public BST {}; printBSTArray ( BalancedBST ) // error! Why? \u5f53\u4f60\u8bfb\u53d6\u6570\u7ec4\u5143\u7d20\u65f6\uff0c\u504f\u79fb\u662f\u6839\u636e\u4f60\u7533\u660e\u7684\u7c7b\u578b\u6765\u8fdb\u884c\u8ba1\u7b97\u7684\uff0c\u4f46\u662f\u5b50\u7c7b\u7684\u5927\u5c0f\u548c\u7236\u7c7b\u57fa\u672c\u90fd\u662f\u4e0d\u4e00\u81f4\u7684\uff0c\u56e0\u6b64\u4f60\u5b9e\u9645\u4f7f\u7528\u7684\u504f\u79fb\u662f\u9519\u8bef\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u672a\u5b9a\u4e49\u884c\u4e3a\uff01 Item 4: Avoid gratuitous default constructors \u5982\u679c\u4e00\u4e2a\u7c7b\u4e0d\u501f\u52a9\u5916\u90e8\u7684\u4fe1\u606f\u5c31\u65e0\u6cd5\u6b63\u786e\u521d\u59cb\u5316\uff0c\u90a3\u4e48\u5c31\u5e94\u8be5\u907f\u514d\u63d0\u4f9b\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u4f46\u8fd9\u4f1a\u5e26\u6765\u4ee5\u4e0b\u51e0\u4e2a\u95ee\u9898 \u5bf9\u4e8e\u6570\u7ec4\u7c7b\u578b A a[10] \u6ca1\u6709\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u5373\u65e0\u6cd5\u751f\u6210\uff0c\u9700\u8981\u4f7f\u7528\u522b\u7684\u65b9\u5f0f\u751f\u6210\uff0c\u4f8b\u5982\u4f7f\u7528\u6307\u9488\u6570\u7ec4\uff0c\u800c\u4e0d\u662f\u5bf9\u8c61\u6570\u7ec4 \u5bf9\u4e8e\u4e00\u4e9b\u57fa\u4e8e\u6a21\u677f\u7684\u5bb9\u5668\u7c7b\u578b\u65e0\u6cd5\u5f88\u597d\u7684\u517c\u5bb9\uff0c\u56e0\u4e3a\u4ed6\u4eec\u53ef\u80fd\u5047\u8bbe\u4f60\u7684\u7c7b\u62e5\u6709\u9ed8\u8ba4\u6784\u9020\u51fd\u6570 \u5982\u679cvirtual base class \u7f3a\u4e4f\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u540e\u7eed\u7ee7\u627f\u4ed6\u7684\u7c7b\u90fd\u9700\u8981\u77e5\u9053\u5176\u610f\u4e49(bad design)\u3002 \u7ed3\u8bba\uff0c\u8fd9\u662f\u4e00\u4e2acase by case\u7684\u95ee\u9898\uff0c\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8fdb\u884c\u6289\u62e9\u3002 Item 5: Be wary of user-defined conversion functions \u5bf9\u4e8e\u81ea\u5df1\u5b9a\u4e49\u8f6c\u6362\u51fd\u6570\u9700\u8981\u683c\u5916\u7684\u5c0f\u5fc3\uff0c\u56e0\u4e3a\u4ed6\u4eec\u53ef\u80fd\u5bfc\u81f4\u975e\u9884\u671f\u7684\u51fd\u6570\u8c03\u7528\uff0c\u7f16\u8bd1\u5668\u4f1a\u60f3\u5c3d\u529e\u6cd5\u5e2e\u4f60\u7f16\u8bd1\u6210\u529f\uff0c\u56e0\u6b64\u53ef\u80fd\u5728\u4f60\u672a\u9884\u6599\u7684\u5730\u65b9\u7ed9\u4f60\u8fdb\u884c\u4e86\u9690\u9970\u8f6c\u6362\uff0c\u89e3\u51b3\u529e\u6cd5 \u5b9a\u4e49 asType() \u7684\u6210\u5458\u51fd\u6570\uff0c\u8fdb\u884c\u663e\u5f0f\u7684\u7c7b\u578b\u8f6c\u6362 \u4f7f\u7528 explicit \u53bb\u9664\u5355\u81ea\u53d8\u91cf\u7684constructor\u7684\u9690\u5f0f\u8f6c\u6362 Item 6: Distinguish between prefix and postfix forms of increment and decrement operators \u524d\u7f6e++\u8fd4\u56de\u5f15\u7528\uff0c\u540e\u7f6e++\u8fd4\u56deconst \u5bf9\u8c61(const \u5bf9\u8c61\u9632\u6b62 a++++) \u540e\u7f6e++\u6709\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\u7684\u8d1f\u62c5\u3002 prefer prefix Item 7: Never overload &&, ||, or , \u8fd9\u4e9b\u7b26\u53f7\u662f\u7531\u77ed\u8def\u7279\u6027\uff0c\u800c\u4e14\u4fdd\u8bc1\u4ece\u5de6\u5f80\u53f3\u8ba1\u7b97\uff0c\u5982\u679c\u4f60\u5bf9\u5176\u8fdb\u884c\u91cd\u8f7d\uff0c\u51fd\u6570\u4f20\u8fdb\u6765\u7684\u53c2\u6570\u662f\u65e0\u6cd5\u4fdd\u8bc1\u8ba1\u7b97\u987a\u5e8f\u7684\uff0c\u4f1a\u5bfc\u81f4\u4e0e\u5e38\u89c4\u7406\u89e3\u4e0d\u7b26\uff0c\u4ece\u800c\u5bfc\u81f4\u672a\u5b9a\u4e49\u884c\u4e3a\u3002 Item 8: Understand the different meanings of new and delete new \u5206\u914d\u5185\u5b58 \u5728\u8be5\u5185\u5b58\u4e0a\u8c03\u7528\u6784\u9020\u51fd\u6570 operator new \uff08void* operator new(size_t size)) \u8fd4\u56de\u4e00\u5757\u539f\u59cb\u7684\u672a\u521d\u59cb\u5316\u7684\u5185\u5b58 placement new ( new (memory pointer) Type(args) ) \u5728memory pointer\u4e0a\u8c03\u7528\u6784\u9020\u51fd\u6570 new [] \u548c operator new[] \u5bf9\u5e94\u7684\u6570\u7ec4\u7248 delete \u4e0enew\u5bf9\u5e94\uff0c\u9700\u8981\u6210\u5bf9\u51fa\u73b0 delete - new operator delete - operator new Item 9: Use destructors to prevent resource leaks \u56e0\u4e3a\u6709\u5f02\u5e38\u7684\u5b58\u5728\uff0c\u53ef\u80fd\u4f60\u91ca\u653e\u8d44\u6e90\u4e4b\u524d\u5c31\u629b\u51fa\u4e86\u5f02\u5e38\uff0c\u5bfc\u81f4\u8d44\u6e90\u6cc4\u6f0f\u3002\u5982\u679c\u4e0d\u65ad\u5199catch\u4f1a\u4f7f\u4ee3\u7801\u4e71\u4e03\u516b\u7cdf\uff0c\u56e0\u6b64\u5c06\u8d44\u6e90\u91ca\u653e\u653e\u5230\u6790\u6784\u51fd\u6570\u4e2d\uff0c\u5373RAII Item 10: Prevent resource leaks in constructors \u5982\u679ccontructor\u629b\u51fa\u5f02\u5e38\uff0c\u56e0\u4e3a\u5bf9\u8c61\u5c1a\u672a\u5b8c\u5168\u6784\u5efa\u5b8c\u5168\uff0c\u56e0\u6b64\u6790\u6784\u51fd\u6570\u4e0d\u4f1a\u88ab\u8c03\u7528\uff0c\u4ece\u800c\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\uff0c\u89e3\u51b3\u529e\u6cd5\u4e3a\u5c3d\u91cf\u4f7fmember\u4e0d\u8981\u662f\u6307\u9488\u5e76\u4e14\u4e3a\u667a\u80fd\u6307\u9488\u3002 Item 11: Prevent exceptions from leaving destructors \u5982\u679c\u6790\u6784\u51fd\u6570\u4e2d\u629b\u51fa\u4e86\u5f02\u5e38\u6709\u4e24\u4e2a\u574f\u59041. \u53ef\u80fd\u5bfc\u81f4\u7a0b\u5e8f\u76f4\u63a5\u7ec8\u6b62 2.\u5bfc\u81f4\u6790\u6784\u51fd\u6570\u9700\u8981\u6267\u884c\u7684\u8bed\u53e5\u6ca1\u6709\u6267\u884c\u5b8c\uff0c\u5373\u5185\u5b58\u6cc4\u6f0f\uff0c\u56e0\u6b64\u9700\u8981\u5c3d\u529b\u907f\u514d\u6790\u6784\u51fd\u6570\u629b\u51fa\u5f02\u5e38\u3002 Item 12: Understand how throwing an exception differs from passing a parameter or calling a virtual function \u5f02\u5e38\u7c7b\u578b\u6c38\u8fdc\u4f1a\u590d\u5236\u4e00\u4efd\uff0c\u65e0\u8bba\u6355\u83b7\u65b9\u5f0f\u662f\u4ec0\u4e48 \u88ab\u629b\u51fa\u4f5c\u4e3aexception\u7684\u5bf9\u8c61\uff0c\u5176\u88ab\u5141\u8bb8\u7684\u7c7b\u578b\u8f6c\u5316\u65b9\u5f0f\u6bd4\u88ab\u4f20\u9012\u5230\u51fd\u6570\u7684\u53bb\u7684\u65b9\u5f0f\u5c11 \u5f02\u5e38\u6bd4\u5bf9\u662f\u7b2c\u4e00\u4e2a\u6210\u529f\u5c31\u6267\u884c\uff0c\u800c\u4e0d\u662f\u6700\u4f73\u5339\u914d\u3002 Item 13: Catch exceptions by reference \u7528\u6307\u9488\u6355\u83b7\uff0c\u5bb9\u6613\u5bfc\u81f4\u4f20\u8fdb\u6765\u7684\u6307\u9488\u5df2\u7ecf\u5931\u6548\uff0c\u6216\u8005\u4e0d\u77e5\u9053\u8be5\u4e0d\u8be5\u91ca\u653e\u8fd9\u4e2a\u6307\u9488 \u7528\u503c\u6355\u83b7\uff0c\u9700\u8981\u591a\u590d\u5236\u4e00\u4efd\u4e14\u4e0d\u652f\u6301\u591a\u6001 \u7528\u5f15\u7528\u6355\u83b7\uff0c\u6ca1\u6709\u7f3a\u70b9\uff01 Item 14: Use exception specifications judiciously C++11\u57fa\u672c\u4e0d\u600e\u4e48\u4f7f\u7528\u4e86\uff0c\u4ec5\u7528noexcept Item 15: Understand the costs of exception handling \u4f7f\u7528profile\u53bb\u68c0\u67e5\u6027\u80fd\u7684\u5f71\u54cd Item 16: Remember the 80-20 rule \u5728\u771f\u6b63\u5173\u952e\u7684\u5730\u65b9\u8fdb\u884c\u52aa\u529b Item 17: Consider using lazy evaluation \u7ecf\u5178\u7684\u8ba1\u7b97\u673a\u601d\u60f3\uff0c\u4ec5\u5728\u9700\u8981\u65f6\u8ba1\u7b97\u3002 Item 18: Amortize the cost of expected computations \u5c06\u8ba1\u7b97\u5e73\u5766\u5230\u6bcf\u4e00\u6b21\u8c03\u7528\u4e2d\uff0c\u4f8b\u5982\u4f60\u9700\u8981\u8ba1\u7b97\u4e00\u4e2a\u6570\u7ec4\u4e2d\u7684\u6700\u5927\u503c\uff0c\u53ef\u4ee5\u5728\u6bcf\u4e00\u6b21\u6dfb\u52a0\u5143\u7d20\u65f6\uff0c\u5bf9\u6700\u5927\u503c\u8fdb\u884c\u66f4\u65b0\u3002 Item 19: Understand the origin of temporary objects \u4e34\u65f6\u5bf9\u8c61\u53ef\u80fd\u5f88\u8017\u6210\u672c\uff0c\u6240\u4ee5\u5e94\u8be5\u5c3d\u53ef\u80fd\u6d88\u9664\u5b83\u4eec\u3002\u4f8b\u5982reference to const \u4ee5\u53ca value\u7684\u5730\u65b9\u5c31\u53ef\u80fd\u4ea7\u751f\u4e34\u65f6\u5bf9\u8c61. Item 20: Facilitate the return value optimization \u8be6\u60c5\u770b RVO Item 21: Overload to avoid implicit type conversions \u4f7f\u7528\u91cd\u8f7d\u6765\u6d88\u9664\u9690\u5f0f\u8f6c\u6362\uff0c\u4ece\u800c\u6d88\u9664\u4e34\u65f6\u53d8\u91cf\uff0c\u4f8b\u5982 const UPInt operator + ( const UPInt & lhs , // add UPInt const UPInt & rhs ); // and UPInt const UPInt operator + ( const UPInt & lhs , // add UPInt int rhs ); // and int const UPInt operator + ( int lhs , // add int and const UPInt & rhs ); // UPInt \u8fd9\u6837\u5f53\u6267\u884c upi3 = upi1 + 10; \u5c31\u4e0d\u4f1a\u6709\u56e0\u4e3a\u7c7b\u578b\u8f6c\u6362\u800c\u4ea7\u751f\u4e34\u65f6\u53d8\u91cf\u3002 Item 22: Consider using op= instead of stand-alone op \u590d\u5408\u7248\u672c\u5373+=\uff0c\u4e00\u822c\u6548\u7387\u9ad8\u4e8e+\uff0c\u56e0\u4e3a\u4e0d\u9700\u8981\u4ea7\u751f\u4e34\u65f6\u53d8\u91cf\u3002 Item 23: Consider alternative libraries \u8fd9\u4e2a\u6ca1\u5565\u8bf4\u7684\uff0c\u6709\u4ec0\u4e48\u9ad8\u6027\u80fd\u5e93\u5c31\u7528\u4ec0\u4e48\u5427\u3002 Item 24: Understand the costs of virtual functions, multiple inheritance, virtual base classes, and RTTI \u8fd9\u4e2a\u4e5f\u6ca1\u5565\u8bf4\u7684\uff0c\u53ea\u6709\u5b9e\u9645\u78b0\u5230\u624d\u80fd\u77e5\u9053\u3002 Item 25: Virtualizing constructors and non-member functions \u865a\u6784\u9020\u51fd\u6570\uff0c\u5b9e\u9645\u5c31\u662f\u4e00\u4e2a\u865astatic\u6210\u5458\u51fd\u6570\uff0c\u5728\u6784\u9020\u51fd\u6570\u4e2d\u8c03\u7528\uff0c\u4ece\u800c\u5b9e\u73b0\u865a\u6784\u9020\u51fd\u6570 \u865anon-member\u51fd\u6570\uff0c\u5199\u4e00\u4e2a\u865a\u51fd\u6570\u505a\u5b9e\u9645\u5de5\u4f5c\uff0c\u518d\u5b89\u6392\u975e\u865a\u51fd\u6570\u5bf9\u5176\u8fdb\u884c\u8c03\u7528\u3002 Item 26: Limiting the number of objects of a class \u8bbe\u8ba1\u4e00\u4e2aCounted\u7c7b\uff0c\u5728\u5185\u90e8\u8fdb\u884c\u8ba1\u7b97\uff0c\u4ece\u800c\u7528\u6237\u65e0\u611f\u77e5 Item 27: Requiring or prohibiting heap-based objects \u6709\u4e00\u4e2ahack\u7684\u65b9\u5f0f\u68c0\u67e5\u5bf9\u8c61\u662f\u5426\u5728heap\u4e2d(\u5229\u7528\u7a0b\u5e8f\u7684\u5185\u5b58\u5e03\u5c40\uff0c\u4f46\u4e0d\u5177\u6709\u53ef\u6269\u5c55\u6027) bool onHeap ( const void * address ) { char onTheStack ; // local stack variable return address < & onTheStack ; } \u6211\u4eec\u6ca1\u6709\u5b8c\u7f8e\u7684\u65b9\u5f0f\u6765\u9650\u5236\u5bf9\u8c61\u662f\u5426\u5728heap\u4e2d Item 28: Smart pointers C++11 \u5df2\u7ecf\u652f\u6301\u4e86 Item 29: Reference counting \u7ecf\u5178\u95ee\u9898\uff0c\u4e0d\u5c55\u5f00\u4e86 Item 30: Proxy classes \u4f7f\u7528proxy\u5bf9\u8c61\u6765\u8868\u793a\u67d0\u4e9b\u5e76\u4e0d\u5b58\u5728\u7684\u5bf9\u8c61\uff0c\u5e76\u4e14\u8ba9\u7528\u6237\u65e0\u611f\u77e5\u5373\u4e3aproxy classes Item 31: Making functions virtual with respect to more than one object multi dispatch\uff0c\u6700\u4f73\u89e3\u51b3\u624b\u6bb5\uff0c\u81ea\u5df1\u5199\u865a\u8868\u3002 Item 32: Program in the future tense \u65f6\u523b\u60f3\u7740\u81ea\u5df1\u5199\u7684\u4ee3\u7801\u4f1a\u88ab\u5404\u79cd\u6269\u5c55\uff0c\u4ee5\u53ca\u5404\u79cd\u795e\u5947\u7684\u9700\u6c42 Item 33: Make non-leaf classes abstract \u4e13\u95e8\u62bd\u8c61\u51faAbstract\u7c7b\uff0c\u8ba9\u5176\u4ed6\u7c7b\u6765\u7ee7\u627f\u3002 Item 34: Understand how to combine C++ and C in the same program #ifdef __cplusplus extern \"C\" { #endif void drawLine ( int x1 , int y1 , int x2 , int y2 ); // \u4ee5\u8fd9\u79cd\u65b9\u5f0f\u907f\u514d\u7f16\u8bd1\u5668\u91cd\u547d\u540d void twiddleBits ( unsigned char bits ); void simulate ( int iterations ); ... #ifdef __cplusplus } #endif If you want to mix C++ and C in the same program, remember the following simple guidelines: \u25a0 Make sure the C++ and C compilers produce compatible object files. \u25a0 Declare functions to be used by both languages extern \"C\". \u25a0 If at all possible, write main in C++. \u25a0 Always use delete with memory from new; always use free with memory from malloc. \u25a0 Limit what you pass between the two languages to data structures that compile under C; the C++ version of structs may contain nonvirtual member functions. Item 35: Familiarize yourself with the language standard \u719f\u6089\u8bed\u8a00\u6807\u51c6\uff01\u591a\u770b\u770bRFC\uff01","title":"More Effective C++"},{"location":"books/more-effective-cpp/#more-effective-c","text":"\u8fd9\u7bc7\u535a\u5ba2\u4e3b\u8981\u662f\u7528\u6765\u52a0\u6df1\u81ea\u5df1\u5bf9\u8bfb\u8fc7\u7684\u4e66\u7684\u8bb0\u5fc6\u3002\u5199\u7684\u5185\u5bb9\u53ef\u80fd\u53ea\u5bf9\u6211\u81ea\u5df1\u4ea7\u751f\u4ef7\u503c","title":"\u8bfb\u4e66\u7b14\u8bb0: More Effective C++"},{"location":"books/more-effective-cpp/#item-1-distinguish-between-pointers-and-references","text":"\u5f15\u7528\u76f8\u8f83\u4e8e\u6307\u9488 \u4f18\u52bf \u4ed6\u603b\u662f\u6709\u6548\u7684\uff0c\u5373\u6ca1\u6709null reference\uff0c\u6307\u9488\u5219\u9700\u8981\u68c0\u67e5\u662f\u5426\u4e3a\u7a7a \u52a3\u52bf \u6307\u9488\u53ef\u4ee5\u6307\u5411\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\uff0c\u5f15\u7528\u4e0d\u884c\u3002\u6307\u9488\u53ef\u4ee5\u4f7f\u7528nullptr\u8868\u793a\u4e0d\u5b58\u5728\uff0c\u5982\u679c\u4f60\u9700\u8981\u8be5\u53d8\u91cf\u62e5\u6709\u4e0d\u5b58\u5728\u7684\u8bed\u4e49\uff0c\u4f7f\u7528pointer\u3002 \u603b\u7ed3 \u5f53\u4f60\u786e\u8ba4\u4f60\u9700\u8981\u6307\u5411\u67d0\u4e2a\u4e1c\u897f\uff0c\u5e76\u4e14\u7edd\u5bf9\u4e0d\u4f1a\u6539\u53d8\u6307\u5411\u5176\u5b83\u4e1c\u897f\uff0c\u4f7f\u7528reference\uff0c\u4e0d\u7136\u7684\u8bdd\u4f7f\u7528pointer","title":"Item 1: Distinguish between pointers and references"},{"location":"books/more-effective-cpp/#item-2-prefer-c-style-casts","text":"C\u7684\u8f6c\u578b\uff0c\u65e0\u6cd5\u533a\u5206\u60f3\u505a\u7684\u662f\u4ec0\u4e48\u7c7b\u578b\u7684\u8f6c\u578b\uff0c\u800c\u4e14\u8f83\u96be\u5206\u8fa8\uff0c\u5c3d\u91cf\u4f7f\u7528C++\u7684\u65b0\u5f0f\u8f6c\u578b static_cast \u57fa\u672c\u62e5\u6709C\u65e7\u5f0f\u8f6c\u578b\u7684\u76f8\u540c\u5a01\u529b\u4e0e\u610f\u4e49 cons_cast \u7528\u4e8e\u5f3a\u8f6cconst\u5c5e\u6027 dynamic_cast \u7528\u4e8e\u5728\u7ee7\u627f\u4f53\u7cfb\u4e2d\u5411\u4e0b\u8f6c\u578b\uff0c\u8f6c\u578b\u5931\u8d25\u65f6\u4f1a\u4ee5nullptr\u6216\u8005exception\u8868\u73b0\u51fa\u6765 reinterpret_cast \u7528\u4e8e\u8f6c\u6362\u4e8c\u8fdb\u5236\u548c\u5e8f\u5217\u5316\uff0c\u6216\u8005\u51fd\u6570\u6307\u9488\u7684\u8f6c\u578b","title":"Item 2: Prefer C++-style casts"},{"location":"books/more-effective-cpp/#item-3-never-treat-arrays-polymorphically","text":"\u6570\u7ec4\u7c7b\u578b\u4e0d\u80fd\u88ab\u5f53\u4f5c\u591a\u6001\u6765\u8fdb\u884c\u4f20\u9012\uff0c\u5373 void printBSTArray ( const BST array []); class BalancedBST : public BST {}; printBSTArray ( BalancedBST ) // error! Why? \u5f53\u4f60\u8bfb\u53d6\u6570\u7ec4\u5143\u7d20\u65f6\uff0c\u504f\u79fb\u662f\u6839\u636e\u4f60\u7533\u660e\u7684\u7c7b\u578b\u6765\u8fdb\u884c\u8ba1\u7b97\u7684\uff0c\u4f46\u662f\u5b50\u7c7b\u7684\u5927\u5c0f\u548c\u7236\u7c7b\u57fa\u672c\u90fd\u662f\u4e0d\u4e00\u81f4\u7684\uff0c\u56e0\u6b64\u4f60\u5b9e\u9645\u4f7f\u7528\u7684\u504f\u79fb\u662f\u9519\u8bef\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u672a\u5b9a\u4e49\u884c\u4e3a\uff01","title":"Item 3:  Never treat arrays polymorphically"},{"location":"books/more-effective-cpp/#item-4-avoid-gratuitous-default-constructors","text":"\u5982\u679c\u4e00\u4e2a\u7c7b\u4e0d\u501f\u52a9\u5916\u90e8\u7684\u4fe1\u606f\u5c31\u65e0\u6cd5\u6b63\u786e\u521d\u59cb\u5316\uff0c\u90a3\u4e48\u5c31\u5e94\u8be5\u907f\u514d\u63d0\u4f9b\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u4f46\u8fd9\u4f1a\u5e26\u6765\u4ee5\u4e0b\u51e0\u4e2a\u95ee\u9898 \u5bf9\u4e8e\u6570\u7ec4\u7c7b\u578b A a[10] \u6ca1\u6709\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u5373\u65e0\u6cd5\u751f\u6210\uff0c\u9700\u8981\u4f7f\u7528\u522b\u7684\u65b9\u5f0f\u751f\u6210\uff0c\u4f8b\u5982\u4f7f\u7528\u6307\u9488\u6570\u7ec4\uff0c\u800c\u4e0d\u662f\u5bf9\u8c61\u6570\u7ec4 \u5bf9\u4e8e\u4e00\u4e9b\u57fa\u4e8e\u6a21\u677f\u7684\u5bb9\u5668\u7c7b\u578b\u65e0\u6cd5\u5f88\u597d\u7684\u517c\u5bb9\uff0c\u56e0\u4e3a\u4ed6\u4eec\u53ef\u80fd\u5047\u8bbe\u4f60\u7684\u7c7b\u62e5\u6709\u9ed8\u8ba4\u6784\u9020\u51fd\u6570 \u5982\u679cvirtual base class \u7f3a\u4e4f\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u540e\u7eed\u7ee7\u627f\u4ed6\u7684\u7c7b\u90fd\u9700\u8981\u77e5\u9053\u5176\u610f\u4e49(bad design)\u3002 \u7ed3\u8bba\uff0c\u8fd9\u662f\u4e00\u4e2acase by case\u7684\u95ee\u9898\uff0c\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8fdb\u884c\u6289\u62e9\u3002","title":"Item 4:  Avoid gratuitous default constructors"},{"location":"books/more-effective-cpp/#item-5-be-wary-of-user-defined-conversion-functions","text":"\u5bf9\u4e8e\u81ea\u5df1\u5b9a\u4e49\u8f6c\u6362\u51fd\u6570\u9700\u8981\u683c\u5916\u7684\u5c0f\u5fc3\uff0c\u56e0\u4e3a\u4ed6\u4eec\u53ef\u80fd\u5bfc\u81f4\u975e\u9884\u671f\u7684\u51fd\u6570\u8c03\u7528\uff0c\u7f16\u8bd1\u5668\u4f1a\u60f3\u5c3d\u529e\u6cd5\u5e2e\u4f60\u7f16\u8bd1\u6210\u529f\uff0c\u56e0\u6b64\u53ef\u80fd\u5728\u4f60\u672a\u9884\u6599\u7684\u5730\u65b9\u7ed9\u4f60\u8fdb\u884c\u4e86\u9690\u9970\u8f6c\u6362\uff0c\u89e3\u51b3\u529e\u6cd5 \u5b9a\u4e49 asType() \u7684\u6210\u5458\u51fd\u6570\uff0c\u8fdb\u884c\u663e\u5f0f\u7684\u7c7b\u578b\u8f6c\u6362 \u4f7f\u7528 explicit \u53bb\u9664\u5355\u81ea\u53d8\u91cf\u7684constructor\u7684\u9690\u5f0f\u8f6c\u6362","title":"Item 5:   Be wary of user-defined conversion functions"},{"location":"books/more-effective-cpp/#item-6-distinguish-between-prefix-and-postfix-forms-of-increment-and-decrement-operators","text":"\u524d\u7f6e++\u8fd4\u56de\u5f15\u7528\uff0c\u540e\u7f6e++\u8fd4\u56deconst \u5bf9\u8c61(const \u5bf9\u8c61\u9632\u6b62 a++++) \u540e\u7f6e++\u6709\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\u7684\u8d1f\u62c5\u3002 prefer prefix","title":"Item 6:  Distinguish between prefix and postfix forms of increment and decrement operators"},{"location":"books/more-effective-cpp/#item-7-never-overload-or","text":"\u8fd9\u4e9b\u7b26\u53f7\u662f\u7531\u77ed\u8def\u7279\u6027\uff0c\u800c\u4e14\u4fdd\u8bc1\u4ece\u5de6\u5f80\u53f3\u8ba1\u7b97\uff0c\u5982\u679c\u4f60\u5bf9\u5176\u8fdb\u884c\u91cd\u8f7d\uff0c\u51fd\u6570\u4f20\u8fdb\u6765\u7684\u53c2\u6570\u662f\u65e0\u6cd5\u4fdd\u8bc1\u8ba1\u7b97\u987a\u5e8f\u7684\uff0c\u4f1a\u5bfc\u81f4\u4e0e\u5e38\u89c4\u7406\u89e3\u4e0d\u7b26\uff0c\u4ece\u800c\u5bfc\u81f4\u672a\u5b9a\u4e49\u884c\u4e3a\u3002","title":"Item 7: Never overload &amp;&amp;, ||, or ,"},{"location":"books/more-effective-cpp/#item-8-understand-the-different-meanings-of-new-and-delete","text":"new \u5206\u914d\u5185\u5b58 \u5728\u8be5\u5185\u5b58\u4e0a\u8c03\u7528\u6784\u9020\u51fd\u6570 operator new \uff08void* operator new(size_t size)) \u8fd4\u56de\u4e00\u5757\u539f\u59cb\u7684\u672a\u521d\u59cb\u5316\u7684\u5185\u5b58 placement new ( new (memory pointer) Type(args) ) \u5728memory pointer\u4e0a\u8c03\u7528\u6784\u9020\u51fd\u6570 new [] \u548c operator new[] \u5bf9\u5e94\u7684\u6570\u7ec4\u7248 delete \u4e0enew\u5bf9\u5e94\uff0c\u9700\u8981\u6210\u5bf9\u51fa\u73b0 delete - new operator delete - operator new","title":"Item 8:  Understand the different meanings of new and delete"},{"location":"books/more-effective-cpp/#item-9-use-destructors-to-prevent-resource-leaks","text":"\u56e0\u4e3a\u6709\u5f02\u5e38\u7684\u5b58\u5728\uff0c\u53ef\u80fd\u4f60\u91ca\u653e\u8d44\u6e90\u4e4b\u524d\u5c31\u629b\u51fa\u4e86\u5f02\u5e38\uff0c\u5bfc\u81f4\u8d44\u6e90\u6cc4\u6f0f\u3002\u5982\u679c\u4e0d\u65ad\u5199catch\u4f1a\u4f7f\u4ee3\u7801\u4e71\u4e03\u516b\u7cdf\uff0c\u56e0\u6b64\u5c06\u8d44\u6e90\u91ca\u653e\u653e\u5230\u6790\u6784\u51fd\u6570\u4e2d\uff0c\u5373RAII","title":"Item 9: Use destructors to prevent resource leaks"},{"location":"books/more-effective-cpp/#item-10-prevent-resource-leaks-in-constructors","text":"\u5982\u679ccontructor\u629b\u51fa\u5f02\u5e38\uff0c\u56e0\u4e3a\u5bf9\u8c61\u5c1a\u672a\u5b8c\u5168\u6784\u5efa\u5b8c\u5168\uff0c\u56e0\u6b64\u6790\u6784\u51fd\u6570\u4e0d\u4f1a\u88ab\u8c03\u7528\uff0c\u4ece\u800c\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\uff0c\u89e3\u51b3\u529e\u6cd5\u4e3a\u5c3d\u91cf\u4f7fmember\u4e0d\u8981\u662f\u6307\u9488\u5e76\u4e14\u4e3a\u667a\u80fd\u6307\u9488\u3002","title":"Item 10: Prevent resource leaks in constructors"},{"location":"books/more-effective-cpp/#item-11-prevent-exceptions-from-leaving-destructors","text":"\u5982\u679c\u6790\u6784\u51fd\u6570\u4e2d\u629b\u51fa\u4e86\u5f02\u5e38\u6709\u4e24\u4e2a\u574f\u59041. \u53ef\u80fd\u5bfc\u81f4\u7a0b\u5e8f\u76f4\u63a5\u7ec8\u6b62 2.\u5bfc\u81f4\u6790\u6784\u51fd\u6570\u9700\u8981\u6267\u884c\u7684\u8bed\u53e5\u6ca1\u6709\u6267\u884c\u5b8c\uff0c\u5373\u5185\u5b58\u6cc4\u6f0f\uff0c\u56e0\u6b64\u9700\u8981\u5c3d\u529b\u907f\u514d\u6790\u6784\u51fd\u6570\u629b\u51fa\u5f02\u5e38\u3002","title":"Item 11: Prevent exceptions from leaving destructors"},{"location":"books/more-effective-cpp/#item-12-understand-how-throwing-an-exception-differs-from-passing-a-parameter-or-calling-a-virtual-function","text":"\u5f02\u5e38\u7c7b\u578b\u6c38\u8fdc\u4f1a\u590d\u5236\u4e00\u4efd\uff0c\u65e0\u8bba\u6355\u83b7\u65b9\u5f0f\u662f\u4ec0\u4e48 \u88ab\u629b\u51fa\u4f5c\u4e3aexception\u7684\u5bf9\u8c61\uff0c\u5176\u88ab\u5141\u8bb8\u7684\u7c7b\u578b\u8f6c\u5316\u65b9\u5f0f\u6bd4\u88ab\u4f20\u9012\u5230\u51fd\u6570\u7684\u53bb\u7684\u65b9\u5f0f\u5c11 \u5f02\u5e38\u6bd4\u5bf9\u662f\u7b2c\u4e00\u4e2a\u6210\u529f\u5c31\u6267\u884c\uff0c\u800c\u4e0d\u662f\u6700\u4f73\u5339\u914d\u3002","title":"Item 12: Understand how throwing an exception differs from passing a parameter or calling a virtual function"},{"location":"books/more-effective-cpp/#item-13-catch-exceptions-by-reference","text":"\u7528\u6307\u9488\u6355\u83b7\uff0c\u5bb9\u6613\u5bfc\u81f4\u4f20\u8fdb\u6765\u7684\u6307\u9488\u5df2\u7ecf\u5931\u6548\uff0c\u6216\u8005\u4e0d\u77e5\u9053\u8be5\u4e0d\u8be5\u91ca\u653e\u8fd9\u4e2a\u6307\u9488 \u7528\u503c\u6355\u83b7\uff0c\u9700\u8981\u591a\u590d\u5236\u4e00\u4efd\u4e14\u4e0d\u652f\u6301\u591a\u6001 \u7528\u5f15\u7528\u6355\u83b7\uff0c\u6ca1\u6709\u7f3a\u70b9\uff01","title":"Item 13: Catch exceptions by reference"},{"location":"books/more-effective-cpp/#item-14-use-exception-specifications-judiciously","text":"C++11\u57fa\u672c\u4e0d\u600e\u4e48\u4f7f\u7528\u4e86\uff0c\u4ec5\u7528noexcept","title":"Item 14: Use exception specifications judiciously"},{"location":"books/more-effective-cpp/#item-15-understand-the-costs-of-exception-handling","text":"\u4f7f\u7528profile\u53bb\u68c0\u67e5\u6027\u80fd\u7684\u5f71\u54cd","title":"Item 15: Understand the costs of exception handling"},{"location":"books/more-effective-cpp/#item-16-remember-the-80-20-rule","text":"\u5728\u771f\u6b63\u5173\u952e\u7684\u5730\u65b9\u8fdb\u884c\u52aa\u529b","title":"Item 16: Remember the 80-20 rule"},{"location":"books/more-effective-cpp/#item-17-consider-using-lazy-evaluation","text":"\u7ecf\u5178\u7684\u8ba1\u7b97\u673a\u601d\u60f3\uff0c\u4ec5\u5728\u9700\u8981\u65f6\u8ba1\u7b97\u3002","title":"Item 17: Consider using lazy evaluation"},{"location":"books/more-effective-cpp/#item-18-amortize-the-cost-of-expected-computations","text":"\u5c06\u8ba1\u7b97\u5e73\u5766\u5230\u6bcf\u4e00\u6b21\u8c03\u7528\u4e2d\uff0c\u4f8b\u5982\u4f60\u9700\u8981\u8ba1\u7b97\u4e00\u4e2a\u6570\u7ec4\u4e2d\u7684\u6700\u5927\u503c\uff0c\u53ef\u4ee5\u5728\u6bcf\u4e00\u6b21\u6dfb\u52a0\u5143\u7d20\u65f6\uff0c\u5bf9\u6700\u5927\u503c\u8fdb\u884c\u66f4\u65b0\u3002","title":"Item 18: Amortize the cost of expected computations"},{"location":"books/more-effective-cpp/#item-19-understand-the-origin-of-temporary-objects","text":"\u4e34\u65f6\u5bf9\u8c61\u53ef\u80fd\u5f88\u8017\u6210\u672c\uff0c\u6240\u4ee5\u5e94\u8be5\u5c3d\u53ef\u80fd\u6d88\u9664\u5b83\u4eec\u3002\u4f8b\u5982reference to const \u4ee5\u53ca value\u7684\u5730\u65b9\u5c31\u53ef\u80fd\u4ea7\u751f\u4e34\u65f6\u5bf9\u8c61.","title":"Item 19: Understand the origin of temporary objects"},{"location":"books/more-effective-cpp/#item-20-facilitate-the-return-value-optimization","text":"\u8be6\u60c5\u770b RVO","title":"Item 20: Facilitate the return value optimization"},{"location":"books/more-effective-cpp/#item-21-overload-to-avoid-implicit-type-conversions","text":"\u4f7f\u7528\u91cd\u8f7d\u6765\u6d88\u9664\u9690\u5f0f\u8f6c\u6362\uff0c\u4ece\u800c\u6d88\u9664\u4e34\u65f6\u53d8\u91cf\uff0c\u4f8b\u5982 const UPInt operator + ( const UPInt & lhs , // add UPInt const UPInt & rhs ); // and UPInt const UPInt operator + ( const UPInt & lhs , // add UPInt int rhs ); // and int const UPInt operator + ( int lhs , // add int and const UPInt & rhs ); // UPInt \u8fd9\u6837\u5f53\u6267\u884c upi3 = upi1 + 10; \u5c31\u4e0d\u4f1a\u6709\u56e0\u4e3a\u7c7b\u578b\u8f6c\u6362\u800c\u4ea7\u751f\u4e34\u65f6\u53d8\u91cf\u3002","title":"Item 21:  Overload to avoid implicit type conversions"},{"location":"books/more-effective-cpp/#item-22-consider-using-op-instead-of-stand-alone-op","text":"\u590d\u5408\u7248\u672c\u5373+=\uff0c\u4e00\u822c\u6548\u7387\u9ad8\u4e8e+\uff0c\u56e0\u4e3a\u4e0d\u9700\u8981\u4ea7\u751f\u4e34\u65f6\u53d8\u91cf\u3002","title":"Item 22: Consider using op= instead of stand-alone op"},{"location":"books/more-effective-cpp/#item-23-consider-alternative-libraries","text":"\u8fd9\u4e2a\u6ca1\u5565\u8bf4\u7684\uff0c\u6709\u4ec0\u4e48\u9ad8\u6027\u80fd\u5e93\u5c31\u7528\u4ec0\u4e48\u5427\u3002","title":"Item 23: Consider alternative libraries"},{"location":"books/more-effective-cpp/#item-24-understand-the-costs-of-virtual-functions-multiple-inheritance-virtual-base-classes-and-rtti","text":"\u8fd9\u4e2a\u4e5f\u6ca1\u5565\u8bf4\u7684\uff0c\u53ea\u6709\u5b9e\u9645\u78b0\u5230\u624d\u80fd\u77e5\u9053\u3002","title":"Item 24: Understand the costs of virtual functions, multiple inheritance, virtual base classes, and RTTI"},{"location":"books/more-effective-cpp/#item-25-virtualizing-constructors-and-non-member-functions","text":"\u865a\u6784\u9020\u51fd\u6570\uff0c\u5b9e\u9645\u5c31\u662f\u4e00\u4e2a\u865astatic\u6210\u5458\u51fd\u6570\uff0c\u5728\u6784\u9020\u51fd\u6570\u4e2d\u8c03\u7528\uff0c\u4ece\u800c\u5b9e\u73b0\u865a\u6784\u9020\u51fd\u6570 \u865anon-member\u51fd\u6570\uff0c\u5199\u4e00\u4e2a\u865a\u51fd\u6570\u505a\u5b9e\u9645\u5de5\u4f5c\uff0c\u518d\u5b89\u6392\u975e\u865a\u51fd\u6570\u5bf9\u5176\u8fdb\u884c\u8c03\u7528\u3002","title":"Item 25: Virtualizing constructors and non-member functions"},{"location":"books/more-effective-cpp/#item-26-limiting-the-number-of-objects-of-a-class","text":"\u8bbe\u8ba1\u4e00\u4e2aCounted\u7c7b\uff0c\u5728\u5185\u90e8\u8fdb\u884c\u8ba1\u7b97\uff0c\u4ece\u800c\u7528\u6237\u65e0\u611f\u77e5","title":"Item 26: Limiting the number of objects of a class"},{"location":"books/more-effective-cpp/#item-27-requiring-or-prohibiting-heap-based-objects","text":"\u6709\u4e00\u4e2ahack\u7684\u65b9\u5f0f\u68c0\u67e5\u5bf9\u8c61\u662f\u5426\u5728heap\u4e2d(\u5229\u7528\u7a0b\u5e8f\u7684\u5185\u5b58\u5e03\u5c40\uff0c\u4f46\u4e0d\u5177\u6709\u53ef\u6269\u5c55\u6027) bool onHeap ( const void * address ) { char onTheStack ; // local stack variable return address < & onTheStack ; } \u6211\u4eec\u6ca1\u6709\u5b8c\u7f8e\u7684\u65b9\u5f0f\u6765\u9650\u5236\u5bf9\u8c61\u662f\u5426\u5728heap\u4e2d","title":"Item 27: Requiring or prohibiting heap-based objects"},{"location":"books/more-effective-cpp/#item-28-smart-pointers","text":"C++11 \u5df2\u7ecf\u652f\u6301\u4e86","title":"Item 28: Smart pointers"},{"location":"books/more-effective-cpp/#item-29-reference-counting","text":"\u7ecf\u5178\u95ee\u9898\uff0c\u4e0d\u5c55\u5f00\u4e86","title":"Item 29: Reference counting"},{"location":"books/more-effective-cpp/#item-30-proxy-classes","text":"\u4f7f\u7528proxy\u5bf9\u8c61\u6765\u8868\u793a\u67d0\u4e9b\u5e76\u4e0d\u5b58\u5728\u7684\u5bf9\u8c61\uff0c\u5e76\u4e14\u8ba9\u7528\u6237\u65e0\u611f\u77e5\u5373\u4e3aproxy classes","title":"Item 30: Proxy classes"},{"location":"books/more-effective-cpp/#item-31-making-functions-virtual-with-respect-to-more-than-one-object","text":"multi dispatch\uff0c\u6700\u4f73\u89e3\u51b3\u624b\u6bb5\uff0c\u81ea\u5df1\u5199\u865a\u8868\u3002","title":"Item 31: Making functions virtual with respect to more than one object"},{"location":"books/more-effective-cpp/#item-32-program-in-the-future-tense","text":"\u65f6\u523b\u60f3\u7740\u81ea\u5df1\u5199\u7684\u4ee3\u7801\u4f1a\u88ab\u5404\u79cd\u6269\u5c55\uff0c\u4ee5\u53ca\u5404\u79cd\u795e\u5947\u7684\u9700\u6c42","title":"Item 32: Program in the future tense"},{"location":"books/more-effective-cpp/#item-33-make-non-leaf-classes-abstract","text":"\u4e13\u95e8\u62bd\u8c61\u51faAbstract\u7c7b\uff0c\u8ba9\u5176\u4ed6\u7c7b\u6765\u7ee7\u627f\u3002","title":"Item 33: Make non-leaf classes abstract"},{"location":"books/more-effective-cpp/#item-34-understand-how-to-combine-c-and-c-in-the-same-program","text":"#ifdef __cplusplus extern \"C\" { #endif void drawLine ( int x1 , int y1 , int x2 , int y2 ); // \u4ee5\u8fd9\u79cd\u65b9\u5f0f\u907f\u514d\u7f16\u8bd1\u5668\u91cd\u547d\u540d void twiddleBits ( unsigned char bits ); void simulate ( int iterations ); ... #ifdef __cplusplus } #endif If you want to mix C++ and C in the same program, remember the following simple guidelines: \u25a0 Make sure the C++ and C compilers produce compatible object files. \u25a0 Declare functions to be used by both languages extern \"C\". \u25a0 If at all possible, write main in C++. \u25a0 Always use delete with memory from new; always use free with memory from malloc. \u25a0 Limit what you pass between the two languages to data structures that compile under C; the C++ version of structs may contain nonvirtual member functions.","title":"Item 34: Understand how to combine C++ and C in the same program"},{"location":"books/more-effective-cpp/#item-35-familiarize-yourself-with-the-language-standard","text":"\u719f\u6089\u8bed\u8a00\u6807\u51c6\uff01\u591a\u770b\u770bRFC\uff01","title":"Item 35: Familiarize yourself with the language standard"},{"location":"ir/doc-relv/","text":"\u6587\u672c\u76f8\u5173\u6027 \u6587\u672c\u76f8\u5173\u6027\u662f\u4fe1\u606f\u68c0\u7d22\u548c\u81ea\u7136\u8bed\u8a00\u5904\u7406\u4e2d\u7684\u4e00\u4e2a\u6838\u5fc3\u95ee\u9898\u3002\u5728\u6587\u672c\u76f8\u5173\u6027\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u80fd\u591f\u91cf\u5316\u6587\u672c\u4e4b\u95f4\u7684\u76f8\u4f3c\u7a0b\u5ea6\u6216\u76f8\u5173\u7a0b\u5ea6\uff0c\u4ee5\u4fbf\u6709\u6548\u5730\u5904\u7406\u548c\u7ec4\u7ec7\u6587\u672c\u6570\u636e\u3002\u4f8b\u5982\uff0c\u5728\u641c\u7d22\u5f15\u64ce\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u901a\u8fc7\u7528\u6237\u7684\u67e5\u8be2\u6765\u627e\u5230\u4e0e\u67e5\u8be2\u76f8\u5173\u7684\u6700\u76f8\u5173\u7684\u6587\u6863\u6216\u7f51\u9875\u3002\u5728\u6587\u6863\u5206\u7c7b\u548c\u805a\u7c7b\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u76f8\u4f3c\u7684\u6587\u6863\u653e\u5728\u4e00\u8d77\uff0c\u4ee5\u4fbf\u66f4\u597d\u5730\u7ba1\u7406\u548c\u5206\u6790\u5b83\u4eec\u3002\u5728\u6587\u672c\u5339\u914d\u548c\u76f8\u4f3c\u6027\u5339\u914d\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u627e\u5230\u4e24\u4e2a\u6587\u672c\u4e4b\u95f4\u7684\u76f8\u4f3c\u5ea6\uff0c\u4ee5\u4fbf\u8bc4\u4f30\u5b83\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb\u3002 \u8fd9\u7bc7\u535a\u5ba2\u4f1a\u4ecb\u7ecd TF-IDF \u4ee5\u53ca BM25 tf-idf tf-idf \uff08Term Frequency-Inverse Document Frequency\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u8bc4\u4f30\u6587\u6863\u4e2d\u5355\u8bcd\u91cd\u8981\u6027\u7684\u7edf\u8ba1\u65b9\u6cd5\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u4fe1\u606f\u68c0\u7d22\u3001\u81ea\u7136\u8bed\u8a00\u5904\u7406\u7b49\u9886\u57df\u3002 \u4ed6\u7684\u6574\u4f53\u516c\u5f0f\u5982\u4e0b \\[ \\text{tf-idf}(t,d,D) = \\text{tf}(t,d) \\cdot \\text{idf}(t,D) \\] \u5176\u4e2d\uff0c \\(t\\) \u662f\u6307\u67d0\u4e2a\u5355\u8bcd(term), \\(d\\) \u662f\u6307\u67d0\u4e2a\u6587\u6863(document), \\(D\\) \u662f\u6307\u6574\u4e2a\u6587\u6863\u96c6\u5408\u3002tf \u8868\u793a\u5355\u8bcd\u5728\u6587\u6863\u4e2d\u7684\u9891\u7387(term frequency)\u3002 idf \u8868\u793a\u5355\u8bcd\u5728\u6574\u4e2a\u6587\u6863\u96c6\u5408\u4e2d\u7684\u9006\u6587\u6863\u9891\u7387(inverse document frequency)\u3002 \u5b83\u4eec\u7684\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b: \\[ \\text{tf}(t,d) = \\frac{f_{t,d}}{\\sum_{t' \\in d} f_{t',d}} \\] \u5176\u4e2d\uff0c \\(f_{t,d}\\) \u662f\u6307\u5355\u8bcd \\(t\\) \u5728\u6587\u6863 \\(d\\) \u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u3002 \\[ \\text{idf}(t,D) = \\log{\\frac{N}{|{d \\in D : t \\in d}|}} \\] \u5176\u4e2d\uff0c \\(N\\) \u662f\u6307\u6574\u4e2a\u6587\u6863\u96c6\u5408\u4e2d\u6587\u6863\u7684\u603b\u6570\uff0c \\(|{d \\in D : t \\in d}|\\) \u662f\u6307\u5305\u542b\u5355\u8bcd \\(t\\) \u7684\u6587\u6863\u6570\u3002 tf-idf \u8003\u8651\u4e86\u4e00\u4e2a\u5355\u8bcd\u5728\u6587\u6863\u4e2d\u7684\u9891\u7387\u4ee5\u53ca\u5728\u6574\u4e2a\u6587\u6863\u96c6\u5408\u4e2d\u7684\u9891\u7387\uff0c\u4ece\u800c\u786e\u5b9a\u5b83\u5728\u6587\u6863\u4e2d\u7684\u91cd\u8981\u6027\u3002\u4e00\u4e2a\u5355\u8bcd\u5728\u67d0\u4e2a\u6587\u6863\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u8d8a\u591a\uff0c\u5176\u91cd\u8981\u6027\u5c31\u8d8a\u9ad8\uff08\u5373 tf \u8d8a\u9ad8\uff09,\u4f46\u662f\u5982\u679c\u5b83\u5728\u6574\u4e2a\u6587\u96c6\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u4e5f\u5f88\u591a\uff0c\u90a3\u4e48\u5b83\u7684\u91cd\u8981\u6027\u5c31\u4f1a\u964d\u4f4e(\u5373 idf \u8d8a\u4f4e) \u901a\u8fc7\u4f8b\u5b50\u6df1\u5165\u7406\u89e3 tf-idf \u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u5305\u542b\u4ee5\u4e0b 4 \u4e2a\u6587\u6863\u7684\u6587\u6863\u96c6\u5408: Doc 1: the cat in the hat Doc 2: the rat in the hat Doc 3: the cat and the rat Doc 4: the cat sat on the hat \u73b0\u5728\uff0c\u6211\u4eec\u60f3\u8981\u8ba1\u7b97\u5355\u8bcd \"cat\" \u5728\u6587\u6863\u96c6\u5408\u4e2d\u7684 tf-idf \u503c\u3002\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u5355\u8bcd \"cat\" \u5728\u6bcf\u4e2a\u6587\u6863\u4e2d\u7684 tf \u503c\u3002\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b\uff1a \\[\\text{tf}(t,d) = \\frac{f_{t,d}}{\\sum_{t' \\in d} f_{t',d}}\\] \u5176\u4e2d\uff0c \\(f_{t,d}\\) \u8868\u793a\u5355\u8bcd \\(t\\) \u5728\u6587\u6863 \\(d\\) \u4e2d\u51fa\u73b0\u7684\u6b21\u6570\uff0c \\(\\sum_{t' \\in d} f_{t',d}\\) \u8868\u793a\u6587\u6863 \\(d\\) \u4e2d\u6240\u6709\u5355\u8bcd\u7684\u51fa\u73b0\u6b21\u6570\u4e4b\u548c\u3002\u56e0\u6b64\uff0c\u5355\u8bcd \"cat\" \u5728\u6bcf\u4e2a\u6587\u6863\u4e2d\u7684 tf \u503c\u4e3a: tf ( cat , Doc 1 ) = 1 / 5 = 0 .2 tf ( cat , Doc 2 ) = 0 / 5 = 0 tf ( cat , Doc 3 ) = 1 / 6 = 0 .1667 tf ( cat , Doc 4 ) = 1 / 7 = 0 .1429 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u5355\u8bcd \"cat\" \u5728\u6574\u4e2a\u6587\u6863\u96c6\u5408\u4e2d\u7684 idf \u503c\u3002\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b\uff1a \\[\\text{idf}(t,D) = \\log{\\frac{N}{|{d \\in D : t \\in d}|}}\\] \u5176\u4e2d\uff0c \\(N\\) \u8868\u793a\u6587\u6863\u96c6\u5408\u4e2d\u6587\u6863\u7684\u603b\u6570\uff0c \\(|{d \\in D : t \\in d}|\\) \u8868\u793a\u5305\u542b\u5355\u8bcd \\(t\\) \u7684\u6587\u6863\u6570\u3002\u56e0\u6b64\uff0c\u5355\u8bcd \"cat\" \u5728\u6574\u4e2a\u6587\u6863\u96c6\u5408\u4e2d\u7684 idf \u503c\u4e3a\uff1a \\[\\text{idf}(cat, D) = \\log{\\frac{4}{3}} \\approx 0.2877\\] \u6700\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u5355\u8bcd \"cat\" \u5728\u6bcf\u4e2a\u6587\u6863\u4e2d\u7684 tf-idf \u503c\uff0c\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b\uff1a \\[\\text{tf-idf}(t,d,D) = \\text{tf}(t,d) \\cdot \\text{idf}(t,D)\\] \u56e0\u6b64\uff0c\u5355\u8bcd \"cat\" \u5728\u6bcf\u4e2a\u6587\u6863\u4e2d\u7684 tf-idf \u503c\u4e3a: tf-idf ( cat , Doc 1 , D ) = 0 .2 * 0 .2877 = 0 .0575 tf-idf ( cat , Doc 2 , D ) = 0 * 0 .2877 = 0 tf-idf ( cat , Doc 3 , D ) = 0 .1667 * 0 .2877 = 0 .0481 tf-idf ( cat , Doc 4 , D ) = 0 .1429 * 0 .2877 = 0 .0412 \u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u8ba1\u7b97\u51fa\u4e86\u5355\u8bcd \"cat\" \u5728\u6bcf\u4e2a\u6587\u6863\u4e2d\u7684 tf-idf \u503c\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u5355\u8bcd \"cat\" \u5728 Doc 1 \u548c Doc 3\u4e2d\u7684 tf-idf \u503c\u6bd4\u8f83\u9ad8\uff0c\u56e0\u4e3a\u5b83\u4eec\u5728\u6587\u6863\u4e2d\u51fa\u73b0\u5f97\u6bd4\u8f83\u5c11\uff0c\u5e76\u4e14\u5728\u6587\u6863\u96c6\u5408\u4e2d\u51fa\u73b0\u7684\u6587\u6863\u6570\u4e5f\u6bd4\u8f83\u5c11\uff0c\u8868\u660e\u5b83\u4eec\u5728\u6587\u6863\u96c6\u5408\u4e2d\u6bd4\u8f83\u91cd\u8981\u3002 BM25 \u4e0e tf-idf \u76f8\u4f3c\uff0c BM25 \u4e5f\u662f\u57fa\u4e8e\u8bcd\u9891\u7684\u7b97\u6cd5\uff0c\u4f46\u4e0e tf-idf \u4e0d\u540c\u7684\u662f\uff0c BM25 \u5f15\u5165\u4e86\u6587\u6863\u957f\u5ea6\u7684\u56e0\u7d20\uff0c\u540c\u65f6\u5bf9\u8bcd\u9891\u7684\u6743\u91cd\u8fdb\u884c\u4e86\u8c03\u6574\u3002 BM25 \u7684\u5168\u79f0\u662f Best Matching 25 \uff0c\u5b83\u8ba1\u7b97\u7684\u662f\u4e00\u4e2a\u67e5\u8be2\uff08query\uff09\u4e0e\u4e00\u4e2a\u6587\u6863\uff08document\uff09\u4e4b\u95f4\u7684\u76f8\u4f3c\u5ea6\u5f97\u5206\u3002 BM25 \u57fa\u4e8e\u4ee5\u4e0b\u4e09\u4e2a\u56e0\u7d20\u6765\u8ba1\u7b97\u6587\u6863\u7684\u5f97\u5206\uff1a \u67e5\u8be2\u9879\uff08query term\uff09\u5728\u6587\u6863\u4e2d\u7684\u51fa\u73b0\u6b21\u6570 \u6587\u6863\u7684\u957f\u5ea6\uff08\u5373\u5305\u542b\u7684\u5355\u8bcd\u6570\uff09 \u67e5\u8be2\u9879\u7684\u6587\u6863\u9891\u7387\uff08\u5373\u5305\u542b\u67e5\u8be2\u9879\u7684\u6587\u6863\u6570\u91cf\uff09 BM25 \u7684\u516c\u5f0f\u5982\u4e0b\uff1a \\[ \\text{BM25}(q, d) = \\sum_{i=1}^{|q|} \\text{idf}(q_i) \\cdot \\frac{f(q_i, d) \\cdot (k_1 + 1)}{f(q_i, d) + k_1 \\cdot (1 - b + b \\cdot \\frac{|d|}{\\text{avgdl}})} \\] \u5176\u4e2d\uff0c \\(q\\) \u662f\u67e5\u8be2\u9879 \\(d\\) \u662f\u6587\u6863 \\(|q|\\) \u662f\u67e5\u8be2\u9879\u7684\u6570\u91cf \\(q_i\\) \u662f\u7b2c \\(i\\) \u4e2a\u67e5\u8be2\u9879 \\(\\text{idf}(q_i)\\) \u662f\u67e5\u8be2\u9879 \\(q_i\\) \u7684\u9006\u6587\u6863\u9891\u7387\uff08inverse document frequency\uff09\uff0c\u5b9a\u4e49\u4e3a \\(\\text{idf}(q_i) = \\log{\\frac{N - n(q_i) + 0.5}{n(q_i) + 0.5}}\\) \\(N\\) \u662f\u6587\u6863\u96c6\u5408\u4e2d\u7684\u6587\u6863\u6570 \\(n(q_i)\\) \u662f\u5305\u542b\u67e5\u8be2\u9879 \\(q_i\\) \u7684\u6587\u6863\u6570 \\(f(q_i, d)\\) \u662f\u67e5\u8be2\u9879 \\(q_i\\) \u5728\u6587\u6863 \\(d\\) \u4e2d\u51fa\u73b0\u7684\u6b21\u6570 \\(|d|\\) \u662f\u6587\u6863 \\(d\\) \u4e2d\u7684\u5355\u8bcd\u6570 \\(\\text{avgdl}\\) \u662f\u6587\u6863\u96c6\u5408\u4e2d\u6240\u6709\u6587\u6863\u7684\u5e73\u5747\u957f\u5ea6 \\(k_1\\) \u548c \\(b\\) \u662f\u5e38\u6570\uff0c\u901a\u5e38\u53d6 \\(k_1 = 1.2\\) \uff0c \\(b = 0.75\\) \u5728 BM25 \u4e2d\uff0c\u67e5\u8be2\u9879\u7684\u6743\u91cd\u7531\u4e24\u4e2a\u56e0\u7d20\u51b3\u5b9a\uff1a\u9006\u6587\u6863\u9891\u7387\uff08idf\uff09\u548c\u8bcd\u9891\uff08tf\uff09\u3002\u4e0e tf-idf \u76f8\u4f3c\uff0c idf \u7528\u4e8e\u8861\u91cf\u4e00\u4e2a\u67e5\u8be2\u9879\u7684\u91cd\u8981\u7a0b\u5ea6\uff0c tf \u7528\u4e8e\u8861\u91cf\u67e5\u8be2\u9879\u5728\u6587\u6863\u4e2d\u7684\u51fa\u73b0\u9891\u7387\u3002\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c BM25 \u5f15\u5165\u4e86\u6587\u6863\u957f\u5ea6\u548c\u67e5\u8be2\u9879\u7684\u6587\u6863\u9891\u7387\u6765\u5bf9\u8bcd\u9891\u8fdb\u884c\u52a0\u6743\u3002 \u5177\u4f53\u6765\u8bf4\uff0c\u5f53\u6587\u6863\u957f\u5ea6\u5f88\u5c0f\u65f6\uff0c BM25 \u5bf9\u8bcd\u9891\u8fdb\u884c\u8f83\u5927\u7684\u52a0\u6743\uff0c\u8fd9\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u533a\u5206\u51fa\u73b0\u6b21\u6570\u5f88\u5c11\u4f46\u91cd\u8981\u7684\u67e5\u8be2\u9879\uff1b\u800c\u5f53\u6587\u6863\u957f\u5ea6\u5f88\u5927\u65f6\uff0c BM25 \u5bf9\u8bcd\u9891\u8fdb\u884c\u8f83\u5c0f\u7684\u52a0\u6743\uff0c\u4ee5\u907f\u514d\u53d7\u8fc7\u591a\u51fa\u73b0\u7684\u5e38\u89c1\u67e5\u8be2\u9879\u7684\u5f71\u54cd\u3002\u6b64\u5916\uff0c BM25 \u7684\u5e38\u6570\u53c2\u6570 \\(k_1\\) \u548c \\(b\\) \u4e5f\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8fdb\u884c\u8c03\u6574\uff0c\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u7ed3\u679c\u3002 \u8ba1\u7b97 BM25 \u7684\u4f8b\u5b50\uff1a \u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u6587\u6863\u96c6\u5408\uff0c\u5176\u4e2d\u5305\u542b\u4e09\u4e2a\u6587\u6863 \\(D_1, D_2, D_3\\) \uff0c\u5b83\u4eec\u7684\u957f\u5ea6\u5206\u522b\u4e3a \\(|D_1|=100, |D_2|=200, |D_3|=300\\) \u3002\u6211\u4eec\u8fd8\u6709\u4e00\u4e2a\u67e5\u8be2\u9879 \\(q\\) \uff0c\u5176\u4e2d\u5305\u542b\u4e24\u4e2a\u5355\u8bcd \\(q_1\\) \u548c \\(q_2\\) \u3002\u5047\u8bbe \\(q_1\\) \u5728 \\(D_1\\) \u4e2d\u51fa\u73b0\u4e86 2 \u6b21\uff0c\u5728 \\(D_2\\) \u4e2d\u51fa\u73b0\u4e86 5 \u6b21\uff0c\u5728 \\(D_3\\) \u4e2d\u51fa\u73b0\u4e86 10 \u6b21\uff1b \\(q_2\\) \u5728 \\(D_1\\) \u4e2d\u51fa\u73b0\u4e86 3 \u6b21\uff0c\u5728 \\(D_2\\) \u4e2d\u51fa\u73b0\u4e86 1 \u6b21\uff0c\u5728 \\(D_3\\) \u4e2d\u6ca1\u6709\u51fa\u73b0\u3002 \u6211\u4eec\u9700\u8981\u8ba1\u7b97\u6bcf\u4e2a\u6587\u6863\u4e0e\u67e5\u8be2\u9879 \\(q\\) \u7684 BM25 \u5f97\u5206\u3002\u4e3a\u4e86\u7b80\u5316\uff0c\u6211\u4eec\u5047\u8bbe \\(k_1 = 1.2\\) \uff0c \\(b = 0.75\\) \u3002 \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u6bcf\u4e2a\u67e5\u8be2\u9879\u7684\u9006\u6587\u6863\u9891\u7387 \\(\\text{idf}(q_i)\\) \u3002\u6839\u636e\u516c\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\uff1a \\[\\text{idf}(q_1) = \\log{\\frac{3 - 2 + 0.5}{2 + 0.5}} \\approx 0.29\\] \\[\\text{idf}(q_2) = \\log{\\frac{3 - 0 + 0.5}{0 + 0.5}} \\approx 1.79\\] \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u6bcf\u4e2a\u6587\u6863\u4e0e\u67e5\u8be2\u9879 \\(q\\) \u7684 BM25 \u5f97\u5206\u3002\u6839\u636e\u516c\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\uff1a \\[ \\text{BM25}(q, D_1) = \\text{idf}(q_1) \\cdot \\frac{2 \\cdot (1.2 + 1)}{2 + 1.2 \\cdot (1 - 0.75 + 0.75 \\cdot \\frac{100}{200})} + \\text{idf}(q_2) \\cdot \\frac{3 \\cdot (1.2 + 1)}{3 + 1.2 \\cdot (1 - 0.75 + 0.75 \\cdot \\frac{100}{200})} \\approx 0.78 \\] \\[ \\text{BM25}(q, D_2) = \\text{idf}(q_1) \\cdot \\frac{5 \\cdot (1.2 + 1)}{5 + 1.2 \\cdot (1 - 0.75 + 0.75 \\cdot \\frac{200}{200})} + \\text{idf}(q_2) \\cdot \\frac{1 \\cdot (1.2 + 1)}{1 + 1.2 \\cdot (1 - 0.75 + 0.75 \\cdot \\frac{200}{200})} \\approx 0.63 \\] \\[ \\text{BM25}(q, D_3) = \\text{idf}(q_1) \\cdot \\frac{10 \\cdot (1.2 + 1)}{10 + 1.2 \\cdot (1 - 0.75 + 0.75 \\cdot \\frac{300}{200})} + \\text{idf}(q_2) \\cdot \\frac{0 \\cdot (1.2 + 1)}{0 + 1.2 \\cdot (1 - 0.75 + 0.75 \\cdot \\frac{300}{200})} \\approx 0.69 \\] \u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e09\u4e2a\u6587\u6863\u4e0e\u67e5\u8be2\u9879 \\(q\\) \u7684 BM25 \u5f97\u5206\u5206\u522b\u4e3a 0.78\u30010.63 \u548c 0.69\u3002 \u8fd9\u4e2a\u4f8b\u5b50\u8bf4\u660e\u4e86\uff0c\u867d\u7136 \\(q_1\\) \u5728 \\(D_3\\) \u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u6700\u591a\uff0c\u4f46\u662f\u7531\u4e8e \\(D_3\\) \u7684\u957f\u5ea6\u8f83\u957f\uff0c\u800c\u4e14 \\(q_2\\) \u6ca1\u6709\u5728 \\(D_3\\) \u4e2d\u51fa\u73b0\uff0c\u56e0\u6b64 \\(D_1\\) \u7684\u5f97\u5206\u6700\u9ad8\u3002\u8fd9\u4e5f\u8bf4\u660e\u4e86 BM25 \u7b97\u6cd5\u7684\u4f18\u70b9\u4e4b\u4e00\uff0c\u5373\u514b\u670d\u4e86 tf-idf \u7b97\u6cd5\u4e2d\u5e38\u89c1\u67e5\u8be2\u9879\u5bf9\u7ed3\u679c\u7684\u5f71\u54cd\u3002 BM25\u7684\u516c\u5f0f\u8fdb\u4e00\u6b65\u89e3\u8bfb BM25 \u4e2d\u7684 idf\u516c\u5f0f \u4e0e\u539f\u7248\u7684 idf\u516c\u5f0f \u4e0d\u4e00\u81f4 \u4f20\u7edf\u7684 idf \u516c\u5f0f\u662f \\(\\log\\frac{N}{df}\\) \uff0c\u5176\u4e2d \\(N\\) \u662f\u6587\u6863\u96c6\u5408\u4e2d\u6587\u6863\u7684\u603b\u6570\uff0c \\(df\\) \u662f\u5305\u542b\u67e5\u8be2\u9879 \\(t\\) \u7684\u6587\u6863\u6570\u3002\u800c BM25 \u4e2d\u4f7f\u7528\u7684 idf \u516c\u5f0f\u662f \\(\\log\\frac{N-df+0.5}{df+0.5}\\) \u3002\u8fd9\u4e2a\u516c\u5f0f\u4e0e\u4f20\u7edf\u7684 idf \u516c\u5f0f\u76f8\u6bd4\uff0c\u4e3b\u8981\u505a\u4e86\u4e24\u4e2a\u6539\u52a8\uff1a \u52a0\u5165\u4e86\u5e73\u6ed1\u56e0\u5b50\uff1a\u5728\u4f20\u7edf\u7684 idf \u516c\u5f0f\u4e2d\uff0c\u5f53\u67d0\u4e2a\u67e5\u8be2\u9879\u5728\u6587\u6863\u96c6\u5408\u4e2d\u672a\u51fa\u73b0\u65f6\uff0c\u5176 idf \u503c\u4f1a\u53d8\u6210\u8d1f\u65e0\u7a77\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff0c BM25 \u4e2d\u7684 idf \u516c\u5f0f\u52a0\u5165\u4e86\u5e73\u6ed1\u56e0\u5b50 0.5\u3002 \u51cf\u5c11 idf \u7684\u5f71\u54cd\uff1a\u5728\u4f20\u7edf\u7684 idf \u516c\u5f0f\u4e2d\uff0c\u5f53\u67d0\u4e2a\u67e5\u8be2\u9879\u5728\u5f88\u5c11\u7684\u6587\u6863\u4e2d\u51fa\u73b0\u65f6\uff0c\u5176 idf \u503c\u4f1a\u5f88\u5927\uff0c\u5bf9\u7ed3\u679c\u4ea7\u751f\u8fc7\u5927\u7684\u5f71\u54cd\u3002 BM25 \u4e2d\u7684 idf \u516c\u5f0f\u901a\u8fc7\u51cf\u5c11 idf \u7684\u5f71\u54cd\uff0c\u4f7f\u5f97\u67e5\u8be2\u9879\u5728\u51fa\u73b0\u6587\u6863\u6570\u8f83\u5c11\u65f6\uff0c\u4e0d\u4f1a\u5bf9\u7ed3\u679c\u4ea7\u751f\u8fc7\u5927\u7684\u5f71\u54cd\u3002\u4f46\u662f\u5f53\u6587\u6863\u51fa\u73b0\u7684\u6570\u91cf\u8d85\u8fc7\u4e00\u534a\u65f6\uff0c\u8ba1\u7b97\u51fa\u7684idf\u503c\u4e3a\u8d1f\u6570\uff0cLucene\u4e2d\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u66f4\u6539\u4e86idf\u516c\u5f0f\u4e3a \\(\\log1+\\frac{N-df+0.5}{df+0.5}\\) \uff0c\u4ece\u800c\u9632\u6b62\u4e86\u8d1f\u6570\u7684\u4ea7\u751f\u3002 BM25 \u4e2d\u7684k\u662f\u5982\u4f55\u5f71\u54cd\u8ba1\u7b97\u51fa\u7684\u7ed3\u679c \\(k\\) \u7684\u503c\u63a7\u5236\u4e86\u8bcd\u9891\u5bf9\u5f97\u5206\u7684\u5f71\u54cd\u7a0b\u5ea6\uff0c\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u4e2a\u8bcd\u9891\u7684\u5f52\u4e00\u5316\u56e0\u5b50\u3002 \u5f53 \\(k\\) \u7684\u503c\u8f83\u5c0f\u65f6\uff0c\u8bcd\u9891\u7684\u5f71\u54cd\u5c31\u76f8\u5bf9\u8f83\u5c0f\uff0c\u5f97\u5206\u7684\u53d8\u5316\u8303\u56f4\u4e5f\u76f8\u5bf9\u8f83\u5c0f\uff1b\u5f53 \\(k\\) \u7684\u503c\u8f83\u5927\u65f6\uff0c\u8bcd\u9891\u7684\u5f71\u54cd\u5c31\u76f8\u5bf9\u8f83\u5927\uff0c\u5f97\u5206\u7684\u53d8\u5316\u8303\u56f4\u4e5f\u76f8\u5bf9\u8f83\u5927\u3002\u5f53 \\(k\\) \u7684\u503c\u7b49\u4e8e \\(0\\) \u65f6\uff0c\u76f8\u5f53\u4e8e\u5c06\u6587\u6863\u4e2d\u6240\u6709\u8bcd\u9879\u7684\u8bcd\u9891\u90fd\u89c6\u4e3a \\(1\\) \uff0c\u6b64\u65f6\u5f97\u5206\u53ea\u4e0e\u6587\u6863\u4e0e\u67e5\u8be2\u8bed\u53e5\u7684\u5339\u914d\u7a0b\u5ea6\u6709\u5173\u3002\u540c\u65f6\uff0c\u56e0\u4e3a\u6709 \\(k\\) \u7684\u5b58\u5728\uff0c\u5373\u4f7f\u8bcd\u9891\u7279\u522b\u5927\uff0c\u4e5f\u4e0d\u4f1a\u5bf9\u6700\u7ec8\u8ba1\u7b97\u7684\u7ed3\u679c\u6709\u5927\u7684\u5f71\u54cd\u3002\u5373\u5f53\u8bcd\u9891\u8fbe\u5230\u4e00\u5b9a\u7a0b\u5ea6\uff0c\u8ba1\u7b97\u51fa\u7684BM25\u7684\u503c\u5e76\u4e0d\u4f1a\u7ebf\u6027\u63d0\u5347\u3002 BM25 \u4e2d\u7684b\u662f\u5982\u4f55\u5f71\u54cd\u8ba1\u7b97\u51fa\u7684\u7ed3\u679c \u5728 BM25 \u4e2d\uff0c\u53c2\u6570 \\(b\\) \u7528\u6765\u5e73\u8861\u6587\u6863\u957f\u5ea6\u5bf9\u5f97\u5206\u7684\u5f71\u54cd\u3002\u5b83\u63a7\u5236\u4e86\u6587\u6863\u957f\u5ea6\u5bf9\u5f97\u5206\u7684\u5f71\u54cd\u7a0b\u5ea6\uff0c\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u4e2a\u6587\u6863\u957f\u5ea6\u7684\u5f52\u4e00\u5316\u56e0\u5b50\u3002 \\(b\\) \u7684\u53d6\u503c\u4f1a\u5f71\u54cd\u6587\u6863\u4e2d\u7684\u8bcd\u9879\u6743\u91cd \\(w_i\\) \u7684\u5927\u5c0f\uff0c\u8fd9\u91cc\u7684 \\(w_i\\) \u662f\u6307\u5305\u542b\u8bcd\u9879 \\(i\\) \u7684\u6587\u6863\u7684 \\(i\\) \u7684\u6743\u91cd\u3002\u5f53 \\(b\\) \u8d8a\u5927\u65f6\uff0c\u8868\u793a\u6587\u6863\u957f\u5ea6\u5bf9\u8bcd\u9879\u6743\u91cd\u7684\u5f71\u54cd\u8d8a\u5927\uff0c\u8fd9\u610f\u5473\u7740\u6587\u6863\u4e2d\u7684\u8bcd\u9879\u6743\u91cd \\(w_i\\) \u4f1a\u76f8\u5e94\u5730\u8d8b\u4e8e\u7f29\u5c0f\uff1b\u53cd\u4e4b\uff0c\u5f53 \\(b\\) \u8d8a\u5c0f\u65f6\uff0c\u8868\u793a\u6587\u6863\u957f\u5ea6\u5bf9\u8bcd\u9879\u6743\u91cd\u7684\u5f71\u54cd\u8d8a\u5c0f\uff0c\u8fd9\u610f\u5473\u7740\u6587\u6863\u4e2d\u7684\u8bcd\u9879\u6743\u91cd \\(w_i\\) \u4f1a\u76f8\u5e94\u5730\u8d8b\u4e8e\u6269\u5927\u3002 BM25 \u4e2d\u7684\u6587\u6863\u957f\u5ea6\u5982\u4f55\u5f71\u54cd\u8ba1\u7b97\u51fa\u7684\u7ed3\u679c \u4e00\u7bc7\u6587\u6863\u5982\u679c\u6240\u542b\u7684\u5355\u8bcd\u8d8a\u5c11\uff0c\u90a3\u4e48 \\( \\(\\frac{|d|}{\\text{avgdl}}\\) \\) \u8d8a\u5c0f\uff0c\u4ece\u800c\u5bfc\u81f4\u6700\u7ec8\u7684 BM25 \u8d8a\u5927\uff0c\u56e0\u6b64\u6587\u6863\u5b57\u6570\u8d8a\u5c11\uff0c\u76f8\u5173\u6027\u8d8a\u9ad8. - idf \u4e3a\u4ec0\u4e48\u8981\u7528\u5bf9\u6570\u8ba1\u7b97? \u5728\u8ba1\u7b97\u6587\u6863\u4e2d\u6bcf\u4e2a\u8bcd\u9879\u7684\u9006\u6587\u6863\u9891\u7387\u65f6\uff0c\u4f7f\u7528\u5bf9\u6570\u51fd\u6570\u7684\u76ee\u7684\u662f\u5c06idf\u503c\u7684\u8303\u56f4\u538b\u7f29\u5230\u4e00\u4e2a\u8f83\u5c0f\u7684\u533a\u95f4\u5185\u3002\u7531\u4e8e\u6587\u6863\u7684\u5927\u5c0f\u901a\u5e38\u4f1a\u5f88\u5927\uff0c\u56e0\u6b64\u4e00\u4e2a\u8bcd\u9879\u53ef\u80fd\u4f1a\u51fa\u73b0\u51e0\u5343\u751a\u81f3\u51e0\u5341\u4e07\u6b21\uff0c\u8fd9\u6837\u8ba1\u7b97\u5f97\u5230\u7684idf\u503c\u5c31\u4f1a\u975e\u5e38\u5927\u3002\u4f7f\u7528\u5bf9\u6570\u51fd\u6570\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u5927\u6570\u503c\u538b\u7f29\u5230\u4e00\u4e2a\u8f83\u5c0f\u7684\u533a\u95f4\u5185\uff0c\u4fbf\u4e8e\u8ba1\u7b97\u548c\u5904\u7406\u3002 \u6b64\u5916\uff0c\u5bf9\u6570\u51fd\u6570\u8fd8\u80fd\u591f\u4f7f\u5f97\u4f4e\u9891\u8bcd\u9879\u7684idf\u503c\u66f4\u52a0\u7a81\u51fa\u3002\u5982\u679c\u4e0d\u4f7f\u7528\u5bf9\u6570\u51fd\u6570\uff0c\u90a3\u4e48\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e9b\u4f4e\u9891\u8bcd\u9879\u7684idf\u503c\u53ef\u80fd\u4f1a\u975e\u5e38\u5c0f\uff0c\u751a\u81f3\u53ef\u80fd\u4f1a\u88ab\u5ffd\u7565\u3002\u800c\u4f7f\u7528\u5bf9\u6570\u51fd\u6570\u540e\uff0c\u8fd9\u4e9b\u4f4e\u9891\u8bcd\u9879\u7684idf\u503c\u5c31\u4f1a\u88ab\u653e\u5927\uff0c\u4f7f\u5f97\u5b83\u4eec\u5728\u68c0\u7d22\u65f6\u80fd\u591f\u66f4\u597d\u5730\u533a\u5206\u6587\u6863\u7684\u76f8\u5173\u6027\u3002 BM25F BM25F \u662f BM25 \u7b97\u6cd5\u7684\u4e00\u79cd\u53d8\u4f53\uff0c\u5b83\u5728 BM25 \u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e86\u5bf9\u591a\u5b57\u6bb5\u7684\u652f\u6301\u3002\u5728 BM25F \u4e2d\uff0c\u6bcf\u4e2a\u6587\u6863\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u5b57\u6bb5\uff08\u4f8b\u5982\u6807\u9898\u3001\u6b63\u6587\u3001\u6807\u7b7e\u7b49\uff09\uff0c\u6bcf\u4e2a\u5b57\u6bb5\u90fd\u6709\u4e00\u4e2a\u6743\u91cd\u3002 BM25F \u901a\u8fc7\u5c06\u6bcf\u4e2a\u5b57\u6bb5\u7684\u5f97\u5206\u76f8\u52a0\u6765\u8ba1\u7b97\u6587\u6863\u7684\u76f8\u5173\u6027\u5f97\u5206\u3002 BM25F \u7684\u516c\u5f0f\u5982\u4e0b\uff1a \\(score(D,Q) = \\sum_{i=1}^{n}weight(q_i)\\cdot IDF(q_i)\\cdot \\frac{f(q_i,D)\\cdot (k_i + 1)}{f(q_i,D) + k_i\\cdot (1 - b_i + b_i \\cdot \\frac{|D|}{avgdl_i})}\\) \u5176\u4e2d\uff0c \\(D\\) \u8868\u793a\u6587\u6863\uff0c \\(Q\\) \u8868\u793a\u67e5\u8be2\uff0c \\(n\\) \u8868\u793a\u67e5\u8be2\u4e2d\u7684\u8bcd\u9879\u6570\uff0c \\(q_i\\) \u8868\u793a\u67e5\u8be2\u4e2d\u7684\u7b2c \\(i\\) \u4e2a\u8bcd\u9879\uff0c \\(weight(q_i)\\) \u8868\u793a\u7b2c \\(i\\) \u4e2a\u8bcd\u9879\u7684\u6743\u91cd\uff0c \\(IDF(q_i)\\) \u8868\u793a\u7b2c \\(i\\) \u4e2a\u8bcd\u9879\u7684\u9006\u6587\u6863\u9891\u7387\uff0c \\(f(q_i,D)\\) \u8868\u793a\u6587\u6863 \\(D\\) \u4e2d\u7b2c \\(i\\) \u4e2a\u8bcd\u9879\u7684\u51fa\u73b0\u9891\u7387\uff0c \\(k_i\\) \u548c \\(b_i\\) \u5206\u522b\u8868\u793a\u7b2c \\(i\\) \u4e2a\u8bcd\u9879\u7684\u53c2\u6570 \\(k\\) \u548c \\(b\\) \uff0c \\(|D|\\) \u8868\u793a\u6587\u6863 \\(D\\) \u7684\u957f\u5ea6\uff0c \\(avgdl_i\\) \u8868\u793a\u5305\u542b\u7b2c \\(i\\) \u4e2a\u5b57\u6bb5\u7684\u6240\u6709\u6587\u6863\u7684\u5e73\u5747\u957f\u5ea6\u3002 \u5728 BM25F \u4e2d\uff0c\u6bcf\u4e2a\u8bcd\u9879\u7684\u6743\u91cd\u7531\u5176\u6240\u5728\u7684\u5b57\u6bb5\u7684\u6743\u91cd\u548c\u5168\u5c40\u6743\u91cd\u4e24\u90e8\u5206\u7ec4\u6210\u3002\u5168\u5c40\u6743\u91cd\u8868\u793a\u8be5\u8bcd\u9879\u5728\u6574\u4e2a\u6587\u96c6\u4e2d\u7684\u91cd\u8981\u6027\uff0c\u5b57\u6bb5\u6743\u91cd\u5219\u8868\u793a\u8be5\u8bcd\u9879\u5728\u5f53\u524d\u5b57\u6bb5\u4e2d\u7684\u91cd\u8981\u6027\u3002\u8bcd\u9879\u7684\u6743\u91cd\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u516c\u5f0f\u8ba1\u7b97\uff1a \\(weight(q_i) = weight_{field}(q_i)\\cdot weight_{global}(q_i)\\) \u5176\u4e2d\uff0c \\(weight_{field}(q_i)\\) \u8868\u793a\u7b2c \\(i\\) \u4e2a\u8bcd\u9879\u5728\u5f53\u524d\u5b57\u6bb5\u4e2d\u7684\u6743\u91cd\uff0c \\(weight_{global}(q_i)\\) \u8868\u793a\u7b2c \\(i\\) \u4e2a\u8bcd\u9879\u5728\u5168\u5c40\u6587\u6863\u96c6\u4e2d\u7684\u6743\u91cd\u3002 BM25F \u7684\u4f18\u70b9\u662f\u80fd\u591f\u6709\u6548\u5730\u5904\u7406\u591a\u5b57\u6bb5\u67e5\u8be2\uff0c\u53ef\u4ee5\u66f4\u597d\u5730\u5339\u914d\u67e5\u8be2\u548c\u6587\u6863\u4e2d\u4e0d\u540c\u5b57\u6bb5\u7684\u76f8\u5173\u6027\u3002\u5b83\u53ef\u4ee5\u901a\u8fc7\u8c03\u6574\u5b57\u6bb5\u7684\u6743\u91cd\u6765\u5bf9\u4e0d\u540c\u5b57\u6bb5\u7684\u91cd\u8981\u6027\u8fdb\u884c\u8c03\u6574\uff0c\u4ece\u800c\u63d0\u9ad8\u641c\u7d22\u7ed3\u679c\u7684\u51c6\u786e\u6027\u3002 \u603b\u7ed3 tf-idf \u8bcd\u9891\u8d8a\u9ad8\uff0c\u8bcd\u9891\u5728\u6574\u4e2a\u6587\u6863\u96c6\u4e2d\u8d8a\u7a00\u5c11\uff0c\u503c\u8d8a\u9ad8 BM25 \u8bcd\u9891\u5728\u6574\u4e2a\u6587\u6863\u96c6\u4e2d\u8d8a\u7a00\u5c11\uff0c\u8bcd\u9891\u8d8a\u9ad8\uff0c \u6587\u6863\u7684\u5355\u8bcd\u6570\u8d8a\u5c11 \uff0c\u503c\u8d8a\u9ad8 BM25F \u8bcd\u9891\u5728\u6574\u4e2a\u6587\u6863\u96c6\u4e2d\u8d8a\u7a00\u5c11\uff0c\u8bcd\u9891\u8d8a\u9ad8\uff0c \u6587\u6863\u7684\u5355\u8bcd\u6570\u8d8a\u5c11\uff0c \u6743\u91cd\u8d8a\u9ad8 \uff0c\u503c\u8d8a\u9ad8","title":"\u6587\u672c\u76f8\u5173\u6027"},{"location":"ir/doc-relv/#_1","text":"\u6587\u672c\u76f8\u5173\u6027\u662f\u4fe1\u606f\u68c0\u7d22\u548c\u81ea\u7136\u8bed\u8a00\u5904\u7406\u4e2d\u7684\u4e00\u4e2a\u6838\u5fc3\u95ee\u9898\u3002\u5728\u6587\u672c\u76f8\u5173\u6027\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u80fd\u591f\u91cf\u5316\u6587\u672c\u4e4b\u95f4\u7684\u76f8\u4f3c\u7a0b\u5ea6\u6216\u76f8\u5173\u7a0b\u5ea6\uff0c\u4ee5\u4fbf\u6709\u6548\u5730\u5904\u7406\u548c\u7ec4\u7ec7\u6587\u672c\u6570\u636e\u3002\u4f8b\u5982\uff0c\u5728\u641c\u7d22\u5f15\u64ce\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u901a\u8fc7\u7528\u6237\u7684\u67e5\u8be2\u6765\u627e\u5230\u4e0e\u67e5\u8be2\u76f8\u5173\u7684\u6700\u76f8\u5173\u7684\u6587\u6863\u6216\u7f51\u9875\u3002\u5728\u6587\u6863\u5206\u7c7b\u548c\u805a\u7c7b\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u76f8\u4f3c\u7684\u6587\u6863\u653e\u5728\u4e00\u8d77\uff0c\u4ee5\u4fbf\u66f4\u597d\u5730\u7ba1\u7406\u548c\u5206\u6790\u5b83\u4eec\u3002\u5728\u6587\u672c\u5339\u914d\u548c\u76f8\u4f3c\u6027\u5339\u914d\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u627e\u5230\u4e24\u4e2a\u6587\u672c\u4e4b\u95f4\u7684\u76f8\u4f3c\u5ea6\uff0c\u4ee5\u4fbf\u8bc4\u4f30\u5b83\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb\u3002 \u8fd9\u7bc7\u535a\u5ba2\u4f1a\u4ecb\u7ecd TF-IDF \u4ee5\u53ca BM25","title":"\u6587\u672c\u76f8\u5173\u6027"},{"location":"ir/doc-relv/#tf-idf","text":"tf-idf \uff08Term Frequency-Inverse Document Frequency\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u8bc4\u4f30\u6587\u6863\u4e2d\u5355\u8bcd\u91cd\u8981\u6027\u7684\u7edf\u8ba1\u65b9\u6cd5\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u4fe1\u606f\u68c0\u7d22\u3001\u81ea\u7136\u8bed\u8a00\u5904\u7406\u7b49\u9886\u57df\u3002 \u4ed6\u7684\u6574\u4f53\u516c\u5f0f\u5982\u4e0b \\[ \\text{tf-idf}(t,d,D) = \\text{tf}(t,d) \\cdot \\text{idf}(t,D) \\] \u5176\u4e2d\uff0c \\(t\\) \u662f\u6307\u67d0\u4e2a\u5355\u8bcd(term), \\(d\\) \u662f\u6307\u67d0\u4e2a\u6587\u6863(document), \\(D\\) \u662f\u6307\u6574\u4e2a\u6587\u6863\u96c6\u5408\u3002tf \u8868\u793a\u5355\u8bcd\u5728\u6587\u6863\u4e2d\u7684\u9891\u7387(term frequency)\u3002 idf \u8868\u793a\u5355\u8bcd\u5728\u6574\u4e2a\u6587\u6863\u96c6\u5408\u4e2d\u7684\u9006\u6587\u6863\u9891\u7387(inverse document frequency)\u3002 \u5b83\u4eec\u7684\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b: \\[ \\text{tf}(t,d) = \\frac{f_{t,d}}{\\sum_{t' \\in d} f_{t',d}} \\] \u5176\u4e2d\uff0c \\(f_{t,d}\\) \u662f\u6307\u5355\u8bcd \\(t\\) \u5728\u6587\u6863 \\(d\\) \u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u3002 \\[ \\text{idf}(t,D) = \\log{\\frac{N}{|{d \\in D : t \\in d}|}} \\] \u5176\u4e2d\uff0c \\(N\\) \u662f\u6307\u6574\u4e2a\u6587\u6863\u96c6\u5408\u4e2d\u6587\u6863\u7684\u603b\u6570\uff0c \\(|{d \\in D : t \\in d}|\\) \u662f\u6307\u5305\u542b\u5355\u8bcd \\(t\\) \u7684\u6587\u6863\u6570\u3002 tf-idf \u8003\u8651\u4e86\u4e00\u4e2a\u5355\u8bcd\u5728\u6587\u6863\u4e2d\u7684\u9891\u7387\u4ee5\u53ca\u5728\u6574\u4e2a\u6587\u6863\u96c6\u5408\u4e2d\u7684\u9891\u7387\uff0c\u4ece\u800c\u786e\u5b9a\u5b83\u5728\u6587\u6863\u4e2d\u7684\u91cd\u8981\u6027\u3002\u4e00\u4e2a\u5355\u8bcd\u5728\u67d0\u4e2a\u6587\u6863\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u8d8a\u591a\uff0c\u5176\u91cd\u8981\u6027\u5c31\u8d8a\u9ad8\uff08\u5373 tf \u8d8a\u9ad8\uff09,\u4f46\u662f\u5982\u679c\u5b83\u5728\u6574\u4e2a\u6587\u96c6\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u4e5f\u5f88\u591a\uff0c\u90a3\u4e48\u5b83\u7684\u91cd\u8981\u6027\u5c31\u4f1a\u964d\u4f4e(\u5373 idf \u8d8a\u4f4e)","title":"tf-idf"},{"location":"ir/doc-relv/#tf-idf_1","text":"\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u5305\u542b\u4ee5\u4e0b 4 \u4e2a\u6587\u6863\u7684\u6587\u6863\u96c6\u5408: Doc 1: the cat in the hat Doc 2: the rat in the hat Doc 3: the cat and the rat Doc 4: the cat sat on the hat \u73b0\u5728\uff0c\u6211\u4eec\u60f3\u8981\u8ba1\u7b97\u5355\u8bcd \"cat\" \u5728\u6587\u6863\u96c6\u5408\u4e2d\u7684 tf-idf \u503c\u3002\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u5355\u8bcd \"cat\" \u5728\u6bcf\u4e2a\u6587\u6863\u4e2d\u7684 tf \u503c\u3002\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b\uff1a \\[\\text{tf}(t,d) = \\frac{f_{t,d}}{\\sum_{t' \\in d} f_{t',d}}\\] \u5176\u4e2d\uff0c \\(f_{t,d}\\) \u8868\u793a\u5355\u8bcd \\(t\\) \u5728\u6587\u6863 \\(d\\) \u4e2d\u51fa\u73b0\u7684\u6b21\u6570\uff0c \\(\\sum_{t' \\in d} f_{t',d}\\) \u8868\u793a\u6587\u6863 \\(d\\) \u4e2d\u6240\u6709\u5355\u8bcd\u7684\u51fa\u73b0\u6b21\u6570\u4e4b\u548c\u3002\u56e0\u6b64\uff0c\u5355\u8bcd \"cat\" \u5728\u6bcf\u4e2a\u6587\u6863\u4e2d\u7684 tf \u503c\u4e3a: tf ( cat , Doc 1 ) = 1 / 5 = 0 .2 tf ( cat , Doc 2 ) = 0 / 5 = 0 tf ( cat , Doc 3 ) = 1 / 6 = 0 .1667 tf ( cat , Doc 4 ) = 1 / 7 = 0 .1429 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u5355\u8bcd \"cat\" \u5728\u6574\u4e2a\u6587\u6863\u96c6\u5408\u4e2d\u7684 idf \u503c\u3002\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b\uff1a \\[\\text{idf}(t,D) = \\log{\\frac{N}{|{d \\in D : t \\in d}|}}\\] \u5176\u4e2d\uff0c \\(N\\) \u8868\u793a\u6587\u6863\u96c6\u5408\u4e2d\u6587\u6863\u7684\u603b\u6570\uff0c \\(|{d \\in D : t \\in d}|\\) \u8868\u793a\u5305\u542b\u5355\u8bcd \\(t\\) \u7684\u6587\u6863\u6570\u3002\u56e0\u6b64\uff0c\u5355\u8bcd \"cat\" \u5728\u6574\u4e2a\u6587\u6863\u96c6\u5408\u4e2d\u7684 idf \u503c\u4e3a\uff1a \\[\\text{idf}(cat, D) = \\log{\\frac{4}{3}} \\approx 0.2877\\] \u6700\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u5355\u8bcd \"cat\" \u5728\u6bcf\u4e2a\u6587\u6863\u4e2d\u7684 tf-idf \u503c\uff0c\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b\uff1a \\[\\text{tf-idf}(t,d,D) = \\text{tf}(t,d) \\cdot \\text{idf}(t,D)\\] \u56e0\u6b64\uff0c\u5355\u8bcd \"cat\" \u5728\u6bcf\u4e2a\u6587\u6863\u4e2d\u7684 tf-idf \u503c\u4e3a: tf-idf ( cat , Doc 1 , D ) = 0 .2 * 0 .2877 = 0 .0575 tf-idf ( cat , Doc 2 , D ) = 0 * 0 .2877 = 0 tf-idf ( cat , Doc 3 , D ) = 0 .1667 * 0 .2877 = 0 .0481 tf-idf ( cat , Doc 4 , D ) = 0 .1429 * 0 .2877 = 0 .0412 \u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u8ba1\u7b97\u51fa\u4e86\u5355\u8bcd \"cat\" \u5728\u6bcf\u4e2a\u6587\u6863\u4e2d\u7684 tf-idf \u503c\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u5355\u8bcd \"cat\" \u5728 Doc 1 \u548c Doc 3\u4e2d\u7684 tf-idf \u503c\u6bd4\u8f83\u9ad8\uff0c\u56e0\u4e3a\u5b83\u4eec\u5728\u6587\u6863\u4e2d\u51fa\u73b0\u5f97\u6bd4\u8f83\u5c11\uff0c\u5e76\u4e14\u5728\u6587\u6863\u96c6\u5408\u4e2d\u51fa\u73b0\u7684\u6587\u6863\u6570\u4e5f\u6bd4\u8f83\u5c11\uff0c\u8868\u660e\u5b83\u4eec\u5728\u6587\u6863\u96c6\u5408\u4e2d\u6bd4\u8f83\u91cd\u8981\u3002","title":"\u901a\u8fc7\u4f8b\u5b50\u6df1\u5165\u7406\u89e3tf-idf"},{"location":"ir/doc-relv/#bm25","text":"\u4e0e tf-idf \u76f8\u4f3c\uff0c BM25 \u4e5f\u662f\u57fa\u4e8e\u8bcd\u9891\u7684\u7b97\u6cd5\uff0c\u4f46\u4e0e tf-idf \u4e0d\u540c\u7684\u662f\uff0c BM25 \u5f15\u5165\u4e86\u6587\u6863\u957f\u5ea6\u7684\u56e0\u7d20\uff0c\u540c\u65f6\u5bf9\u8bcd\u9891\u7684\u6743\u91cd\u8fdb\u884c\u4e86\u8c03\u6574\u3002 BM25 \u7684\u5168\u79f0\u662f Best Matching 25 \uff0c\u5b83\u8ba1\u7b97\u7684\u662f\u4e00\u4e2a\u67e5\u8be2\uff08query\uff09\u4e0e\u4e00\u4e2a\u6587\u6863\uff08document\uff09\u4e4b\u95f4\u7684\u76f8\u4f3c\u5ea6\u5f97\u5206\u3002 BM25 \u57fa\u4e8e\u4ee5\u4e0b\u4e09\u4e2a\u56e0\u7d20\u6765\u8ba1\u7b97\u6587\u6863\u7684\u5f97\u5206\uff1a \u67e5\u8be2\u9879\uff08query term\uff09\u5728\u6587\u6863\u4e2d\u7684\u51fa\u73b0\u6b21\u6570 \u6587\u6863\u7684\u957f\u5ea6\uff08\u5373\u5305\u542b\u7684\u5355\u8bcd\u6570\uff09 \u67e5\u8be2\u9879\u7684\u6587\u6863\u9891\u7387\uff08\u5373\u5305\u542b\u67e5\u8be2\u9879\u7684\u6587\u6863\u6570\u91cf\uff09 BM25 \u7684\u516c\u5f0f\u5982\u4e0b\uff1a \\[ \\text{BM25}(q, d) = \\sum_{i=1}^{|q|} \\text{idf}(q_i) \\cdot \\frac{f(q_i, d) \\cdot (k_1 + 1)}{f(q_i, d) + k_1 \\cdot (1 - b + b \\cdot \\frac{|d|}{\\text{avgdl}})} \\] \u5176\u4e2d\uff0c \\(q\\) \u662f\u67e5\u8be2\u9879 \\(d\\) \u662f\u6587\u6863 \\(|q|\\) \u662f\u67e5\u8be2\u9879\u7684\u6570\u91cf \\(q_i\\) \u662f\u7b2c \\(i\\) \u4e2a\u67e5\u8be2\u9879 \\(\\text{idf}(q_i)\\) \u662f\u67e5\u8be2\u9879 \\(q_i\\) \u7684\u9006\u6587\u6863\u9891\u7387\uff08inverse document frequency\uff09\uff0c\u5b9a\u4e49\u4e3a \\(\\text{idf}(q_i) = \\log{\\frac{N - n(q_i) + 0.5}{n(q_i) + 0.5}}\\) \\(N\\) \u662f\u6587\u6863\u96c6\u5408\u4e2d\u7684\u6587\u6863\u6570 \\(n(q_i)\\) \u662f\u5305\u542b\u67e5\u8be2\u9879 \\(q_i\\) \u7684\u6587\u6863\u6570 \\(f(q_i, d)\\) \u662f\u67e5\u8be2\u9879 \\(q_i\\) \u5728\u6587\u6863 \\(d\\) \u4e2d\u51fa\u73b0\u7684\u6b21\u6570 \\(|d|\\) \u662f\u6587\u6863 \\(d\\) \u4e2d\u7684\u5355\u8bcd\u6570 \\(\\text{avgdl}\\) \u662f\u6587\u6863\u96c6\u5408\u4e2d\u6240\u6709\u6587\u6863\u7684\u5e73\u5747\u957f\u5ea6 \\(k_1\\) \u548c \\(b\\) \u662f\u5e38\u6570\uff0c\u901a\u5e38\u53d6 \\(k_1 = 1.2\\) \uff0c \\(b = 0.75\\) \u5728 BM25 \u4e2d\uff0c\u67e5\u8be2\u9879\u7684\u6743\u91cd\u7531\u4e24\u4e2a\u56e0\u7d20\u51b3\u5b9a\uff1a\u9006\u6587\u6863\u9891\u7387\uff08idf\uff09\u548c\u8bcd\u9891\uff08tf\uff09\u3002\u4e0e tf-idf \u76f8\u4f3c\uff0c idf \u7528\u4e8e\u8861\u91cf\u4e00\u4e2a\u67e5\u8be2\u9879\u7684\u91cd\u8981\u7a0b\u5ea6\uff0c tf \u7528\u4e8e\u8861\u91cf\u67e5\u8be2\u9879\u5728\u6587\u6863\u4e2d\u7684\u51fa\u73b0\u9891\u7387\u3002\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c BM25 \u5f15\u5165\u4e86\u6587\u6863\u957f\u5ea6\u548c\u67e5\u8be2\u9879\u7684\u6587\u6863\u9891\u7387\u6765\u5bf9\u8bcd\u9891\u8fdb\u884c\u52a0\u6743\u3002 \u5177\u4f53\u6765\u8bf4\uff0c\u5f53\u6587\u6863\u957f\u5ea6\u5f88\u5c0f\u65f6\uff0c BM25 \u5bf9\u8bcd\u9891\u8fdb\u884c\u8f83\u5927\u7684\u52a0\u6743\uff0c\u8fd9\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u533a\u5206\u51fa\u73b0\u6b21\u6570\u5f88\u5c11\u4f46\u91cd\u8981\u7684\u67e5\u8be2\u9879\uff1b\u800c\u5f53\u6587\u6863\u957f\u5ea6\u5f88\u5927\u65f6\uff0c BM25 \u5bf9\u8bcd\u9891\u8fdb\u884c\u8f83\u5c0f\u7684\u52a0\u6743\uff0c\u4ee5\u907f\u514d\u53d7\u8fc7\u591a\u51fa\u73b0\u7684\u5e38\u89c1\u67e5\u8be2\u9879\u7684\u5f71\u54cd\u3002\u6b64\u5916\uff0c BM25 \u7684\u5e38\u6570\u53c2\u6570 \\(k_1\\) \u548c \\(b\\) \u4e5f\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8fdb\u884c\u8c03\u6574\uff0c\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u7ed3\u679c\u3002","title":"BM25"},{"location":"ir/doc-relv/#bm25_1","text":"\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u6587\u6863\u96c6\u5408\uff0c\u5176\u4e2d\u5305\u542b\u4e09\u4e2a\u6587\u6863 \\(D_1, D_2, D_3\\) \uff0c\u5b83\u4eec\u7684\u957f\u5ea6\u5206\u522b\u4e3a \\(|D_1|=100, |D_2|=200, |D_3|=300\\) \u3002\u6211\u4eec\u8fd8\u6709\u4e00\u4e2a\u67e5\u8be2\u9879 \\(q\\) \uff0c\u5176\u4e2d\u5305\u542b\u4e24\u4e2a\u5355\u8bcd \\(q_1\\) \u548c \\(q_2\\) \u3002\u5047\u8bbe \\(q_1\\) \u5728 \\(D_1\\) \u4e2d\u51fa\u73b0\u4e86 2 \u6b21\uff0c\u5728 \\(D_2\\) \u4e2d\u51fa\u73b0\u4e86 5 \u6b21\uff0c\u5728 \\(D_3\\) \u4e2d\u51fa\u73b0\u4e86 10 \u6b21\uff1b \\(q_2\\) \u5728 \\(D_1\\) \u4e2d\u51fa\u73b0\u4e86 3 \u6b21\uff0c\u5728 \\(D_2\\) \u4e2d\u51fa\u73b0\u4e86 1 \u6b21\uff0c\u5728 \\(D_3\\) \u4e2d\u6ca1\u6709\u51fa\u73b0\u3002 \u6211\u4eec\u9700\u8981\u8ba1\u7b97\u6bcf\u4e2a\u6587\u6863\u4e0e\u67e5\u8be2\u9879 \\(q\\) \u7684 BM25 \u5f97\u5206\u3002\u4e3a\u4e86\u7b80\u5316\uff0c\u6211\u4eec\u5047\u8bbe \\(k_1 = 1.2\\) \uff0c \\(b = 0.75\\) \u3002 \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u6bcf\u4e2a\u67e5\u8be2\u9879\u7684\u9006\u6587\u6863\u9891\u7387 \\(\\text{idf}(q_i)\\) \u3002\u6839\u636e\u516c\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\uff1a \\[\\text{idf}(q_1) = \\log{\\frac{3 - 2 + 0.5}{2 + 0.5}} \\approx 0.29\\] \\[\\text{idf}(q_2) = \\log{\\frac{3 - 0 + 0.5}{0 + 0.5}} \\approx 1.79\\] \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u6bcf\u4e2a\u6587\u6863\u4e0e\u67e5\u8be2\u9879 \\(q\\) \u7684 BM25 \u5f97\u5206\u3002\u6839\u636e\u516c\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\uff1a \\[ \\text{BM25}(q, D_1) = \\text{idf}(q_1) \\cdot \\frac{2 \\cdot (1.2 + 1)}{2 + 1.2 \\cdot (1 - 0.75 + 0.75 \\cdot \\frac{100}{200})} + \\text{idf}(q_2) \\cdot \\frac{3 \\cdot (1.2 + 1)}{3 + 1.2 \\cdot (1 - 0.75 + 0.75 \\cdot \\frac{100}{200})} \\approx 0.78 \\] \\[ \\text{BM25}(q, D_2) = \\text{idf}(q_1) \\cdot \\frac{5 \\cdot (1.2 + 1)}{5 + 1.2 \\cdot (1 - 0.75 + 0.75 \\cdot \\frac{200}{200})} + \\text{idf}(q_2) \\cdot \\frac{1 \\cdot (1.2 + 1)}{1 + 1.2 \\cdot (1 - 0.75 + 0.75 \\cdot \\frac{200}{200})} \\approx 0.63 \\] \\[ \\text{BM25}(q, D_3) = \\text{idf}(q_1) \\cdot \\frac{10 \\cdot (1.2 + 1)}{10 + 1.2 \\cdot (1 - 0.75 + 0.75 \\cdot \\frac{300}{200})} + \\text{idf}(q_2) \\cdot \\frac{0 \\cdot (1.2 + 1)}{0 + 1.2 \\cdot (1 - 0.75 + 0.75 \\cdot \\frac{300}{200})} \\approx 0.69 \\] \u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e09\u4e2a\u6587\u6863\u4e0e\u67e5\u8be2\u9879 \\(q\\) \u7684 BM25 \u5f97\u5206\u5206\u522b\u4e3a 0.78\u30010.63 \u548c 0.69\u3002 \u8fd9\u4e2a\u4f8b\u5b50\u8bf4\u660e\u4e86\uff0c\u867d\u7136 \\(q_1\\) \u5728 \\(D_3\\) \u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u6700\u591a\uff0c\u4f46\u662f\u7531\u4e8e \\(D_3\\) \u7684\u957f\u5ea6\u8f83\u957f\uff0c\u800c\u4e14 \\(q_2\\) \u6ca1\u6709\u5728 \\(D_3\\) \u4e2d\u51fa\u73b0\uff0c\u56e0\u6b64 \\(D_1\\) \u7684\u5f97\u5206\u6700\u9ad8\u3002\u8fd9\u4e5f\u8bf4\u660e\u4e86 BM25 \u7b97\u6cd5\u7684\u4f18\u70b9\u4e4b\u4e00\uff0c\u5373\u514b\u670d\u4e86 tf-idf \u7b97\u6cd5\u4e2d\u5e38\u89c1\u67e5\u8be2\u9879\u5bf9\u7ed3\u679c\u7684\u5f71\u54cd\u3002","title":"\u8ba1\u7b97 BM25 \u7684\u4f8b\u5b50\uff1a"},{"location":"ir/doc-relv/#bm25_2","text":"BM25 \u4e2d\u7684 idf\u516c\u5f0f \u4e0e\u539f\u7248\u7684 idf\u516c\u5f0f \u4e0d\u4e00\u81f4 \u4f20\u7edf\u7684 idf \u516c\u5f0f\u662f \\(\\log\\frac{N}{df}\\) \uff0c\u5176\u4e2d \\(N\\) \u662f\u6587\u6863\u96c6\u5408\u4e2d\u6587\u6863\u7684\u603b\u6570\uff0c \\(df\\) \u662f\u5305\u542b\u67e5\u8be2\u9879 \\(t\\) \u7684\u6587\u6863\u6570\u3002\u800c BM25 \u4e2d\u4f7f\u7528\u7684 idf \u516c\u5f0f\u662f \\(\\log\\frac{N-df+0.5}{df+0.5}\\) \u3002\u8fd9\u4e2a\u516c\u5f0f\u4e0e\u4f20\u7edf\u7684 idf \u516c\u5f0f\u76f8\u6bd4\uff0c\u4e3b\u8981\u505a\u4e86\u4e24\u4e2a\u6539\u52a8\uff1a \u52a0\u5165\u4e86\u5e73\u6ed1\u56e0\u5b50\uff1a\u5728\u4f20\u7edf\u7684 idf \u516c\u5f0f\u4e2d\uff0c\u5f53\u67d0\u4e2a\u67e5\u8be2\u9879\u5728\u6587\u6863\u96c6\u5408\u4e2d\u672a\u51fa\u73b0\u65f6\uff0c\u5176 idf \u503c\u4f1a\u53d8\u6210\u8d1f\u65e0\u7a77\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff0c BM25 \u4e2d\u7684 idf \u516c\u5f0f\u52a0\u5165\u4e86\u5e73\u6ed1\u56e0\u5b50 0.5\u3002 \u51cf\u5c11 idf \u7684\u5f71\u54cd\uff1a\u5728\u4f20\u7edf\u7684 idf \u516c\u5f0f\u4e2d\uff0c\u5f53\u67d0\u4e2a\u67e5\u8be2\u9879\u5728\u5f88\u5c11\u7684\u6587\u6863\u4e2d\u51fa\u73b0\u65f6\uff0c\u5176 idf \u503c\u4f1a\u5f88\u5927\uff0c\u5bf9\u7ed3\u679c\u4ea7\u751f\u8fc7\u5927\u7684\u5f71\u54cd\u3002 BM25 \u4e2d\u7684 idf \u516c\u5f0f\u901a\u8fc7\u51cf\u5c11 idf \u7684\u5f71\u54cd\uff0c\u4f7f\u5f97\u67e5\u8be2\u9879\u5728\u51fa\u73b0\u6587\u6863\u6570\u8f83\u5c11\u65f6\uff0c\u4e0d\u4f1a\u5bf9\u7ed3\u679c\u4ea7\u751f\u8fc7\u5927\u7684\u5f71\u54cd\u3002\u4f46\u662f\u5f53\u6587\u6863\u51fa\u73b0\u7684\u6570\u91cf\u8d85\u8fc7\u4e00\u534a\u65f6\uff0c\u8ba1\u7b97\u51fa\u7684idf\u503c\u4e3a\u8d1f\u6570\uff0cLucene\u4e2d\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u66f4\u6539\u4e86idf\u516c\u5f0f\u4e3a \\(\\log1+\\frac{N-df+0.5}{df+0.5}\\) \uff0c\u4ece\u800c\u9632\u6b62\u4e86\u8d1f\u6570\u7684\u4ea7\u751f\u3002 BM25 \u4e2d\u7684k\u662f\u5982\u4f55\u5f71\u54cd\u8ba1\u7b97\u51fa\u7684\u7ed3\u679c \\(k\\) \u7684\u503c\u63a7\u5236\u4e86\u8bcd\u9891\u5bf9\u5f97\u5206\u7684\u5f71\u54cd\u7a0b\u5ea6\uff0c\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u4e2a\u8bcd\u9891\u7684\u5f52\u4e00\u5316\u56e0\u5b50\u3002 \u5f53 \\(k\\) \u7684\u503c\u8f83\u5c0f\u65f6\uff0c\u8bcd\u9891\u7684\u5f71\u54cd\u5c31\u76f8\u5bf9\u8f83\u5c0f\uff0c\u5f97\u5206\u7684\u53d8\u5316\u8303\u56f4\u4e5f\u76f8\u5bf9\u8f83\u5c0f\uff1b\u5f53 \\(k\\) \u7684\u503c\u8f83\u5927\u65f6\uff0c\u8bcd\u9891\u7684\u5f71\u54cd\u5c31\u76f8\u5bf9\u8f83\u5927\uff0c\u5f97\u5206\u7684\u53d8\u5316\u8303\u56f4\u4e5f\u76f8\u5bf9\u8f83\u5927\u3002\u5f53 \\(k\\) \u7684\u503c\u7b49\u4e8e \\(0\\) \u65f6\uff0c\u76f8\u5f53\u4e8e\u5c06\u6587\u6863\u4e2d\u6240\u6709\u8bcd\u9879\u7684\u8bcd\u9891\u90fd\u89c6\u4e3a \\(1\\) \uff0c\u6b64\u65f6\u5f97\u5206\u53ea\u4e0e\u6587\u6863\u4e0e\u67e5\u8be2\u8bed\u53e5\u7684\u5339\u914d\u7a0b\u5ea6\u6709\u5173\u3002\u540c\u65f6\uff0c\u56e0\u4e3a\u6709 \\(k\\) \u7684\u5b58\u5728\uff0c\u5373\u4f7f\u8bcd\u9891\u7279\u522b\u5927\uff0c\u4e5f\u4e0d\u4f1a\u5bf9\u6700\u7ec8\u8ba1\u7b97\u7684\u7ed3\u679c\u6709\u5927\u7684\u5f71\u54cd\u3002\u5373\u5f53\u8bcd\u9891\u8fbe\u5230\u4e00\u5b9a\u7a0b\u5ea6\uff0c\u8ba1\u7b97\u51fa\u7684BM25\u7684\u503c\u5e76\u4e0d\u4f1a\u7ebf\u6027\u63d0\u5347\u3002 BM25 \u4e2d\u7684b\u662f\u5982\u4f55\u5f71\u54cd\u8ba1\u7b97\u51fa\u7684\u7ed3\u679c \u5728 BM25 \u4e2d\uff0c\u53c2\u6570 \\(b\\) \u7528\u6765\u5e73\u8861\u6587\u6863\u957f\u5ea6\u5bf9\u5f97\u5206\u7684\u5f71\u54cd\u3002\u5b83\u63a7\u5236\u4e86\u6587\u6863\u957f\u5ea6\u5bf9\u5f97\u5206\u7684\u5f71\u54cd\u7a0b\u5ea6\uff0c\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u4e2a\u6587\u6863\u957f\u5ea6\u7684\u5f52\u4e00\u5316\u56e0\u5b50\u3002 \\(b\\) \u7684\u53d6\u503c\u4f1a\u5f71\u54cd\u6587\u6863\u4e2d\u7684\u8bcd\u9879\u6743\u91cd \\(w_i\\) \u7684\u5927\u5c0f\uff0c\u8fd9\u91cc\u7684 \\(w_i\\) \u662f\u6307\u5305\u542b\u8bcd\u9879 \\(i\\) \u7684\u6587\u6863\u7684 \\(i\\) \u7684\u6743\u91cd\u3002\u5f53 \\(b\\) \u8d8a\u5927\u65f6\uff0c\u8868\u793a\u6587\u6863\u957f\u5ea6\u5bf9\u8bcd\u9879\u6743\u91cd\u7684\u5f71\u54cd\u8d8a\u5927\uff0c\u8fd9\u610f\u5473\u7740\u6587\u6863\u4e2d\u7684\u8bcd\u9879\u6743\u91cd \\(w_i\\) \u4f1a\u76f8\u5e94\u5730\u8d8b\u4e8e\u7f29\u5c0f\uff1b\u53cd\u4e4b\uff0c\u5f53 \\(b\\) \u8d8a\u5c0f\u65f6\uff0c\u8868\u793a\u6587\u6863\u957f\u5ea6\u5bf9\u8bcd\u9879\u6743\u91cd\u7684\u5f71\u54cd\u8d8a\u5c0f\uff0c\u8fd9\u610f\u5473\u7740\u6587\u6863\u4e2d\u7684\u8bcd\u9879\u6743\u91cd \\(w_i\\) \u4f1a\u76f8\u5e94\u5730\u8d8b\u4e8e\u6269\u5927\u3002 BM25 \u4e2d\u7684\u6587\u6863\u957f\u5ea6\u5982\u4f55\u5f71\u54cd\u8ba1\u7b97\u51fa\u7684\u7ed3\u679c \u4e00\u7bc7\u6587\u6863\u5982\u679c\u6240\u542b\u7684\u5355\u8bcd\u8d8a\u5c11\uff0c\u90a3\u4e48 \\( \\(\\frac{|d|}{\\text{avgdl}}\\) \\) \u8d8a\u5c0f\uff0c\u4ece\u800c\u5bfc\u81f4\u6700\u7ec8\u7684 BM25 \u8d8a\u5927\uff0c\u56e0\u6b64\u6587\u6863\u5b57\u6570\u8d8a\u5c11\uff0c\u76f8\u5173\u6027\u8d8a\u9ad8. - idf \u4e3a\u4ec0\u4e48\u8981\u7528\u5bf9\u6570\u8ba1\u7b97? \u5728\u8ba1\u7b97\u6587\u6863\u4e2d\u6bcf\u4e2a\u8bcd\u9879\u7684\u9006\u6587\u6863\u9891\u7387\u65f6\uff0c\u4f7f\u7528\u5bf9\u6570\u51fd\u6570\u7684\u76ee\u7684\u662f\u5c06idf\u503c\u7684\u8303\u56f4\u538b\u7f29\u5230\u4e00\u4e2a\u8f83\u5c0f\u7684\u533a\u95f4\u5185\u3002\u7531\u4e8e\u6587\u6863\u7684\u5927\u5c0f\u901a\u5e38\u4f1a\u5f88\u5927\uff0c\u56e0\u6b64\u4e00\u4e2a\u8bcd\u9879\u53ef\u80fd\u4f1a\u51fa\u73b0\u51e0\u5343\u751a\u81f3\u51e0\u5341\u4e07\u6b21\uff0c\u8fd9\u6837\u8ba1\u7b97\u5f97\u5230\u7684idf\u503c\u5c31\u4f1a\u975e\u5e38\u5927\u3002\u4f7f\u7528\u5bf9\u6570\u51fd\u6570\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u5927\u6570\u503c\u538b\u7f29\u5230\u4e00\u4e2a\u8f83\u5c0f\u7684\u533a\u95f4\u5185\uff0c\u4fbf\u4e8e\u8ba1\u7b97\u548c\u5904\u7406\u3002 \u6b64\u5916\uff0c\u5bf9\u6570\u51fd\u6570\u8fd8\u80fd\u591f\u4f7f\u5f97\u4f4e\u9891\u8bcd\u9879\u7684idf\u503c\u66f4\u52a0\u7a81\u51fa\u3002\u5982\u679c\u4e0d\u4f7f\u7528\u5bf9\u6570\u51fd\u6570\uff0c\u90a3\u4e48\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e9b\u4f4e\u9891\u8bcd\u9879\u7684idf\u503c\u53ef\u80fd\u4f1a\u975e\u5e38\u5c0f\uff0c\u751a\u81f3\u53ef\u80fd\u4f1a\u88ab\u5ffd\u7565\u3002\u800c\u4f7f\u7528\u5bf9\u6570\u51fd\u6570\u540e\uff0c\u8fd9\u4e9b\u4f4e\u9891\u8bcd\u9879\u7684idf\u503c\u5c31\u4f1a\u88ab\u653e\u5927\uff0c\u4f7f\u5f97\u5b83\u4eec\u5728\u68c0\u7d22\u65f6\u80fd\u591f\u66f4\u597d\u5730\u533a\u5206\u6587\u6863\u7684\u76f8\u5173\u6027\u3002","title":"BM25\u7684\u516c\u5f0f\u8fdb\u4e00\u6b65\u89e3\u8bfb"},{"location":"ir/doc-relv/#bm25f","text":"BM25F \u662f BM25 \u7b97\u6cd5\u7684\u4e00\u79cd\u53d8\u4f53\uff0c\u5b83\u5728 BM25 \u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e86\u5bf9\u591a\u5b57\u6bb5\u7684\u652f\u6301\u3002\u5728 BM25F \u4e2d\uff0c\u6bcf\u4e2a\u6587\u6863\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u5b57\u6bb5\uff08\u4f8b\u5982\u6807\u9898\u3001\u6b63\u6587\u3001\u6807\u7b7e\u7b49\uff09\uff0c\u6bcf\u4e2a\u5b57\u6bb5\u90fd\u6709\u4e00\u4e2a\u6743\u91cd\u3002 BM25F \u901a\u8fc7\u5c06\u6bcf\u4e2a\u5b57\u6bb5\u7684\u5f97\u5206\u76f8\u52a0\u6765\u8ba1\u7b97\u6587\u6863\u7684\u76f8\u5173\u6027\u5f97\u5206\u3002 BM25F \u7684\u516c\u5f0f\u5982\u4e0b\uff1a \\(score(D,Q) = \\sum_{i=1}^{n}weight(q_i)\\cdot IDF(q_i)\\cdot \\frac{f(q_i,D)\\cdot (k_i + 1)}{f(q_i,D) + k_i\\cdot (1 - b_i + b_i \\cdot \\frac{|D|}{avgdl_i})}\\) \u5176\u4e2d\uff0c \\(D\\) \u8868\u793a\u6587\u6863\uff0c \\(Q\\) \u8868\u793a\u67e5\u8be2\uff0c \\(n\\) \u8868\u793a\u67e5\u8be2\u4e2d\u7684\u8bcd\u9879\u6570\uff0c \\(q_i\\) \u8868\u793a\u67e5\u8be2\u4e2d\u7684\u7b2c \\(i\\) \u4e2a\u8bcd\u9879\uff0c \\(weight(q_i)\\) \u8868\u793a\u7b2c \\(i\\) \u4e2a\u8bcd\u9879\u7684\u6743\u91cd\uff0c \\(IDF(q_i)\\) \u8868\u793a\u7b2c \\(i\\) \u4e2a\u8bcd\u9879\u7684\u9006\u6587\u6863\u9891\u7387\uff0c \\(f(q_i,D)\\) \u8868\u793a\u6587\u6863 \\(D\\) \u4e2d\u7b2c \\(i\\) \u4e2a\u8bcd\u9879\u7684\u51fa\u73b0\u9891\u7387\uff0c \\(k_i\\) \u548c \\(b_i\\) \u5206\u522b\u8868\u793a\u7b2c \\(i\\) \u4e2a\u8bcd\u9879\u7684\u53c2\u6570 \\(k\\) \u548c \\(b\\) \uff0c \\(|D|\\) \u8868\u793a\u6587\u6863 \\(D\\) \u7684\u957f\u5ea6\uff0c \\(avgdl_i\\) \u8868\u793a\u5305\u542b\u7b2c \\(i\\) \u4e2a\u5b57\u6bb5\u7684\u6240\u6709\u6587\u6863\u7684\u5e73\u5747\u957f\u5ea6\u3002 \u5728 BM25F \u4e2d\uff0c\u6bcf\u4e2a\u8bcd\u9879\u7684\u6743\u91cd\u7531\u5176\u6240\u5728\u7684\u5b57\u6bb5\u7684\u6743\u91cd\u548c\u5168\u5c40\u6743\u91cd\u4e24\u90e8\u5206\u7ec4\u6210\u3002\u5168\u5c40\u6743\u91cd\u8868\u793a\u8be5\u8bcd\u9879\u5728\u6574\u4e2a\u6587\u96c6\u4e2d\u7684\u91cd\u8981\u6027\uff0c\u5b57\u6bb5\u6743\u91cd\u5219\u8868\u793a\u8be5\u8bcd\u9879\u5728\u5f53\u524d\u5b57\u6bb5\u4e2d\u7684\u91cd\u8981\u6027\u3002\u8bcd\u9879\u7684\u6743\u91cd\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u516c\u5f0f\u8ba1\u7b97\uff1a \\(weight(q_i) = weight_{field}(q_i)\\cdot weight_{global}(q_i)\\) \u5176\u4e2d\uff0c \\(weight_{field}(q_i)\\) \u8868\u793a\u7b2c \\(i\\) \u4e2a\u8bcd\u9879\u5728\u5f53\u524d\u5b57\u6bb5\u4e2d\u7684\u6743\u91cd\uff0c \\(weight_{global}(q_i)\\) \u8868\u793a\u7b2c \\(i\\) \u4e2a\u8bcd\u9879\u5728\u5168\u5c40\u6587\u6863\u96c6\u4e2d\u7684\u6743\u91cd\u3002 BM25F \u7684\u4f18\u70b9\u662f\u80fd\u591f\u6709\u6548\u5730\u5904\u7406\u591a\u5b57\u6bb5\u67e5\u8be2\uff0c\u53ef\u4ee5\u66f4\u597d\u5730\u5339\u914d\u67e5\u8be2\u548c\u6587\u6863\u4e2d\u4e0d\u540c\u5b57\u6bb5\u7684\u76f8\u5173\u6027\u3002\u5b83\u53ef\u4ee5\u901a\u8fc7\u8c03\u6574\u5b57\u6bb5\u7684\u6743\u91cd\u6765\u5bf9\u4e0d\u540c\u5b57\u6bb5\u7684\u91cd\u8981\u6027\u8fdb\u884c\u8c03\u6574\uff0c\u4ece\u800c\u63d0\u9ad8\u641c\u7d22\u7ed3\u679c\u7684\u51c6\u786e\u6027\u3002","title":"BM25F"},{"location":"ir/doc-relv/#_2","text":"tf-idf \u8bcd\u9891\u8d8a\u9ad8\uff0c\u8bcd\u9891\u5728\u6574\u4e2a\u6587\u6863\u96c6\u4e2d\u8d8a\u7a00\u5c11\uff0c\u503c\u8d8a\u9ad8 BM25 \u8bcd\u9891\u5728\u6574\u4e2a\u6587\u6863\u96c6\u4e2d\u8d8a\u7a00\u5c11\uff0c\u8bcd\u9891\u8d8a\u9ad8\uff0c \u6587\u6863\u7684\u5355\u8bcd\u6570\u8d8a\u5c11 \uff0c\u503c\u8d8a\u9ad8 BM25F \u8bcd\u9891\u5728\u6574\u4e2a\u6587\u6863\u96c6\u4e2d\u8d8a\u7a00\u5c11\uff0c\u8bcd\u9891\u8d8a\u9ad8\uff0c \u6587\u6863\u7684\u5355\u8bcd\u6570\u8d8a\u5c11\uff0c \u6743\u91cd\u8d8a\u9ad8 \uff0c\u503c\u8d8a\u9ad8","title":"\u603b\u7ed3"},{"location":"paper/mapreduce/","text":"MapReduce \u662f\u8c37\u6b4c\u57282004\u5e74\u53d1\u8868\u7684\u8bba\u6587,\u6839\u636e\u5b83\u5728\u8bba\u6587\u4e2d\u7684\u63cf\u8ff0 MapReduce is a programming model and an associated implementation for processing and generating large data sets. Users specify a map function that processes a key/value pair to generate a set of intermediate key/value pairs, and a reduce function that merges all intermediate values associated with the same intermediate key. Many real world tasks are expressible in this model, as shown in the paper. MapReduce\u672c\u8d28\u4e0a\u662f\u4e3a\u4e86\u5904\u7406\u5927\u6570\u636e\u800c\u8bde\u751f\u7684\u6846\u67b6\uff0c\u5b83\u542b\u6709\u4e24\u4e2a\u539f\u8bed\uff0c\u5206\u522b\u662fMap\u548cReduce(\u4ece\u51fd\u6570\u5f0f\u7f16\u7a0b\u4e2d\u501f\u9274\u8fc7\u6765\u7684\u6982\u5ff5)\uff0c\u800c\u8fd9\u4e24\u4e2a\u539f\u8bed\u56e0\u4e3a\u62bd\u8c61\u7a0b\u5ea6\u9ad8\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f8\u4e92\u7ec4\u5408\u5b8c\u6210\u5927\u90e8\u5206\u7684\u5927\u6570\u636e\u5904\u7406\u4efb\u52a1 Map: \u5c06\u4e00\u7ec4\u6570\u636e\u8f6c\u5316\u4e3a\u53e6\u4e00\u7ec4\u6570\u636e,\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u4efb\u52a1\u770b\u4f5c\u8f93\u5165\u4e3a\u4e00\u4e2a\u5355\u4e00\u5143\u7d20\uff0c\u8f93\u51fa\u4e3a\u4e00\u4e2atuple\u7684\u5efa\u503c\u5bf9 // ele\u662f\u4f60\u9700\u8981\u5904\u7406\u7684\u539f\u59cb\u6570\u636e // \u8f93\u51fa\u4e3a\u4f60\u6839\u636e\u539f\u59cb\u6570\u636e\u751f\u6210\u7684\u952e\u503c\u5bf9 func map ( String ele ) { return ( generateKey ( ele ), generateValue ( ele )) } Reduce: \u5c06\u591a\u4e2aMap\u4efb\u52a1\u7684\u7ed3\u679c\u6309Key\u805a\u5408\u540e\u4f5c\u4e3a\u8f93\u5165, \u5bf9\u8be5\u8f93\u5165\u8fdb\u884c\u8ba1\u7b97\u540e\u8f93\u51fa\u6700\u7ec8\u7ed3\u679c // \u8f93\u5165\u4e2d\u7684Key\u4e3a\u591a\u4e2aMap\u4efb\u52a1\u4e2d\u4ea7\u751f\u7684\u4e00\u4e2aKey // values\u4e3amap\u4efb\u52a1\u4ea7\u751f\u7684\u6240\u6709(k,v)\u4e2d\u5c5e\u4e8e\u8fd9\u4e2akey\u7684value\u96c6\u5408 // \u5373 values = values + (value_1 | if (key_1, value_1) key_1 = key) func reduce ( Key key , List < Value > values ) { result := process ( values ) return ( key , values ) } MapReduce\u89e3\u51b3\u4e86\u4ec0\u4e48\u95ee\u9898 \u901a\u8fc7\u5206\u5e03\u5f0f\u7684\u65b9\u6cd5\u89e3\u51b3\u5927\u6570\u636e\u5904\u7406\u7684\u95ee\u9898 Fault Tolerance (\u53ef\u4ee5\u90e8\u7f72\u5728\u5546\u7528\u670d\u52a1\u5668\u4e0a\uff0c\u5bb9\u5fcd\u4e00\u5b9a\u7684\u673a\u5668\u635f\u574f) \u7a0b\u5e8f\u5458\u53ea\u9700\u4e13\u6ce8\u4e8e\u7f16\u5199\u6570\u636e\u7684\u5904\u7406\u7a0b\u5e8f(\u5373map\u548creduce\u8fd9\u4e24\u4e2a\u51fd\u6570),\u65e0\u9700\u5173\u6ce8\u5206\u5e03\u5f0f\u7684\u95ee\u9898,\u4fbf\u53ef\u4ee5\u8ba9\u5176\u8fdb\u884c\u5206\u5e03\u5f0f\u8ba1\u7b97 MapReduce\u7684\u5b9e\u73b0 Many different implementations of the MapReduce interface are possible. The right choice depends on the environment. For example, one implementation may be suitable for a small shared-memory machine, another for a large NUMA multi-processor, and yet another for an even larger collection of networked machines \u6839\u636e\u8bba\u6587\u4e2d\u7684\u63cf\u8ff0,MapReduce\u53ea\u662f\u4e00\u4e2a\u8ba1\u7b97\u6a21\u578b\uff0c\u4f60\u53ef\u4ee5\u6309\u7167\u4f60\u81ea\u5df1\u7684\u9700\u8981\uff0c\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u6700\u9002\u5408\u4f60\u9700\u6c42\u7684\u67b6\u6784.\u5728\u8fd9\u91cc\u6211\u4eec\u4ecb\u7ecd\u8c37\u6b4c\u6240\u4f7f\u7528\u7684\u67b6\u6784. \u89d2\u8272\u63cf\u8ff0 \u4ece\u56fe\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u5728\u6574\u4e2aMapReduce\u4e2d\u6709\u4e09\u79cd\u4e0d\u540c\u7684\u89d2\u8272 InputFile: \u5f85\u5904\u7406\u7684\u8f93\u5165\u6587\u4ef6 Master: \u8c03\u5ea6\u6574\u4e2a\u4efb\u52a1\u7684\u6267\u884c\uff0c\u5e76\u4e14\u68c0\u6d4bWorker\u662f\u5426\u5b58\u6d3b Worker: \u542c\u4eceMaster\u8c03\u5ea6,\u5e76\u6267\u884c\u7528\u6237\u6307\u5b9a\u7684Map\u6216\u8005Reduce\u4efb\u52a1 \u6211\u4eec\u5148\u8be6\u7ec6\u4ecb\u7ecd\u8fd9\u4e09\u79cd\u4e0d\u540c\u7684\u89d2\u8272\uff0c\u7136\u540e\u63cf\u8ff0MapReduce\u7684\u603b\u4f53\u6d41\u7a0b InputFile \u56e0\u4e3aMapReduce\u7684\u5e94\u7528\u573a\u666f\u662f\u5927\u6570\u636e\u5904\u7406\uff0c\u6240\u4ee5\u8f93\u5165\u7684\u6587\u4ef6\u8f83\u5927\uff0c\u5f80\u5f80\u662f\u65e0\u6cd5\u5b8c\u5168\u653e\u5728\u5185\u5b58\u4e4b\u4e2d\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5c06\u8f93\u5165\u7684\u6587\u4ef6\u5206\u5272\u4e3a \u5927\u5c0f\u76f8\u7b49\u7684\u6587\u4ef6\u5757(split1, split2, split3....),\u5728\u8c37\u6b4c\u7684\u5b9e\u73b0\u4e2d,\u6587\u4ef6\u5206\u5272\u540e\uff0c\u6bcf\u4efd\u5927\u5c0f\u4e3a16-64MB Master Master\u662f\u4e00\u4e2a\u8f83\u4e3a\u7279\u6b8a\u7684\u89d2\u8272\uff0c\u5168\u5c40\u4ec5\u6709\u4e00\u4e2aMaster,\u5b83\u6709\u4ee5\u4e0b\u7684\u51e0\u4e2a\u804c\u8d23 \u76d1\u542cWorker\u72b6\u6001,\u5f53Worker\u5904\u4e8eIdle\u72b6\u6001\u65f6\uff0c\u7ed9\u4ed6\u5206\u914d\u4efb\u52a1(map/reduce) \u901a\u8fc7\u5fc3\u8df3\u63a2\u6d3bWorker,\u5f53Worker\u5b95\u673a\u65f6,\u6267\u884c\u5bb9\u707e\u64cd\u4f5c\uff0c\u5373\u91cd\u65b0\u6267\u884c. \u63d0\u4f9b\u7ed9Worker\u9700\u8981\u7684\u4fe1\u606f,\u4ee5\u4f7f\u5176\u6b63\u5e38\u8fd0\u884c. Worker Worker\u662f\u5b9e\u9645\u6267\u884c\u7528\u6237\u7f16\u5199\u7a0b\u5e8f\u7684\u89d2\u8272\uff0c\u5b83\u542c\u4eceMaster\u7684\u8c03\u5ea6\uff08\u6267\u884cmap\u6216\u8005reduce\uff09,\u5e76\u4e14\u4eceMaster\u90a3\u91cc\u83b7\u5f97\u6267\u884c\u7a0b\u5e8f\u6240\u9700\u8981\u7684\u4e00\u5207\u4fe1\u606f \u5e76\u5c06\u6267\u884c\u7ed3\u679c\u53cd\u9988\u7ed9Master. \u603b\u4f53\u6d41\u7a0b \u7528\u6237\u63d0\u4ea4\u9700\u8981\u8ba1\u7b97\u7684\u4efb\u52a1,\u548c\u8f93\u5165\u6587\u4ef6 Master\u63a5\u6536\u5230\u4efb\u52a1\u540e\uff0c\u4efb\u52a1\u4f1a\u88ab\u5206\u89e3\u4e3aM\u4e2aMap\u4efb\u52a1\uff0cR\u4e2aReduce\u4efb\u52a1. Master\u4e0d\u65ad\u9009\u62e9\u5904\u4e8eIdle\u72b6\u6001\u7684\u673a\u5668\uff0c\u5e76\u8ba9\u4ed6\u4eec\u6267\u884cMap\u4efb\u52a1\uff0c\u76f4\u81f3Map\u4efb\u52a1\u88ab\u5168\u90e8\u6267\u884c\u5b8c\u6210. \u88ab\u8c03\u5ea6\u6267\u884cMap\u4efb\u52a1\u7684Worker\u4f1a\u8bfb\u53d6\u5bf9\u5e94\u7684\u6587\u4ef6\u5206\u7247\uff0c\u5e76\u5bf9\u8be5\u6587\u4ef6\u8fdb\u884c\u89e3\u6790\u540e\u4f5c\u4e3a\u7528\u6237Map\u7a0b\u5e8f\u7684\u8f93\u5165\uff0c\u7136\u540e\u5c06Map\u8f93\u51fa\u7684\u952e\u503c\u5bf9\u7f13\u5b58\u5728\u5185\u5b58\u4e4b\u4e2d,\u6700\u7ec8\u5199\u5728\u672c\u5730\u78c1\u76d8\u4e0a. \u5199\u5728\u78c1\u76d8\u4e0a\u7684\u952e\u503c\u5bf9\u6587\u4ef6\uff0c\u4f1a\u6839\u636eKey\u5212\u5206\u4e3aR\u4e2a\u6587\u4ef6. ie.(K % R) \u5f53Map\u6267\u884c\u5b8c\u6210\u540e\u4f1a\u5411Master\u6c47\u62a5\u6267\u884c\u5b8c\u6210\uff0c\u5e76\u4e14\u5c06\u6240\u6709\u952e\u503c\u5bf9\u6587\u4ef6\u7684\u4f4d\u7f6e\u544a\u77e5Master \u5f53\u6240\u6709Map\u4efb\u52a1\u5b8c\u6210\u540e\uff0cMaster\u4f1a\u9009\u62e9\u72b6\u6001\u5904\u4e8eIdle\u7684Worker,\u8ba9\u5176\u6267\u884cReduce\u4efb\u52a1\uff0c\u540c\u65f6\u4f1a\u544a\u77e5\u4ed6\u6240\u9700\u8981\u5904\u7406\u7684\u952e\u503c\u5bf9\u6587\u4ef6\u4f4d\u7f6e \u5f53Worker\u88ab\u8c03\u5ea6\u6267\u884cReduce\u4efb\u52a1\u65f6, \u4ed6\u9996\u5148\u4f1a\u53d1\u8d77\u4e00\u4e2arpc\u6765\u8bfb\u53d6\u952e\u503c\u5bf9\u6587\u4ef6,\u5f53\u4ed6\u5c06\u6240\u6709\u6587\u4ef6\u8bfb\u53d6\u5b8c\u6bd5\u540e,\u4ed6\u5bf9\u952e\u503c\u5bf9\u8fdb\u884c\u6392\u5e8f,\u8fd9\u6837\u5b50\u76f8\u540c\u952e\u7684\u952e\u503c\u5bf9\u5c31\u4f1a\u805a\u96c6\u5728\u4e00\u8d77 \u5982\u679c\u952e\u503c\u5bf9\u6587\u4ef6\u8fc7\u5927\uff0c\u65e0\u6cd5\u5168\u90e8\u4fdd\u5b58\u5728\u5185\u5b58\u4e4b\u4e2d\uff0c\u90a3\u4e48\u9700\u8981\u8fdb\u884c\u5916\u6392\u5e8f.Worker\u6700\u540e\u5c06\u5177\u6709\u76f8\u540c\u952e\u7684\u503c\u805a\u5408\u5728\u4e00\u8d77\u5f62\u6210(Key, list Value)\u4f20\u7ed9Reduce\u51fd\u6570\u8fdb\u884c\u8ba1\u7b97,\u5e76\u5c06\u7ed3\u679c \u5199\u5728\u6587\u4ef6\u4e2d \u5f53\u6240\u6709\u7684Reduce\u6267\u884c\u5b8c\u6210\u540e,MapReduce\u4e5f\u5c31\u6267\u884c\u7ed3\u675f\u4e86. MapReduce\u5982\u4f55\u89e3\u51b3\u4e86\u90a3\u4e9b\u95ee\u9898 \u901a\u8fc7\u5206\u5e03\u5f0f\u7684\u65b9\u6cd5\u89e3\u51b3\u5927\u6570\u636e\u5904\u7406\u7684\u95ee\u9898 \u901a\u8fc7\u4e00\u53f0Master\u6765\u8c03\u5ea6\u591a\u53f0Worker\u53ef\u4ee5\u5b9e\u73b0\u5206\u5e03\u5f0f\u8ba1\u7b97\uff0c\u540c\u65f6\u6211\u4eec\u53ef\u4ee5\u6ce8\u610f\u5230Master\u4e2d\u9700\u8981\u8bb0\u5f55\u7684Worker\u4fe1\u606f\u6240\u9700\u8981\u7684\u5b58\u50a8\u7a7a\u95f4\u8f83\u5c0f \u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u4e0a\u5343\u7684Worker\u6765\u540c\u65f6\u8ba1\u7b97,\u800c\u4e0d\u4f1a\u7ed9Master\u5e26\u6765\u592a\u5927\u7684\u8d1f\u62c5. Fault Tolerance Master Fail Master\u4f1a\u5468\u671f\u5199\u5185\u90e8\u6570\u636e\u7684checkpoint,\u5982\u679cMaster\u5b95\u673a\uff0c\u4e00\u4e2a\u65b0\u7684\u5907\u4efd\u673a\u5668\u53ef\u4ee5\u901a\u8fc7\u8bfb\u53d6checkpoint\u6765\u6062\u590d\u72b6\u6001. \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u6839\u636e\u4ee5\u4e0a\u7684\u8bbe\u8ba1,Master\u5b95\u673a\u540e\u5c31\u7b97\u4e22\u5931\u4e86\u4e00\u4e9b\u4efb\u52a1\u7684\u8fdb\u5ea6\uff0c\u4f8b\u5982,\u4e0d\u77e5\u9053map_3\u4efb\u52a1\u5df2\u7ecf\u6267\u884c\u5b8c\u6210,\u4f46\u662f\u901a\u8fc7 \u91cd\u65b0\u6267\u884c\uff0c\u5bf9\u4e8e\u6700\u540e\u7ed3\u679c\u7684\u6b63\u786e\u6027\u5e76\u6ca1\u6709\u5f71\u54cd. Worker Fail \u5982\u679cWorker\u5b95\u673a\uff0c\u90a3\u4e48\u8be5Worker\u5b8c\u6210\u7684\u6240\u6709Map\u4efb\u52a1\u5168\u90e8\u8bbe\u7f6e\u4e3a\u53d6\u6d88\uff0c\u5e76\u4e14\u9700\u8981\u5168\u90e8\u91cd\u65b0\u6267\u884c,\u8fd8\u6ca1\u6709\u6267\u884c\u5b8c\u7684Map\u548cReduce\u4efb\u52a1\u4e5f\u5168\u90e8\u53d6\u6d88,\u5e76\u9700\u8981\u5168\u90e8\u6267\u884c. \u4e4b\u6240\u4ee5\u5b8c\u6210\u7684\u6240\u6709Map\u4efb\u52a1\u9700\u8981\u5168\u90e8\u91cd\u65b0\u6267\u884c,\u662f\u56e0\u4e3aMap\u4efb\u52a1\u7684\u7ed3\u679c\u5199\u5728\u672c\u5730\u78c1\u76d8\u4e0a\uff0c\u5f53\u673a\u5668\u5b95\u673a\u65f6\uff0c\u8fd9\u4e9b\u7ed3\u679c\u5c31\u5168\u90e8\u4e0d\u53ef\u83b7\u53d6\u4e86\uff0c\u56e0\u6b64\u9700\u8981\u5168\u90e8\u91cd\u65b0\u6267\u884c. \u800c\u6267\u884c\u5b8c\u6210\u7684Reduce\u4efb\u52a1\u4e0d\u9700\u8981\u91cd\u65b0\u6267\u884c\uff0c\u662f\u56e0\u4e3aReduce\u4efb\u52a1\u7684\u7ed3\u679c\u5199\u5728\u4e86\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf\u4e0a.\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u53ea\u9700\u8981\u901a\u8fc7\u7b80\u5355\u7684\u91cd\u65b0\u6267\u884c\uff0c\u4fbf\u53ef\u4ee5\u4fdd\u8bc1\u5373\u4f7f\u673a\u5668\u5b95\u673a \u4ecd\u7136\u53ef\u4ee5\u5b8c\u6210\u5206\u5e03\u5f0f\u8ba1\u7b97. \u7a0b\u5e8f\u5458\u53ea\u9700\u4e13\u6ce8\u4e8e\u7f16\u5199\u6570\u636e\u7684\u5904\u7406\u7a0b\u5e8f(\u5373map\u548creduce\u8fd9\u4e24\u4e2a\u51fd\u6570),\u65e0\u9700\u5173\u6ce8\u5206\u5e03\u5f0f\u7684\u95ee\u9898,\u4fbf\u53ef\u4ee5\u8ba9\u5176\u8fdb\u884c\u5206\u5e03\u5f0f\u8ba1\u7b97 \u6839\u636eMapReduce\u7684\u8bbe\u8ba1\uff0c\u7a0b\u5e8f\u5458\u552f\u4e00\u9700\u8981\u505a\u7684\u5c31\u662fmap\u548creduce\u8fd9\u4e24\u4e2a\u51fd\u6570\uff0c\u5176\u4ed6\u7684\u5206\u5e03\u5f0f\u8c03\u5ea6\uff0c\u5bb9\u707e\u7b49\u7b56\u7565\u5747\u5728MapReduce\u5185\u90e8\u5b8c\u6210. MapReduce\u7684\u4f18\u5316 \u4efb\u52a1\u7684\u7c92\u5ea6 :MapReduce\u4e00\u822c\u4f1a\u5212\u5206\u4e3aM\u4e2aMap\u4efb\u52a1\u548cR\u4e2aReduce\u4efb\u52a1,M\u548cR\u7684\u9009\u62e9\u4e00\u822c\u4f1a\u8fdc\u5927\u4e8e\u673a\u5668\u6570\u91cf\uff0c\u8fd9\u6837\u6709\u5229\u4e8e\u8d1f\u8f7d\u5747\u8861\uff0c\u540c\u65f6\u5982\u679c\u673a\u5668\u5b95\u673a\u7684\u8bdd\uff0c\u4e5f\u53ef\u4ee5\u5feb\u901f\u6062\u590d.\u8bba\u6587\u4e2d\u7ed9\u7684\u4f8b\u5b50\u662f \u5f53\u67092000\u53f0\u673a\u5668\u65f6\uff0cM=200,000 R=5000 Backup\u673a\u5236 : \u5b9e\u9645\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u4f1a\u9047\u5230\u957f\u5c3e\u6548\u5e94,\u5373\u6709\u67d0\u51e0\u53f0\u673a\u5668\u6267\u884c\u7684\u4efb\u52a1\u7279\u522b\u6162\uff0c\u4ece\u800c\u62d6\u7d2f\u4e86\u6574\u4f53\u4efb\u52a1\u7684\u8fdb\u5ea6.MapReduce\u901a\u8fc7Backup\u673a\u5236\u6765\u89e3\u51b3.\u5373\u540c\u65f6\u7ed9\u591a\u4e2a\u673a\u5668\u53d1\u51fa\u540c\u6837\u7684\u4efb\u52a1 \u4efb\u610f\u4e00\u53f0\u673a\u5668\u8fd4\u56de\u7ed3\u679c\u5373\u89c6\u4e3a\u4efb\u52a1\u7ed3\u675f. Combiner\u51fd\u6570 : combiner\u51fd\u6570\u662f\u5728Map\u6267\u884c\u540e\u518d\u6267\u884c\u7684\u51fd\u6570\u3002\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff0cword count\u4e2d\uff0c\u56e0\u4e3amap\u51fd\u6570\u4f1a\u4ea7\u751f\u5927\u91cf\u7684(the,1),\u8fd9\u4e9b\u6570\u636e\u90fd\u4f1a\u901a\u8fc7\u7f51\u7edc\u53d1\u9001\u7ed9Reduce \u8fd9\u52a0\u5927\u4e86\u65e0\u8c13\u7684\u7f51\u7edc\u5e26\u5bbd.\u56e0\u6b64\u4f7f\u7528combiner\u51fd\u6570\u53ef\u4ee5\u5728map\u540e\u805a\u5408\u8fd9\u4e9b\u6570\u636e\uff0c\u518d\u4f20\u7ed9reduce\u51cf\u5c11\u7f51\u7edc\u5e26\u5bbd. \u8df3\u8fc7Bad Records : \u7528\u6237\u7f16\u5199\u7684Map\u548cReduce\u51fd\u6570\u53ef\u80fd\u5b58\u5728Bug,\u8fd9\u5c31\u5bfc\u81f4\u5f53Master\u7ed9Worker\u5206\u914d\u4efb\u52a1\u65f6\uff0c\u4f1a\u5c06\u8be5\u673a\u5668\u6253\u6302\uff0c\u800c\u540eMaster \u518d\u8ba9\u5176\u4ed6worker\u91cd\u65b0\u6267\u884c\uff0c\u518d\u6b21\u6253\u6302Worker\uff0c\u6700\u574f\u7684\u53ef\u80fd\u662f\u628a\u6574\u4e2a\u96c6\u7fa4\u6253\u6302,\u56e0\u6b64\u8c37\u6b4c\u5728\u542f\u52a8MapReduce\u65f6\uff0c\u4f1a\u6ce8\u518c\u76f8\u5e94\u7684signal handler,\u5f53\u7279\u5b9a\u7684signal\u88ab\u6355\u83b7\u65f6\uff0c\u4f8b\u5982segment fault\u7b49, \u4f1a\u7ed9Master\u53d1\u9001\u4e00\u6761UDP\uff0c\u5f53Master\u53d1\u73b0\u76f8\u540c\u7684UDP >= 1\u65f6\uff0c\u5c31\u4f1a\u62d2\u7edd\u518d\u6b21\u8c03\u5ea6\u5bf9\u5e94\u7684map/reduce\u4efb\u52a1\u4e86.","title":"MapReduce"},{"location":"paper/mapreduce/#mapreduce","text":"\u901a\u8fc7\u5206\u5e03\u5f0f\u7684\u65b9\u6cd5\u89e3\u51b3\u5927\u6570\u636e\u5904\u7406\u7684\u95ee\u9898 Fault Tolerance (\u53ef\u4ee5\u90e8\u7f72\u5728\u5546\u7528\u670d\u52a1\u5668\u4e0a\uff0c\u5bb9\u5fcd\u4e00\u5b9a\u7684\u673a\u5668\u635f\u574f) \u7a0b\u5e8f\u5458\u53ea\u9700\u4e13\u6ce8\u4e8e\u7f16\u5199\u6570\u636e\u7684\u5904\u7406\u7a0b\u5e8f(\u5373map\u548creduce\u8fd9\u4e24\u4e2a\u51fd\u6570),\u65e0\u9700\u5173\u6ce8\u5206\u5e03\u5f0f\u7684\u95ee\u9898,\u4fbf\u53ef\u4ee5\u8ba9\u5176\u8fdb\u884c\u5206\u5e03\u5f0f\u8ba1\u7b97","title":"MapReduce\u89e3\u51b3\u4e86\u4ec0\u4e48\u95ee\u9898"},{"location":"paper/mapreduce/#mapreduce_1","text":"Many different implementations of the MapReduce interface are possible. The right choice depends on the environment. For example, one implementation may be suitable for a small shared-memory machine, another for a large NUMA multi-processor, and yet another for an even larger collection of networked machines \u6839\u636e\u8bba\u6587\u4e2d\u7684\u63cf\u8ff0,MapReduce\u53ea\u662f\u4e00\u4e2a\u8ba1\u7b97\u6a21\u578b\uff0c\u4f60\u53ef\u4ee5\u6309\u7167\u4f60\u81ea\u5df1\u7684\u9700\u8981\uff0c\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u6700\u9002\u5408\u4f60\u9700\u6c42\u7684\u67b6\u6784.\u5728\u8fd9\u91cc\u6211\u4eec\u4ecb\u7ecd\u8c37\u6b4c\u6240\u4f7f\u7528\u7684\u67b6\u6784.","title":"MapReduce\u7684\u5b9e\u73b0"},{"location":"paper/mapreduce/#_1","text":"\u4ece\u56fe\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u5728\u6574\u4e2aMapReduce\u4e2d\u6709\u4e09\u79cd\u4e0d\u540c\u7684\u89d2\u8272 InputFile: \u5f85\u5904\u7406\u7684\u8f93\u5165\u6587\u4ef6 Master: \u8c03\u5ea6\u6574\u4e2a\u4efb\u52a1\u7684\u6267\u884c\uff0c\u5e76\u4e14\u68c0\u6d4bWorker\u662f\u5426\u5b58\u6d3b Worker: \u542c\u4eceMaster\u8c03\u5ea6,\u5e76\u6267\u884c\u7528\u6237\u6307\u5b9a\u7684Map\u6216\u8005Reduce\u4efb\u52a1 \u6211\u4eec\u5148\u8be6\u7ec6\u4ecb\u7ecd\u8fd9\u4e09\u79cd\u4e0d\u540c\u7684\u89d2\u8272\uff0c\u7136\u540e\u63cf\u8ff0MapReduce\u7684\u603b\u4f53\u6d41\u7a0b InputFile \u56e0\u4e3aMapReduce\u7684\u5e94\u7528\u573a\u666f\u662f\u5927\u6570\u636e\u5904\u7406\uff0c\u6240\u4ee5\u8f93\u5165\u7684\u6587\u4ef6\u8f83\u5927\uff0c\u5f80\u5f80\u662f\u65e0\u6cd5\u5b8c\u5168\u653e\u5728\u5185\u5b58\u4e4b\u4e2d\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5c06\u8f93\u5165\u7684\u6587\u4ef6\u5206\u5272\u4e3a \u5927\u5c0f\u76f8\u7b49\u7684\u6587\u4ef6\u5757(split1, split2, split3....),\u5728\u8c37\u6b4c\u7684\u5b9e\u73b0\u4e2d,\u6587\u4ef6\u5206\u5272\u540e\uff0c\u6bcf\u4efd\u5927\u5c0f\u4e3a16-64MB Master Master\u662f\u4e00\u4e2a\u8f83\u4e3a\u7279\u6b8a\u7684\u89d2\u8272\uff0c\u5168\u5c40\u4ec5\u6709\u4e00\u4e2aMaster,\u5b83\u6709\u4ee5\u4e0b\u7684\u51e0\u4e2a\u804c\u8d23 \u76d1\u542cWorker\u72b6\u6001,\u5f53Worker\u5904\u4e8eIdle\u72b6\u6001\u65f6\uff0c\u7ed9\u4ed6\u5206\u914d\u4efb\u52a1(map/reduce) \u901a\u8fc7\u5fc3\u8df3\u63a2\u6d3bWorker,\u5f53Worker\u5b95\u673a\u65f6,\u6267\u884c\u5bb9\u707e\u64cd\u4f5c\uff0c\u5373\u91cd\u65b0\u6267\u884c. \u63d0\u4f9b\u7ed9Worker\u9700\u8981\u7684\u4fe1\u606f,\u4ee5\u4f7f\u5176\u6b63\u5e38\u8fd0\u884c. Worker Worker\u662f\u5b9e\u9645\u6267\u884c\u7528\u6237\u7f16\u5199\u7a0b\u5e8f\u7684\u89d2\u8272\uff0c\u5b83\u542c\u4eceMaster\u7684\u8c03\u5ea6\uff08\u6267\u884cmap\u6216\u8005reduce\uff09,\u5e76\u4e14\u4eceMaster\u90a3\u91cc\u83b7\u5f97\u6267\u884c\u7a0b\u5e8f\u6240\u9700\u8981\u7684\u4e00\u5207\u4fe1\u606f \u5e76\u5c06\u6267\u884c\u7ed3\u679c\u53cd\u9988\u7ed9Master.","title":"\u89d2\u8272\u63cf\u8ff0"},{"location":"paper/mapreduce/#_2","text":"\u7528\u6237\u63d0\u4ea4\u9700\u8981\u8ba1\u7b97\u7684\u4efb\u52a1,\u548c\u8f93\u5165\u6587\u4ef6 Master\u63a5\u6536\u5230\u4efb\u52a1\u540e\uff0c\u4efb\u52a1\u4f1a\u88ab\u5206\u89e3\u4e3aM\u4e2aMap\u4efb\u52a1\uff0cR\u4e2aReduce\u4efb\u52a1. Master\u4e0d\u65ad\u9009\u62e9\u5904\u4e8eIdle\u72b6\u6001\u7684\u673a\u5668\uff0c\u5e76\u8ba9\u4ed6\u4eec\u6267\u884cMap\u4efb\u52a1\uff0c\u76f4\u81f3Map\u4efb\u52a1\u88ab\u5168\u90e8\u6267\u884c\u5b8c\u6210. \u88ab\u8c03\u5ea6\u6267\u884cMap\u4efb\u52a1\u7684Worker\u4f1a\u8bfb\u53d6\u5bf9\u5e94\u7684\u6587\u4ef6\u5206\u7247\uff0c\u5e76\u5bf9\u8be5\u6587\u4ef6\u8fdb\u884c\u89e3\u6790\u540e\u4f5c\u4e3a\u7528\u6237Map\u7a0b\u5e8f\u7684\u8f93\u5165\uff0c\u7136\u540e\u5c06Map\u8f93\u51fa\u7684\u952e\u503c\u5bf9\u7f13\u5b58\u5728\u5185\u5b58\u4e4b\u4e2d,\u6700\u7ec8\u5199\u5728\u672c\u5730\u78c1\u76d8\u4e0a. \u5199\u5728\u78c1\u76d8\u4e0a\u7684\u952e\u503c\u5bf9\u6587\u4ef6\uff0c\u4f1a\u6839\u636eKey\u5212\u5206\u4e3aR\u4e2a\u6587\u4ef6. ie.(K % R) \u5f53Map\u6267\u884c\u5b8c\u6210\u540e\u4f1a\u5411Master\u6c47\u62a5\u6267\u884c\u5b8c\u6210\uff0c\u5e76\u4e14\u5c06\u6240\u6709\u952e\u503c\u5bf9\u6587\u4ef6\u7684\u4f4d\u7f6e\u544a\u77e5Master \u5f53\u6240\u6709Map\u4efb\u52a1\u5b8c\u6210\u540e\uff0cMaster\u4f1a\u9009\u62e9\u72b6\u6001\u5904\u4e8eIdle\u7684Worker,\u8ba9\u5176\u6267\u884cReduce\u4efb\u52a1\uff0c\u540c\u65f6\u4f1a\u544a\u77e5\u4ed6\u6240\u9700\u8981\u5904\u7406\u7684\u952e\u503c\u5bf9\u6587\u4ef6\u4f4d\u7f6e \u5f53Worker\u88ab\u8c03\u5ea6\u6267\u884cReduce\u4efb\u52a1\u65f6, \u4ed6\u9996\u5148\u4f1a\u53d1\u8d77\u4e00\u4e2arpc\u6765\u8bfb\u53d6\u952e\u503c\u5bf9\u6587\u4ef6,\u5f53\u4ed6\u5c06\u6240\u6709\u6587\u4ef6\u8bfb\u53d6\u5b8c\u6bd5\u540e,\u4ed6\u5bf9\u952e\u503c\u5bf9\u8fdb\u884c\u6392\u5e8f,\u8fd9\u6837\u5b50\u76f8\u540c\u952e\u7684\u952e\u503c\u5bf9\u5c31\u4f1a\u805a\u96c6\u5728\u4e00\u8d77 \u5982\u679c\u952e\u503c\u5bf9\u6587\u4ef6\u8fc7\u5927\uff0c\u65e0\u6cd5\u5168\u90e8\u4fdd\u5b58\u5728\u5185\u5b58\u4e4b\u4e2d\uff0c\u90a3\u4e48\u9700\u8981\u8fdb\u884c\u5916\u6392\u5e8f.Worker\u6700\u540e\u5c06\u5177\u6709\u76f8\u540c\u952e\u7684\u503c\u805a\u5408\u5728\u4e00\u8d77\u5f62\u6210(Key, list Value)\u4f20\u7ed9Reduce\u51fd\u6570\u8fdb\u884c\u8ba1\u7b97,\u5e76\u5c06\u7ed3\u679c \u5199\u5728\u6587\u4ef6\u4e2d \u5f53\u6240\u6709\u7684Reduce\u6267\u884c\u5b8c\u6210\u540e,MapReduce\u4e5f\u5c31\u6267\u884c\u7ed3\u675f\u4e86.","title":"\u603b\u4f53\u6d41\u7a0b"},{"location":"paper/mapreduce/#mapreduce_2","text":"\u901a\u8fc7\u5206\u5e03\u5f0f\u7684\u65b9\u6cd5\u89e3\u51b3\u5927\u6570\u636e\u5904\u7406\u7684\u95ee\u9898 \u901a\u8fc7\u4e00\u53f0Master\u6765\u8c03\u5ea6\u591a\u53f0Worker\u53ef\u4ee5\u5b9e\u73b0\u5206\u5e03\u5f0f\u8ba1\u7b97\uff0c\u540c\u65f6\u6211\u4eec\u53ef\u4ee5\u6ce8\u610f\u5230Master\u4e2d\u9700\u8981\u8bb0\u5f55\u7684Worker\u4fe1\u606f\u6240\u9700\u8981\u7684\u5b58\u50a8\u7a7a\u95f4\u8f83\u5c0f \u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u4e0a\u5343\u7684Worker\u6765\u540c\u65f6\u8ba1\u7b97,\u800c\u4e0d\u4f1a\u7ed9Master\u5e26\u6765\u592a\u5927\u7684\u8d1f\u62c5. Fault Tolerance Master Fail Master\u4f1a\u5468\u671f\u5199\u5185\u90e8\u6570\u636e\u7684checkpoint,\u5982\u679cMaster\u5b95\u673a\uff0c\u4e00\u4e2a\u65b0\u7684\u5907\u4efd\u673a\u5668\u53ef\u4ee5\u901a\u8fc7\u8bfb\u53d6checkpoint\u6765\u6062\u590d\u72b6\u6001. \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u6839\u636e\u4ee5\u4e0a\u7684\u8bbe\u8ba1,Master\u5b95\u673a\u540e\u5c31\u7b97\u4e22\u5931\u4e86\u4e00\u4e9b\u4efb\u52a1\u7684\u8fdb\u5ea6\uff0c\u4f8b\u5982,\u4e0d\u77e5\u9053map_3\u4efb\u52a1\u5df2\u7ecf\u6267\u884c\u5b8c\u6210,\u4f46\u662f\u901a\u8fc7 \u91cd\u65b0\u6267\u884c\uff0c\u5bf9\u4e8e\u6700\u540e\u7ed3\u679c\u7684\u6b63\u786e\u6027\u5e76\u6ca1\u6709\u5f71\u54cd. Worker Fail \u5982\u679cWorker\u5b95\u673a\uff0c\u90a3\u4e48\u8be5Worker\u5b8c\u6210\u7684\u6240\u6709Map\u4efb\u52a1\u5168\u90e8\u8bbe\u7f6e\u4e3a\u53d6\u6d88\uff0c\u5e76\u4e14\u9700\u8981\u5168\u90e8\u91cd\u65b0\u6267\u884c,\u8fd8\u6ca1\u6709\u6267\u884c\u5b8c\u7684Map\u548cReduce\u4efb\u52a1\u4e5f\u5168\u90e8\u53d6\u6d88,\u5e76\u9700\u8981\u5168\u90e8\u6267\u884c. \u4e4b\u6240\u4ee5\u5b8c\u6210\u7684\u6240\u6709Map\u4efb\u52a1\u9700\u8981\u5168\u90e8\u91cd\u65b0\u6267\u884c,\u662f\u56e0\u4e3aMap\u4efb\u52a1\u7684\u7ed3\u679c\u5199\u5728\u672c\u5730\u78c1\u76d8\u4e0a\uff0c\u5f53\u673a\u5668\u5b95\u673a\u65f6\uff0c\u8fd9\u4e9b\u7ed3\u679c\u5c31\u5168\u90e8\u4e0d\u53ef\u83b7\u53d6\u4e86\uff0c\u56e0\u6b64\u9700\u8981\u5168\u90e8\u91cd\u65b0\u6267\u884c. \u800c\u6267\u884c\u5b8c\u6210\u7684Reduce\u4efb\u52a1\u4e0d\u9700\u8981\u91cd\u65b0\u6267\u884c\uff0c\u662f\u56e0\u4e3aReduce\u4efb\u52a1\u7684\u7ed3\u679c\u5199\u5728\u4e86\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf\u4e0a.\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u53ea\u9700\u8981\u901a\u8fc7\u7b80\u5355\u7684\u91cd\u65b0\u6267\u884c\uff0c\u4fbf\u53ef\u4ee5\u4fdd\u8bc1\u5373\u4f7f\u673a\u5668\u5b95\u673a \u4ecd\u7136\u53ef\u4ee5\u5b8c\u6210\u5206\u5e03\u5f0f\u8ba1\u7b97. \u7a0b\u5e8f\u5458\u53ea\u9700\u4e13\u6ce8\u4e8e\u7f16\u5199\u6570\u636e\u7684\u5904\u7406\u7a0b\u5e8f(\u5373map\u548creduce\u8fd9\u4e24\u4e2a\u51fd\u6570),\u65e0\u9700\u5173\u6ce8\u5206\u5e03\u5f0f\u7684\u95ee\u9898,\u4fbf\u53ef\u4ee5\u8ba9\u5176\u8fdb\u884c\u5206\u5e03\u5f0f\u8ba1\u7b97 \u6839\u636eMapReduce\u7684\u8bbe\u8ba1\uff0c\u7a0b\u5e8f\u5458\u552f\u4e00\u9700\u8981\u505a\u7684\u5c31\u662fmap\u548creduce\u8fd9\u4e24\u4e2a\u51fd\u6570\uff0c\u5176\u4ed6\u7684\u5206\u5e03\u5f0f\u8c03\u5ea6\uff0c\u5bb9\u707e\u7b49\u7b56\u7565\u5747\u5728MapReduce\u5185\u90e8\u5b8c\u6210.","title":"MapReduce\u5982\u4f55\u89e3\u51b3\u4e86\u90a3\u4e9b\u95ee\u9898"},{"location":"paper/mapreduce/#mapreduce_3","text":"\u4efb\u52a1\u7684\u7c92\u5ea6 :MapReduce\u4e00\u822c\u4f1a\u5212\u5206\u4e3aM\u4e2aMap\u4efb\u52a1\u548cR\u4e2aReduce\u4efb\u52a1,M\u548cR\u7684\u9009\u62e9\u4e00\u822c\u4f1a\u8fdc\u5927\u4e8e\u673a\u5668\u6570\u91cf\uff0c\u8fd9\u6837\u6709\u5229\u4e8e\u8d1f\u8f7d\u5747\u8861\uff0c\u540c\u65f6\u5982\u679c\u673a\u5668\u5b95\u673a\u7684\u8bdd\uff0c\u4e5f\u53ef\u4ee5\u5feb\u901f\u6062\u590d.\u8bba\u6587\u4e2d\u7ed9\u7684\u4f8b\u5b50\u662f \u5f53\u67092000\u53f0\u673a\u5668\u65f6\uff0cM=200,000 R=5000 Backup\u673a\u5236 : \u5b9e\u9645\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u4f1a\u9047\u5230\u957f\u5c3e\u6548\u5e94,\u5373\u6709\u67d0\u51e0\u53f0\u673a\u5668\u6267\u884c\u7684\u4efb\u52a1\u7279\u522b\u6162\uff0c\u4ece\u800c\u62d6\u7d2f\u4e86\u6574\u4f53\u4efb\u52a1\u7684\u8fdb\u5ea6.MapReduce\u901a\u8fc7Backup\u673a\u5236\u6765\u89e3\u51b3.\u5373\u540c\u65f6\u7ed9\u591a\u4e2a\u673a\u5668\u53d1\u51fa\u540c\u6837\u7684\u4efb\u52a1 \u4efb\u610f\u4e00\u53f0\u673a\u5668\u8fd4\u56de\u7ed3\u679c\u5373\u89c6\u4e3a\u4efb\u52a1\u7ed3\u675f. Combiner\u51fd\u6570 : combiner\u51fd\u6570\u662f\u5728Map\u6267\u884c\u540e\u518d\u6267\u884c\u7684\u51fd\u6570\u3002\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff0cword count\u4e2d\uff0c\u56e0\u4e3amap\u51fd\u6570\u4f1a\u4ea7\u751f\u5927\u91cf\u7684(the,1),\u8fd9\u4e9b\u6570\u636e\u90fd\u4f1a\u901a\u8fc7\u7f51\u7edc\u53d1\u9001\u7ed9Reduce \u8fd9\u52a0\u5927\u4e86\u65e0\u8c13\u7684\u7f51\u7edc\u5e26\u5bbd.\u56e0\u6b64\u4f7f\u7528combiner\u51fd\u6570\u53ef\u4ee5\u5728map\u540e\u805a\u5408\u8fd9\u4e9b\u6570\u636e\uff0c\u518d\u4f20\u7ed9reduce\u51cf\u5c11\u7f51\u7edc\u5e26\u5bbd. \u8df3\u8fc7Bad Records : \u7528\u6237\u7f16\u5199\u7684Map\u548cReduce\u51fd\u6570\u53ef\u80fd\u5b58\u5728Bug,\u8fd9\u5c31\u5bfc\u81f4\u5f53Master\u7ed9Worker\u5206\u914d\u4efb\u52a1\u65f6\uff0c\u4f1a\u5c06\u8be5\u673a\u5668\u6253\u6302\uff0c\u800c\u540eMaster \u518d\u8ba9\u5176\u4ed6worker\u91cd\u65b0\u6267\u884c\uff0c\u518d\u6b21\u6253\u6302Worker\uff0c\u6700\u574f\u7684\u53ef\u80fd\u662f\u628a\u6574\u4e2a\u96c6\u7fa4\u6253\u6302,\u56e0\u6b64\u8c37\u6b4c\u5728\u542f\u52a8MapReduce\u65f6\uff0c\u4f1a\u6ce8\u518c\u76f8\u5e94\u7684signal handler,\u5f53\u7279\u5b9a\u7684signal\u88ab\u6355\u83b7\u65f6\uff0c\u4f8b\u5982segment fault\u7b49, \u4f1a\u7ed9Master\u53d1\u9001\u4e00\u6761UDP\uff0c\u5f53Master\u53d1\u73b0\u76f8\u540c\u7684UDP >= 1\u65f6\uff0c\u5c31\u4f1a\u62d2\u7edd\u518d\u6b21\u8c03\u5ea6\u5bf9\u5e94\u7684map/reduce\u4efb\u52a1\u4e86.","title":"MapReduce\u7684\u4f18\u5316"}]}